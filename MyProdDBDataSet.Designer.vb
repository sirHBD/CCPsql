'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("MyProdDBDataSet"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class MyProdDBDataSet
    Inherits Global.System.Data.DataSet
    
    Private tabletblProduct As tblProductDataTable
    
    Private tabletblCoInfo As tblCoInfoDataTable
    
    Private tablelstQuoteHeaderDetails As lstQuoteHeaderDetailsDataTable
    
    Private tablelstReceipts As lstReceiptsDataTable
    
    Private tablelstInvoiceHeaderDetails As lstInvoiceHeaderDetailsDataTable
    
    Private tablelstPOHeaderDetails As lstPOHeaderDetailsDataTable
    
    Private tablelstJCDetails As lstJCDetailsDataTable
    
    Private tabletblJCMaterial As tblJCMaterialDataTable
    
    Private tabletblJCLabour As tblJCLabourDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("tblProduct")) Is Nothing) Then
                MyBase.Tables.Add(New tblProductDataTable(ds.Tables("tblProduct")))
            End If
            If (Not (ds.Tables("tblCoInfo")) Is Nothing) Then
                MyBase.Tables.Add(New tblCoInfoDataTable(ds.Tables("tblCoInfo")))
            End If
            If (Not (ds.Tables("lstQuoteHeaderDetails")) Is Nothing) Then
                MyBase.Tables.Add(New lstQuoteHeaderDetailsDataTable(ds.Tables("lstQuoteHeaderDetails")))
            End If
            If (Not (ds.Tables("lstReceipts")) Is Nothing) Then
                MyBase.Tables.Add(New lstReceiptsDataTable(ds.Tables("lstReceipts")))
            End If
            If (Not (ds.Tables("lstInvoiceHeaderDetails")) Is Nothing) Then
                MyBase.Tables.Add(New lstInvoiceHeaderDetailsDataTable(ds.Tables("lstInvoiceHeaderDetails")))
            End If
            If (Not (ds.Tables("lstPOHeaderDetails")) Is Nothing) Then
                MyBase.Tables.Add(New lstPOHeaderDetailsDataTable(ds.Tables("lstPOHeaderDetails")))
            End If
            If (Not (ds.Tables("lstJCDetails")) Is Nothing) Then
                MyBase.Tables.Add(New lstJCDetailsDataTable(ds.Tables("lstJCDetails")))
            End If
            If (Not (ds.Tables("tblJCMaterial")) Is Nothing) Then
                MyBase.Tables.Add(New tblJCMaterialDataTable(ds.Tables("tblJCMaterial")))
            End If
            If (Not (ds.Tables("tblJCLabour")) Is Nothing) Then
                MyBase.Tables.Add(New tblJCLabourDataTable(ds.Tables("tblJCLabour")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tblProduct() As tblProductDataTable
        Get
            Return Me.tabletblProduct
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tblCoInfo() As tblCoInfoDataTable
        Get
            Return Me.tabletblCoInfo
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property lstQuoteHeaderDetails() As lstQuoteHeaderDetailsDataTable
        Get
            Return Me.tablelstQuoteHeaderDetails
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property lstReceipts() As lstReceiptsDataTable
        Get
            Return Me.tablelstReceipts
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property lstInvoiceHeaderDetails() As lstInvoiceHeaderDetailsDataTable
        Get
            Return Me.tablelstInvoiceHeaderDetails
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property lstPOHeaderDetails() As lstPOHeaderDetailsDataTable
        Get
            Return Me.tablelstPOHeaderDetails
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property lstJCDetails() As lstJCDetailsDataTable
        Get
            Return Me.tablelstJCDetails
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tblJCMaterial() As tblJCMaterialDataTable
        Get
            Return Me.tabletblJCMaterial
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tblJCLabour() As tblJCLabourDataTable
        Get
            Return Me.tabletblJCLabour
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As MyProdDBDataSet = CType(MyBase.Clone,MyProdDBDataSet)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("tblProduct")) Is Nothing) Then
                MyBase.Tables.Add(New tblProductDataTable(ds.Tables("tblProduct")))
            End If
            If (Not (ds.Tables("tblCoInfo")) Is Nothing) Then
                MyBase.Tables.Add(New tblCoInfoDataTable(ds.Tables("tblCoInfo")))
            End If
            If (Not (ds.Tables("lstQuoteHeaderDetails")) Is Nothing) Then
                MyBase.Tables.Add(New lstQuoteHeaderDetailsDataTable(ds.Tables("lstQuoteHeaderDetails")))
            End If
            If (Not (ds.Tables("lstReceipts")) Is Nothing) Then
                MyBase.Tables.Add(New lstReceiptsDataTable(ds.Tables("lstReceipts")))
            End If
            If (Not (ds.Tables("lstInvoiceHeaderDetails")) Is Nothing) Then
                MyBase.Tables.Add(New lstInvoiceHeaderDetailsDataTable(ds.Tables("lstInvoiceHeaderDetails")))
            End If
            If (Not (ds.Tables("lstPOHeaderDetails")) Is Nothing) Then
                MyBase.Tables.Add(New lstPOHeaderDetailsDataTable(ds.Tables("lstPOHeaderDetails")))
            End If
            If (Not (ds.Tables("lstJCDetails")) Is Nothing) Then
                MyBase.Tables.Add(New lstJCDetailsDataTable(ds.Tables("lstJCDetails")))
            End If
            If (Not (ds.Tables("tblJCMaterial")) Is Nothing) Then
                MyBase.Tables.Add(New tblJCMaterialDataTable(ds.Tables("tblJCMaterial")))
            End If
            If (Not (ds.Tables("tblJCLabour")) Is Nothing) Then
                MyBase.Tables.Add(New tblJCLabourDataTable(ds.Tables("tblJCLabour")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tabletblProduct = CType(MyBase.Tables("tblProduct"),tblProductDataTable)
        If (initTable = true) Then
            If (Not (Me.tabletblProduct) Is Nothing) Then
                Me.tabletblProduct.InitVars
            End If
        End If
        Me.tabletblCoInfo = CType(MyBase.Tables("tblCoInfo"),tblCoInfoDataTable)
        If (initTable = true) Then
            If (Not (Me.tabletblCoInfo) Is Nothing) Then
                Me.tabletblCoInfo.InitVars
            End If
        End If
        Me.tablelstQuoteHeaderDetails = CType(MyBase.Tables("lstQuoteHeaderDetails"),lstQuoteHeaderDetailsDataTable)
        If (initTable = true) Then
            If (Not (Me.tablelstQuoteHeaderDetails) Is Nothing) Then
                Me.tablelstQuoteHeaderDetails.InitVars
            End If
        End If
        Me.tablelstReceipts = CType(MyBase.Tables("lstReceipts"),lstReceiptsDataTable)
        If (initTable = true) Then
            If (Not (Me.tablelstReceipts) Is Nothing) Then
                Me.tablelstReceipts.InitVars
            End If
        End If
        Me.tablelstInvoiceHeaderDetails = CType(MyBase.Tables("lstInvoiceHeaderDetails"),lstInvoiceHeaderDetailsDataTable)
        If (initTable = true) Then
            If (Not (Me.tablelstInvoiceHeaderDetails) Is Nothing) Then
                Me.tablelstInvoiceHeaderDetails.InitVars
            End If
        End If
        Me.tablelstPOHeaderDetails = CType(MyBase.Tables("lstPOHeaderDetails"),lstPOHeaderDetailsDataTable)
        If (initTable = true) Then
            If (Not (Me.tablelstPOHeaderDetails) Is Nothing) Then
                Me.tablelstPOHeaderDetails.InitVars
            End If
        End If
        Me.tablelstJCDetails = CType(MyBase.Tables("lstJCDetails"),lstJCDetailsDataTable)
        If (initTable = true) Then
            If (Not (Me.tablelstJCDetails) Is Nothing) Then
                Me.tablelstJCDetails.InitVars
            End If
        End If
        Me.tabletblJCMaterial = CType(MyBase.Tables("tblJCMaterial"),tblJCMaterialDataTable)
        If (initTable = true) Then
            If (Not (Me.tabletblJCMaterial) Is Nothing) Then
                Me.tabletblJCMaterial.InitVars
            End If
        End If
        Me.tabletblJCLabour = CType(MyBase.Tables("tblJCLabour"),tblJCLabourDataTable)
        If (initTable = true) Then
            If (Not (Me.tabletblJCLabour) Is Nothing) Then
                Me.tabletblJCLabour.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub InitClass()
        Me.DataSetName = "MyProdDBDataSet"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/MyProdDBDataSet.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tabletblProduct = New tblProductDataTable()
        MyBase.Tables.Add(Me.tabletblProduct)
        Me.tabletblCoInfo = New tblCoInfoDataTable()
        MyBase.Tables.Add(Me.tabletblCoInfo)
        Me.tablelstQuoteHeaderDetails = New lstQuoteHeaderDetailsDataTable()
        MyBase.Tables.Add(Me.tablelstQuoteHeaderDetails)
        Me.tablelstReceipts = New lstReceiptsDataTable()
        MyBase.Tables.Add(Me.tablelstReceipts)
        Me.tablelstInvoiceHeaderDetails = New lstInvoiceHeaderDetailsDataTable()
        MyBase.Tables.Add(Me.tablelstInvoiceHeaderDetails)
        Me.tablelstPOHeaderDetails = New lstPOHeaderDetailsDataTable()
        MyBase.Tables.Add(Me.tablelstPOHeaderDetails)
        Me.tablelstJCDetails = New lstJCDetailsDataTable()
        MyBase.Tables.Add(Me.tablelstJCDetails)
        Me.tabletblJCMaterial = New tblJCMaterialDataTable()
        MyBase.Tables.Add(Me.tabletblJCMaterial)
        Me.tabletblJCLabour = New tblJCLabourDataTable()
        MyBase.Tables.Add(Me.tabletblJCLabour)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializetblProduct() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializetblCoInfo() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializelstQuoteHeaderDetails() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializelstReceipts() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializelstInvoiceHeaderDetails() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializelstPOHeaderDetails() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializelstJCDetails() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializetblJCMaterial() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializetblJCLabour() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As MyProdDBDataSet = New MyProdDBDataSet()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub tblProductRowChangeEventHandler(ByVal sender As Object, ByVal e As tblProductRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub tblCoInfoRowChangeEventHandler(ByVal sender As Object, ByVal e As tblCoInfoRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub lstQuoteHeaderDetailsRowChangeEventHandler(ByVal sender As Object, ByVal e As lstQuoteHeaderDetailsRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub lstReceiptsRowChangeEventHandler(ByVal sender As Object, ByVal e As lstReceiptsRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub lstInvoiceHeaderDetailsRowChangeEventHandler(ByVal sender As Object, ByVal e As lstInvoiceHeaderDetailsRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub lstPOHeaderDetailsRowChangeEventHandler(ByVal sender As Object, ByVal e As lstPOHeaderDetailsRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub lstJCDetailsRowChangeEventHandler(ByVal sender As Object, ByVal e As lstJCDetailsRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub tblJCMaterialRowChangeEventHandler(ByVal sender As Object, ByVal e As tblJCMaterialRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub tblJCLabourRowChangeEventHandler(ByVal sender As Object, ByVal e As tblJCLabourRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class tblProductDataTable
        Inherits Global.System.Data.TypedTableBase(Of tblProductRow)
        
        Private columnidtblProduct As Global.System.Data.DataColumn
        
        Private columntxtProdCde As Global.System.Data.DataColumn
        
        Private columntxtProdDesc As Global.System.Data.DataColumn
        
        Private columntxtCostSortCat As Global.System.Data.DataColumn
        
        Private columntxtCostSortItem As Global.System.Data.DataColumn
        
        Private columnFK_idtblCoInfo As Global.System.Data.DataColumn
        
        Private columntxtProdSpec1 As Global.System.Data.DataColumn
        
        Private columntxtProdSpec2 As Global.System.Data.DataColumn
        
        Private columntxtProdSpec3 As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "tblProduct"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property idtblProductColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnidtblProduct
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property txtProdCdeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntxtProdCde
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property txtProdDescColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntxtProdDesc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property txtCostSortCatColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntxtCostSortCat
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property txtCostSortItemColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntxtCostSortItem
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FK_idtblCoInfoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFK_idtblCoInfo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property txtProdSpec1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columntxtProdSpec1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property txtProdSpec2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columntxtProdSpec2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property txtProdSpec3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columntxtProdSpec3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As tblProductRow
            Get
                Return CType(Me.Rows(index),tblProductRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event tblProductRowChanging As tblProductRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event tblProductRowChanged As tblProductRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event tblProductRowDeleting As tblProductRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event tblProductRowDeleted As tblProductRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddtblProductRow(ByVal row As tblProductRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddtblProductRow(ByVal txtProdCde As String, ByVal txtProdDesc As String, ByVal txtCostSortCat As String, ByVal txtCostSortItem As String, ByVal FK_idtblCoInfo As Integer, ByVal txtProdSpec1 As String, ByVal txtProdSpec2 As String, ByVal txtProdSpec3 As String) As tblProductRow
            Dim rowtblProductRow As tblProductRow = CType(Me.NewRow,tblProductRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, txtProdCde, txtProdDesc, txtCostSortCat, txtCostSortItem, FK_idtblCoInfo, txtProdSpec1, txtProdSpec2, txtProdSpec3}
            rowtblProductRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowtblProductRow)
            Return rowtblProductRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByidtblProduct(ByVal idtblProduct As Integer) As tblProductRow
            Return CType(Me.Rows.Find(New Object() {idtblProduct}),tblProductRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As tblProductDataTable = CType(MyBase.Clone,tblProductDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New tblProductDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnidtblProduct = MyBase.Columns("idtblProduct")
            Me.columntxtProdCde = MyBase.Columns("txtProdCde")
            Me.columntxtProdDesc = MyBase.Columns("txtProdDesc")
            Me.columntxtCostSortCat = MyBase.Columns("txtCostSortCat")
            Me.columntxtCostSortItem = MyBase.Columns("txtCostSortItem")
            Me.columnFK_idtblCoInfo = MyBase.Columns("FK_idtblCoInfo")
            Me.columntxtProdSpec1 = MyBase.Columns("txtProdSpec1")
            Me.columntxtProdSpec2 = MyBase.Columns("txtProdSpec2")
            Me.columntxtProdSpec3 = MyBase.Columns("txtProdSpec3")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnidtblProduct = New Global.System.Data.DataColumn("idtblProduct", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnidtblProduct)
            Me.columntxtProdCde = New Global.System.Data.DataColumn("txtProdCde", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntxtProdCde)
            Me.columntxtProdDesc = New Global.System.Data.DataColumn("txtProdDesc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntxtProdDesc)
            Me.columntxtCostSortCat = New Global.System.Data.DataColumn("txtCostSortCat", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntxtCostSortCat)
            Me.columntxtCostSortItem = New Global.System.Data.DataColumn("txtCostSortItem", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntxtCostSortItem)
            Me.columnFK_idtblCoInfo = New Global.System.Data.DataColumn("FK_idtblCoInfo", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFK_idtblCoInfo)
            Me.columntxtProdSpec1 = New Global.System.Data.DataColumn("txtProdSpec1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntxtProdSpec1)
            Me.columntxtProdSpec2 = New Global.System.Data.DataColumn("txtProdSpec2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntxtProdSpec2)
            Me.columntxtProdSpec3 = New Global.System.Data.DataColumn("txtProdSpec3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntxtProdSpec3)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnidtblProduct}, true))
            Me.columnidtblProduct.AutoIncrement = true
            Me.columnidtblProduct.AutoIncrementSeed = -1
            Me.columnidtblProduct.AutoIncrementStep = -1
            Me.columnidtblProduct.AllowDBNull = false
            Me.columnidtblProduct.Unique = true
            Me.columntxtProdCde.MaxLength = 255
            Me.columntxtProdDesc.MaxLength = 255
            Me.columntxtCostSortCat.MaxLength = 255
            Me.columntxtCostSortItem.MaxLength = 255
            Me.columntxtProdSpec1.MaxLength = 255
            Me.columntxtProdSpec2.MaxLength = 255
            Me.columntxtProdSpec3.MaxLength = 255
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewtblProductRow() As tblProductRow
            Return CType(Me.NewRow,tblProductRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New tblProductRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(tblProductRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tblProductRowChangedEvent) Is Nothing) Then
                RaiseEvent tblProductRowChanged(Me, New tblProductRowChangeEvent(CType(e.Row,tblProductRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tblProductRowChangingEvent) Is Nothing) Then
                RaiseEvent tblProductRowChanging(Me, New tblProductRowChangeEvent(CType(e.Row,tblProductRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tblProductRowDeletedEvent) Is Nothing) Then
                RaiseEvent tblProductRowDeleted(Me, New tblProductRowChangeEvent(CType(e.Row,tblProductRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tblProductRowDeletingEvent) Is Nothing) Then
                RaiseEvent tblProductRowDeleting(Me, New tblProductRowChangeEvent(CType(e.Row,tblProductRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemovetblProductRow(ByVal row As tblProductRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As MyProdDBDataSet = New MyProdDBDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "tblProductDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class tblCoInfoDataTable
        Inherits Global.System.Data.TypedTableBase(Of tblCoInfoRow)
        
        Private columnidtblCoInfo As Global.System.Data.DataColumn
        
        Private columntxtCoInfo As Global.System.Data.DataColumn
        
        Private columntxtCoAd1 As Global.System.Data.DataColumn
        
        Private columntxtCoAd2 As Global.System.Data.DataColumn
        
        Private columntxtCoAd3 As Global.System.Data.DataColumn
        
        Private columntxtCoPosCde As Global.System.Data.DataColumn
        
        Private columndteFinYearEnd As Global.System.Data.DataColumn
        
        Private columndblNormalLabHours As Global.System.Data.DataColumn
        
        Private columndblFridayLabHours As Global.System.Data.DataColumn
        
        Private columnperSalesIncrease As Global.System.Data.DataColumn
        
        Private columndblLeaveDays As Global.System.Data.DataColumn
        
        Private columnperPriceIncrease As Global.System.Data.DataColumn
        
        Private columnperLabIncrease As Global.System.Data.DataColumn
        
        Private columnperOHIncrease As Global.System.Data.DataColumn
        
        Private columnperMatPriceIncrease As Global.System.Data.DataColumn
        
        Private columnperRentIncrease As Global.System.Data.DataColumn
        
        Private columndblCashOB As Global.System.Data.DataColumn
        
        Private columndblDebOB As Global.System.Data.DataColumn
        
        Private columndblCredOB As Global.System.Data.DataColumn
        
        Private columntxtProdUnique As Global.System.Data.DataColumn
        
        Private columndblAvgDebDays As Global.System.Data.DataColumn
        
        Private columndblAvgPayDays As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "tblCoInfo"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property idtblCoInfoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnidtblCoInfo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property txtCoInfoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntxtCoInfo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property txtCoAd1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columntxtCoAd1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property txtCoAd2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columntxtCoAd2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property txtCoAd3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columntxtCoAd3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property txtCoPosCdeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntxtCoPosCde
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property dteFinYearEndColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndteFinYearEnd
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property dblNormalLabHoursColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndblNormalLabHours
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property dblFridayLabHoursColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndblFridayLabHours
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property perSalesIncreaseColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnperSalesIncrease
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property dblLeaveDaysColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndblLeaveDays
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property perPriceIncreaseColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnperPriceIncrease
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property perLabIncreaseColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnperLabIncrease
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property perOHIncreaseColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnperOHIncrease
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property perMatPriceIncreaseColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnperMatPriceIncrease
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property perRentIncreaseColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnperRentIncrease
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property dblCashOBColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndblCashOB
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property dblDebOBColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndblDebOB
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property dblCredOBColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndblCredOB
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property txtProdUniqueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntxtProdUnique
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property dblAvgDebDaysColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndblAvgDebDays
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property dblAvgPayDaysColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndblAvgPayDays
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As tblCoInfoRow
            Get
                Return CType(Me.Rows(index),tblCoInfoRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event tblCoInfoRowChanging As tblCoInfoRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event tblCoInfoRowChanged As tblCoInfoRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event tblCoInfoRowDeleting As tblCoInfoRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event tblCoInfoRowDeleted As tblCoInfoRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddtblCoInfoRow(ByVal row As tblCoInfoRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddtblCoInfoRow( _
                    ByVal txtCoInfo As String,  _
                    ByVal txtCoAd1 As String,  _
                    ByVal txtCoAd2 As String,  _
                    ByVal txtCoAd3 As String,  _
                    ByVal txtCoPosCde As String,  _
                    ByVal dteFinYearEnd As Date,  _
                    ByVal dblNormalLabHours As Integer,  _
                    ByVal dblFridayLabHours As Integer,  _
                    ByVal perSalesIncrease As Double,  _
                    ByVal dblLeaveDays As Integer,  _
                    ByVal perPriceIncrease As Double,  _
                    ByVal perLabIncrease As Double,  _
                    ByVal perOHIncrease As Double,  _
                    ByVal perMatPriceIncrease As Double,  _
                    ByVal perRentIncrease As Double,  _
                    ByVal dblCashOB As Double,  _
                    ByVal dblDebOB As Double,  _
                    ByVal dblCredOB As Double,  _
                    ByVal txtProdUnique As String,  _
                    ByVal dblAvgDebDays As Integer,  _
                    ByVal dblAvgPayDays As Integer) As tblCoInfoRow
            Dim rowtblCoInfoRow As tblCoInfoRow = CType(Me.NewRow,tblCoInfoRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, txtCoInfo, txtCoAd1, txtCoAd2, txtCoAd3, txtCoPosCde, dteFinYearEnd, dblNormalLabHours, dblFridayLabHours, perSalesIncrease, dblLeaveDays, perPriceIncrease, perLabIncrease, perOHIncrease, perMatPriceIncrease, perRentIncrease, dblCashOB, dblDebOB, dblCredOB, txtProdUnique, dblAvgDebDays, dblAvgPayDays}
            rowtblCoInfoRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowtblCoInfoRow)
            Return rowtblCoInfoRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByidtblCoInfo(ByVal idtblCoInfo As Integer) As tblCoInfoRow
            Return CType(Me.Rows.Find(New Object() {idtblCoInfo}),tblCoInfoRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As tblCoInfoDataTable = CType(MyBase.Clone,tblCoInfoDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New tblCoInfoDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnidtblCoInfo = MyBase.Columns("idtblCoInfo")
            Me.columntxtCoInfo = MyBase.Columns("txtCoInfo")
            Me.columntxtCoAd1 = MyBase.Columns("txtCoAd1")
            Me.columntxtCoAd2 = MyBase.Columns("txtCoAd2")
            Me.columntxtCoAd3 = MyBase.Columns("txtCoAd3")
            Me.columntxtCoPosCde = MyBase.Columns("txtCoPosCde")
            Me.columndteFinYearEnd = MyBase.Columns("dteFinYearEnd")
            Me.columndblNormalLabHours = MyBase.Columns("dblNormalLabHours")
            Me.columndblFridayLabHours = MyBase.Columns("dblFridayLabHours")
            Me.columnperSalesIncrease = MyBase.Columns("perSalesIncrease")
            Me.columndblLeaveDays = MyBase.Columns("dblLeaveDays")
            Me.columnperPriceIncrease = MyBase.Columns("perPriceIncrease")
            Me.columnperLabIncrease = MyBase.Columns("perLabIncrease")
            Me.columnperOHIncrease = MyBase.Columns("perOHIncrease")
            Me.columnperMatPriceIncrease = MyBase.Columns("perMatPriceIncrease")
            Me.columnperRentIncrease = MyBase.Columns("perRentIncrease")
            Me.columndblCashOB = MyBase.Columns("dblCashOB")
            Me.columndblDebOB = MyBase.Columns("dblDebOB")
            Me.columndblCredOB = MyBase.Columns("dblCredOB")
            Me.columntxtProdUnique = MyBase.Columns("txtProdUnique")
            Me.columndblAvgDebDays = MyBase.Columns("dblAvgDebDays")
            Me.columndblAvgPayDays = MyBase.Columns("dblAvgPayDays")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnidtblCoInfo = New Global.System.Data.DataColumn("idtblCoInfo", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnidtblCoInfo)
            Me.columntxtCoInfo = New Global.System.Data.DataColumn("txtCoInfo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntxtCoInfo)
            Me.columntxtCoAd1 = New Global.System.Data.DataColumn("txtCoAd1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntxtCoAd1)
            Me.columntxtCoAd2 = New Global.System.Data.DataColumn("txtCoAd2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntxtCoAd2)
            Me.columntxtCoAd3 = New Global.System.Data.DataColumn("txtCoAd3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntxtCoAd3)
            Me.columntxtCoPosCde = New Global.System.Data.DataColumn("txtCoPosCde", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntxtCoPosCde)
            Me.columndteFinYearEnd = New Global.System.Data.DataColumn("dteFinYearEnd", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndteFinYearEnd)
            Me.columndblNormalLabHours = New Global.System.Data.DataColumn("dblNormalLabHours", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndblNormalLabHours)
            Me.columndblFridayLabHours = New Global.System.Data.DataColumn("dblFridayLabHours", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndblFridayLabHours)
            Me.columnperSalesIncrease = New Global.System.Data.DataColumn("perSalesIncrease", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnperSalesIncrease)
            Me.columndblLeaveDays = New Global.System.Data.DataColumn("dblLeaveDays", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndblLeaveDays)
            Me.columnperPriceIncrease = New Global.System.Data.DataColumn("perPriceIncrease", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnperPriceIncrease)
            Me.columnperLabIncrease = New Global.System.Data.DataColumn("perLabIncrease", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnperLabIncrease)
            Me.columnperOHIncrease = New Global.System.Data.DataColumn("perOHIncrease", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnperOHIncrease)
            Me.columnperMatPriceIncrease = New Global.System.Data.DataColumn("perMatPriceIncrease", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnperMatPriceIncrease)
            Me.columnperRentIncrease = New Global.System.Data.DataColumn("perRentIncrease", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnperRentIncrease)
            Me.columndblCashOB = New Global.System.Data.DataColumn("dblCashOB", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndblCashOB)
            Me.columndblDebOB = New Global.System.Data.DataColumn("dblDebOB", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndblDebOB)
            Me.columndblCredOB = New Global.System.Data.DataColumn("dblCredOB", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndblCredOB)
            Me.columntxtProdUnique = New Global.System.Data.DataColumn("txtProdUnique", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntxtProdUnique)
            Me.columndblAvgDebDays = New Global.System.Data.DataColumn("dblAvgDebDays", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndblAvgDebDays)
            Me.columndblAvgPayDays = New Global.System.Data.DataColumn("dblAvgPayDays", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndblAvgPayDays)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnidtblCoInfo}, true))
            Me.columnidtblCoInfo.AutoIncrement = true
            Me.columnidtblCoInfo.AutoIncrementSeed = -1
            Me.columnidtblCoInfo.AutoIncrementStep = -1
            Me.columnidtblCoInfo.AllowDBNull = false
            Me.columnidtblCoInfo.Unique = true
            Me.columntxtCoInfo.MaxLength = 255
            Me.columntxtCoAd1.MaxLength = 255
            Me.columntxtCoAd2.MaxLength = 255
            Me.columntxtCoAd3.MaxLength = 255
            Me.columntxtCoPosCde.MaxLength = 255
            Me.columntxtProdUnique.MaxLength = 255
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewtblCoInfoRow() As tblCoInfoRow
            Return CType(Me.NewRow,tblCoInfoRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New tblCoInfoRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(tblCoInfoRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tblCoInfoRowChangedEvent) Is Nothing) Then
                RaiseEvent tblCoInfoRowChanged(Me, New tblCoInfoRowChangeEvent(CType(e.Row,tblCoInfoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tblCoInfoRowChangingEvent) Is Nothing) Then
                RaiseEvent tblCoInfoRowChanging(Me, New tblCoInfoRowChangeEvent(CType(e.Row,tblCoInfoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tblCoInfoRowDeletedEvent) Is Nothing) Then
                RaiseEvent tblCoInfoRowDeleted(Me, New tblCoInfoRowChangeEvent(CType(e.Row,tblCoInfoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tblCoInfoRowDeletingEvent) Is Nothing) Then
                RaiseEvent tblCoInfoRowDeleting(Me, New tblCoInfoRowChangeEvent(CType(e.Row,tblCoInfoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemovetblCoInfoRow(ByVal row As tblCoInfoRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As MyProdDBDataSet = New MyProdDBDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "tblCoInfoDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class lstQuoteHeaderDetailsDataTable
        Inherits Global.System.Data.TypedTableBase(Of lstQuoteHeaderDetailsRow)
        
        Private columnid_tblQuoteHeader As Global.System.Data.DataColumn
        
        Private columnfk_idtblCustomer As Global.System.Data.DataColumn
        
        Private columndblQuoteNum As Global.System.Data.DataColumn
        
        Private columntxtCusDesc As Global.System.Data.DataColumn
        
        Private columntxtAddPos As Global.System.Data.DataColumn
        
        Private columntxtContactName As Global.System.Data.DataColumn
        
        Private columntxtEmail As Global.System.Data.DataColumn
        
        Private columntxtPhone1 As Global.System.Data.DataColumn
        
        Private columntxtPhone2 As Global.System.Data.DataColumn
        
        Private columntxtFax As Global.System.Data.DataColumn
        
        Private columntxtQuoteDate As Global.System.Data.DataColumn
        
        Private columntxtQuoteOperator As Global.System.Data.DataColumn
        
        Private columntxtQuoteStatus As Global.System.Data.DataColumn
        
        Private columntxtQuoteDocName As Global.System.Data.DataColumn
        
        Private columntxtNotes As Global.System.Data.DataColumn
        
        Private columnid_tblQuoteDetails As Global.System.Data.DataColumn
        
        Private columnfk_tblQuoteHeader As Global.System.Data.DataColumn
        
        Private columnfk_tblProduct As Global.System.Data.DataColumn
        
        Private columntxtProdCde As Global.System.Data.DataColumn
        
        Private columntxtProdDesc As Global.System.Data.DataColumn
        
        Private columntxtProdSpec1 As Global.System.Data.DataColumn
        
        Private columntxtProdSpec2 As Global.System.Data.DataColumn
        
        Private columntxtProdSpec3 As Global.System.Data.DataColumn
        
        Private columndecQty As Global.System.Data.DataColumn
        
        Private columndecSellingPrice As Global.System.Data.DataColumn
        
        Private columndecSellingValue As Global.System.Data.DataColumn
        
        Private columndecOriginalPrice As Global.System.Data.DataColumn
        
        Private columndecVatPercentage As Global.System.Data.DataColumn
        
        Private columndecVatAmount As Global.System.Data.DataColumn
        
        Private columndecQuoteLineAmount As Global.System.Data.DataColumn
        
        Private columntxtCompanyNo As Global.System.Data.DataColumn
        
        Private columntxtCoInfo As Global.System.Data.DataColumn
        
        Private columntxtCoAd1 As Global.System.Data.DataColumn
        
        Private columntxtCoAd2 As Global.System.Data.DataColumn
        
        Private columntxtCoAd3 As Global.System.Data.DataColumn
        
        Private columntxtCoPosCde As Global.System.Data.DataColumn
        
        Private columntxtVatNo As Global.System.Data.DataColumn
        
        Private columntxtRegNo As Global.System.Data.DataColumn
        
        Private columntxtDirectors As Global.System.Data.DataColumn
        
        Private columntxtPrintName As Global.System.Data.DataColumn
        
        Private columntxtCoEmail As Global.System.Data.DataColumn
        
        Private columntxtTelNo As Global.System.Data.DataColumn
        
        Private columntxtFaxNo As Global.System.Data.DataColumn
        
        Private columntxtUOM As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "lstQuoteHeaderDetails"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property id_tblQuoteHeaderColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnid_tblQuoteHeader
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property fk_idtblCustomerColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfk_idtblCustomer
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property dblQuoteNumColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndblQuoteNum
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property txtCusDescColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntxtCusDesc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property txtAddPosColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntxtAddPos
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property txtContactNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntxtContactName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property txtEmailColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntxtEmail
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property txtPhone1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columntxtPhone1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property txtPhone2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columntxtPhone2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property txtFaxColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntxtFax
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property txtQuoteDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntxtQuoteDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property txtQuoteOperatorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntxtQuoteOperator
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property txtQuoteStatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntxtQuoteStatus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property txtQuoteDocNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntxtQuoteDocName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property txtNotesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntxtNotes
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property id_tblQuoteDetailsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnid_tblQuoteDetails
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property fk_tblQuoteHeaderColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfk_tblQuoteHeader
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property fk_tblProductColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfk_tblProduct
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property txtProdCdeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntxtProdCde
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property txtProdDescColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntxtProdDesc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property txtProdSpec1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columntxtProdSpec1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property txtProdSpec2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columntxtProdSpec2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property txtProdSpec3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columntxtProdSpec3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property decQtyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndecQty
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property decSellingPriceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndecSellingPrice
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property decSellingValueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndecSellingValue
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property decOriginalPriceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndecOriginalPrice
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property decVatPercentageColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndecVatPercentage
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property decVatAmountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndecVatAmount
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property decQuoteLineAmountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndecQuoteLineAmount
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property txtCompanyNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntxtCompanyNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property txtCoInfoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntxtCoInfo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property txtCoAd1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columntxtCoAd1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property txtCoAd2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columntxtCoAd2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property txtCoAd3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columntxtCoAd3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property txtCoPosCdeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntxtCoPosCde
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property txtVatNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntxtVatNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property txtRegNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntxtRegNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property txtDirectorsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntxtDirectors
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property txtPrintNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntxtPrintName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property txtCoEmailColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntxtCoEmail
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property txtTelNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntxtTelNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property txtFaxNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntxtFaxNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property txtUOMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntxtUOM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As lstQuoteHeaderDetailsRow
            Get
                Return CType(Me.Rows(index),lstQuoteHeaderDetailsRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event lstQuoteHeaderDetailsRowChanging As lstQuoteHeaderDetailsRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event lstQuoteHeaderDetailsRowChanged As lstQuoteHeaderDetailsRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event lstQuoteHeaderDetailsRowDeleting As lstQuoteHeaderDetailsRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event lstQuoteHeaderDetailsRowDeleted As lstQuoteHeaderDetailsRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddlstQuoteHeaderDetailsRow(ByVal row As lstQuoteHeaderDetailsRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddlstQuoteHeaderDetailsRow( _
                    ByVal fk_idtblCustomer As Integer,  _
                    ByVal dblQuoteNum As Integer,  _
                    ByVal txtCusDesc As String,  _
                    ByVal txtAddPos As String,  _
                    ByVal txtContactName As String,  _
                    ByVal txtEmail As String,  _
                    ByVal txtPhone1 As String,  _
                    ByVal txtPhone2 As String,  _
                    ByVal txtFax As String,  _
                    ByVal txtQuoteDate As Date,  _
                    ByVal txtQuoteOperator As String,  _
                    ByVal txtQuoteStatus As String,  _
                    ByVal txtQuoteDocName As String,  _
                    ByVal txtNotes As String,  _
                    ByVal fk_tblQuoteHeader As Integer,  _
                    ByVal fk_tblProduct As Integer,  _
                    ByVal txtProdCde As String,  _
                    ByVal txtProdDesc As String,  _
                    ByVal txtProdSpec1 As String,  _
                    ByVal txtProdSpec2 As String,  _
                    ByVal txtProdSpec3 As String,  _
                    ByVal decQty As Double,  _
                    ByVal decSellingPrice As Double,  _
                    ByVal decSellingValue As Double,  _
                    ByVal decOriginalPrice As Double,  _
                    ByVal decVatPercentage As Double,  _
                    ByVal decVatAmount As Double,  _
                    ByVal decQuoteLineAmount As Double,  _
                    ByVal txtCompanyNo As Short,  _
                    ByVal txtCoInfo As String,  _
                    ByVal txtCoAd1 As String,  _
                    ByVal txtCoAd2 As String,  _
                    ByVal txtCoAd3 As String,  _
                    ByVal txtCoPosCde As String,  _
                    ByVal txtVatNo As String,  _
                    ByVal txtRegNo As String,  _
                    ByVal txtDirectors As String,  _
                    ByVal txtPrintName As String,  _
                    ByVal txtCoEmail As String,  _
                    ByVal txtTelNo As String,  _
                    ByVal txtFaxNo As String,  _
                    ByVal txtUOM As String) As lstQuoteHeaderDetailsRow
            Dim rowlstQuoteHeaderDetailsRow As lstQuoteHeaderDetailsRow = CType(Me.NewRow,lstQuoteHeaderDetailsRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, fk_idtblCustomer, dblQuoteNum, txtCusDesc, txtAddPos, txtContactName, txtEmail, txtPhone1, txtPhone2, txtFax, txtQuoteDate, txtQuoteOperator, txtQuoteStatus, txtQuoteDocName, txtNotes, Nothing, fk_tblQuoteHeader, fk_tblProduct, txtProdCde, txtProdDesc, txtProdSpec1, txtProdSpec2, txtProdSpec3, decQty, decSellingPrice, decSellingValue, decOriginalPrice, decVatPercentage, decVatAmount, decQuoteLineAmount, txtCompanyNo, txtCoInfo, txtCoAd1, txtCoAd2, txtCoAd3, txtCoPosCde, txtVatNo, txtRegNo, txtDirectors, txtPrintName, txtCoEmail, txtTelNo, txtFaxNo, txtUOM}
            rowlstQuoteHeaderDetailsRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowlstQuoteHeaderDetailsRow)
            Return rowlstQuoteHeaderDetailsRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As lstQuoteHeaderDetailsDataTable = CType(MyBase.Clone,lstQuoteHeaderDetailsDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New lstQuoteHeaderDetailsDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnid_tblQuoteHeader = MyBase.Columns("id_tblQuoteHeader")
            Me.columnfk_idtblCustomer = MyBase.Columns("fk_idtblCustomer")
            Me.columndblQuoteNum = MyBase.Columns("dblQuoteNum")
            Me.columntxtCusDesc = MyBase.Columns("txtCusDesc")
            Me.columntxtAddPos = MyBase.Columns("txtAddPos")
            Me.columntxtContactName = MyBase.Columns("txtContactName")
            Me.columntxtEmail = MyBase.Columns("txtEmail")
            Me.columntxtPhone1 = MyBase.Columns("txtPhone1")
            Me.columntxtPhone2 = MyBase.Columns("txtPhone2")
            Me.columntxtFax = MyBase.Columns("txtFax")
            Me.columntxtQuoteDate = MyBase.Columns("txtQuoteDate")
            Me.columntxtQuoteOperator = MyBase.Columns("txtQuoteOperator")
            Me.columntxtQuoteStatus = MyBase.Columns("txtQuoteStatus")
            Me.columntxtQuoteDocName = MyBase.Columns("txtQuoteDocName")
            Me.columntxtNotes = MyBase.Columns("txtNotes")
            Me.columnid_tblQuoteDetails = MyBase.Columns("id_tblQuoteDetails")
            Me.columnfk_tblQuoteHeader = MyBase.Columns("fk_tblQuoteHeader")
            Me.columnfk_tblProduct = MyBase.Columns("fk_tblProduct")
            Me.columntxtProdCde = MyBase.Columns("txtProdCde")
            Me.columntxtProdDesc = MyBase.Columns("txtProdDesc")
            Me.columntxtProdSpec1 = MyBase.Columns("txtProdSpec1")
            Me.columntxtProdSpec2 = MyBase.Columns("txtProdSpec2")
            Me.columntxtProdSpec3 = MyBase.Columns("txtProdSpec3")
            Me.columndecQty = MyBase.Columns("decQty")
            Me.columndecSellingPrice = MyBase.Columns("decSellingPrice")
            Me.columndecSellingValue = MyBase.Columns("decSellingValue")
            Me.columndecOriginalPrice = MyBase.Columns("decOriginalPrice")
            Me.columndecVatPercentage = MyBase.Columns("decVatPercentage")
            Me.columndecVatAmount = MyBase.Columns("decVatAmount")
            Me.columndecQuoteLineAmount = MyBase.Columns("decQuoteLineAmount")
            Me.columntxtCompanyNo = MyBase.Columns("txtCompanyNo")
            Me.columntxtCoInfo = MyBase.Columns("txtCoInfo")
            Me.columntxtCoAd1 = MyBase.Columns("txtCoAd1")
            Me.columntxtCoAd2 = MyBase.Columns("txtCoAd2")
            Me.columntxtCoAd3 = MyBase.Columns("txtCoAd3")
            Me.columntxtCoPosCde = MyBase.Columns("txtCoPosCde")
            Me.columntxtVatNo = MyBase.Columns("txtVatNo")
            Me.columntxtRegNo = MyBase.Columns("txtRegNo")
            Me.columntxtDirectors = MyBase.Columns("txtDirectors")
            Me.columntxtPrintName = MyBase.Columns("txtPrintName")
            Me.columntxtCoEmail = MyBase.Columns("txtCoEmail")
            Me.columntxtTelNo = MyBase.Columns("txtTelNo")
            Me.columntxtFaxNo = MyBase.Columns("txtFaxNo")
            Me.columntxtUOM = MyBase.Columns("txtUOM")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnid_tblQuoteHeader = New Global.System.Data.DataColumn("id_tblQuoteHeader", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnid_tblQuoteHeader)
            Me.columnfk_idtblCustomer = New Global.System.Data.DataColumn("fk_idtblCustomer", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfk_idtblCustomer)
            Me.columndblQuoteNum = New Global.System.Data.DataColumn("dblQuoteNum", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndblQuoteNum)
            Me.columntxtCusDesc = New Global.System.Data.DataColumn("txtCusDesc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntxtCusDesc)
            Me.columntxtAddPos = New Global.System.Data.DataColumn("txtAddPos", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntxtAddPos)
            Me.columntxtContactName = New Global.System.Data.DataColumn("txtContactName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntxtContactName)
            Me.columntxtEmail = New Global.System.Data.DataColumn("txtEmail", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntxtEmail)
            Me.columntxtPhone1 = New Global.System.Data.DataColumn("txtPhone1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntxtPhone1)
            Me.columntxtPhone2 = New Global.System.Data.DataColumn("txtPhone2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntxtPhone2)
            Me.columntxtFax = New Global.System.Data.DataColumn("txtFax", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntxtFax)
            Me.columntxtQuoteDate = New Global.System.Data.DataColumn("txtQuoteDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntxtQuoteDate)
            Me.columntxtQuoteOperator = New Global.System.Data.DataColumn("txtQuoteOperator", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntxtQuoteOperator)
            Me.columntxtQuoteStatus = New Global.System.Data.DataColumn("txtQuoteStatus", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntxtQuoteStatus)
            Me.columntxtQuoteDocName = New Global.System.Data.DataColumn("txtQuoteDocName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntxtQuoteDocName)
            Me.columntxtNotes = New Global.System.Data.DataColumn("txtNotes", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntxtNotes)
            Me.columnid_tblQuoteDetails = New Global.System.Data.DataColumn("id_tblQuoteDetails", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnid_tblQuoteDetails)
            Me.columnfk_tblQuoteHeader = New Global.System.Data.DataColumn("fk_tblQuoteHeader", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfk_tblQuoteHeader)
            Me.columnfk_tblProduct = New Global.System.Data.DataColumn("fk_tblProduct", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfk_tblProduct)
            Me.columntxtProdCde = New Global.System.Data.DataColumn("txtProdCde", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntxtProdCde)
            Me.columntxtProdDesc = New Global.System.Data.DataColumn("txtProdDesc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntxtProdDesc)
            Me.columntxtProdSpec1 = New Global.System.Data.DataColumn("txtProdSpec1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntxtProdSpec1)
            Me.columntxtProdSpec2 = New Global.System.Data.DataColumn("txtProdSpec2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntxtProdSpec2)
            Me.columntxtProdSpec3 = New Global.System.Data.DataColumn("txtProdSpec3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntxtProdSpec3)
            Me.columndecQty = New Global.System.Data.DataColumn("decQty", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndecQty)
            Me.columndecSellingPrice = New Global.System.Data.DataColumn("decSellingPrice", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndecSellingPrice)
            Me.columndecSellingValue = New Global.System.Data.DataColumn("decSellingValue", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndecSellingValue)
            Me.columndecOriginalPrice = New Global.System.Data.DataColumn("decOriginalPrice", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndecOriginalPrice)
            Me.columndecVatPercentage = New Global.System.Data.DataColumn("decVatPercentage", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndecVatPercentage)
            Me.columndecVatAmount = New Global.System.Data.DataColumn("decVatAmount", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndecVatAmount)
            Me.columndecQuoteLineAmount = New Global.System.Data.DataColumn("decQuoteLineAmount", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndecQuoteLineAmount)
            Me.columntxtCompanyNo = New Global.System.Data.DataColumn("txtCompanyNo", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntxtCompanyNo)
            Me.columntxtCoInfo = New Global.System.Data.DataColumn("txtCoInfo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntxtCoInfo)
            Me.columntxtCoAd1 = New Global.System.Data.DataColumn("txtCoAd1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntxtCoAd1)
            Me.columntxtCoAd2 = New Global.System.Data.DataColumn("txtCoAd2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntxtCoAd2)
            Me.columntxtCoAd3 = New Global.System.Data.DataColumn("txtCoAd3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntxtCoAd3)
            Me.columntxtCoPosCde = New Global.System.Data.DataColumn("txtCoPosCde", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntxtCoPosCde)
            Me.columntxtVatNo = New Global.System.Data.DataColumn("txtVatNo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntxtVatNo)
            Me.columntxtRegNo = New Global.System.Data.DataColumn("txtRegNo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntxtRegNo)
            Me.columntxtDirectors = New Global.System.Data.DataColumn("txtDirectors", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntxtDirectors)
            Me.columntxtPrintName = New Global.System.Data.DataColumn("txtPrintName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntxtPrintName)
            Me.columntxtCoEmail = New Global.System.Data.DataColumn("txtCoEmail", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntxtCoEmail)
            Me.columntxtTelNo = New Global.System.Data.DataColumn("txtTelNo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntxtTelNo)
            Me.columntxtFaxNo = New Global.System.Data.DataColumn("txtFaxNo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntxtFaxNo)
            Me.columntxtUOM = New Global.System.Data.DataColumn("txtUOM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntxtUOM)
            Me.columnid_tblQuoteHeader.AutoIncrement = true
            Me.columnid_tblQuoteHeader.AutoIncrementSeed = -1
            Me.columnid_tblQuoteHeader.AutoIncrementStep = -1
            Me.columnid_tblQuoteHeader.AllowDBNull = false
            Me.columntxtCusDesc.MaxLength = 255
            Me.columntxtAddPos.MaxLength = 536870910
            Me.columntxtContactName.MaxLength = 255
            Me.columntxtEmail.MaxLength = 255
            Me.columntxtPhone1.MaxLength = 255
            Me.columntxtPhone2.MaxLength = 255
            Me.columntxtFax.MaxLength = 255
            Me.columntxtQuoteOperator.MaxLength = 255
            Me.columntxtQuoteStatus.MaxLength = 255
            Me.columntxtQuoteDocName.MaxLength = 255
            Me.columntxtNotes.MaxLength = 255
            Me.columnid_tblQuoteDetails.AutoIncrement = true
            Me.columnid_tblQuoteDetails.AutoIncrementSeed = -1
            Me.columnid_tblQuoteDetails.AutoIncrementStep = -1
            Me.columnid_tblQuoteDetails.AllowDBNull = false
            Me.columntxtProdCde.MaxLength = 255
            Me.columntxtProdDesc.MaxLength = 255
            Me.columntxtProdSpec1.MaxLength = 255
            Me.columntxtProdSpec2.MaxLength = 255
            Me.columntxtProdSpec3.MaxLength = 255
            Me.columntxtCoInfo.MaxLength = 255
            Me.columntxtCoAd1.MaxLength = 255
            Me.columntxtCoAd2.MaxLength = 255
            Me.columntxtCoAd3.MaxLength = 255
            Me.columntxtCoPosCde.MaxLength = 255
            Me.columntxtVatNo.MaxLength = 15
            Me.columntxtRegNo.MaxLength = 20
            Me.columntxtDirectors.MaxLength = 255
            Me.columntxtPrintName.MaxLength = 255
            Me.columntxtCoEmail.MaxLength = 255
            Me.columntxtTelNo.MaxLength = 255
            Me.columntxtFaxNo.MaxLength = 255
            Me.columntxtUOM.MaxLength = 12
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewlstQuoteHeaderDetailsRow() As lstQuoteHeaderDetailsRow
            Return CType(Me.NewRow,lstQuoteHeaderDetailsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New lstQuoteHeaderDetailsRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(lstQuoteHeaderDetailsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.lstQuoteHeaderDetailsRowChangedEvent) Is Nothing) Then
                RaiseEvent lstQuoteHeaderDetailsRowChanged(Me, New lstQuoteHeaderDetailsRowChangeEvent(CType(e.Row,lstQuoteHeaderDetailsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.lstQuoteHeaderDetailsRowChangingEvent) Is Nothing) Then
                RaiseEvent lstQuoteHeaderDetailsRowChanging(Me, New lstQuoteHeaderDetailsRowChangeEvent(CType(e.Row,lstQuoteHeaderDetailsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.lstQuoteHeaderDetailsRowDeletedEvent) Is Nothing) Then
                RaiseEvent lstQuoteHeaderDetailsRowDeleted(Me, New lstQuoteHeaderDetailsRowChangeEvent(CType(e.Row,lstQuoteHeaderDetailsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.lstQuoteHeaderDetailsRowDeletingEvent) Is Nothing) Then
                RaiseEvent lstQuoteHeaderDetailsRowDeleting(Me, New lstQuoteHeaderDetailsRowChangeEvent(CType(e.Row,lstQuoteHeaderDetailsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemovelstQuoteHeaderDetailsRow(ByVal row As lstQuoteHeaderDetailsRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As MyProdDBDataSet = New MyProdDBDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "lstQuoteHeaderDetailsDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class lstReceiptsDataTable
        Inherits Global.System.Data.TypedTableBase(Of lstReceiptsRow)
        
        Private columnid_tblReceipts As Global.System.Data.DataColumn
        
        Private columnFK_tblQuotHeader As Global.System.Data.DataColumn
        
        Private columnfk_tblInvoiceHeader As Global.System.Data.DataColumn
        
        Private columnFK_tblCustomer As Global.System.Data.DataColumn
        
        Private columndteReceiptDate As Global.System.Data.DataColumn
        
        Private columntxtReceiptType As Global.System.Data.DataColumn
        
        Private columntxtStatus As Global.System.Data.DataColumn
        
        Private columndteLogDate As Global.System.Data.DataColumn
        
        Private columntxtLogUser As Global.System.Data.DataColumn
        
        Private columnType As Global.System.Data.DataColumn
        
        Private columntxtCusDesc As Global.System.Data.DataColumn
        
        Private columntxtAddPos As Global.System.Data.DataColumn
        
        Private columntxtContactName As Global.System.Data.DataColumn
        
        Private columntxtEmail As Global.System.Data.DataColumn
        
        Private columntxtPhone1 As Global.System.Data.DataColumn
        
        Private columntxtPhone2 As Global.System.Data.DataColumn
        
        Private columntxtFax As Global.System.Data.DataColumn
        
        Private columnTranDate As Global.System.Data.DataColumn
        
        Private columntxtVatNo As Global.System.Data.DataColumn
        
        Private columntblCustomer_txtVatNo As Global.System.Data.DataColumn
        
        Private columntxtCoAd1 As Global.System.Data.DataColumn
        
        Private columntxtCoAd2 As Global.System.Data.DataColumn
        
        Private columntxtCoAd3 As Global.System.Data.DataColumn
        
        Private columntxtCoPosCde As Global.System.Data.DataColumn
        
        Private columntxtRegNo As Global.System.Data.DataColumn
        
        Private columntxtDirectors As Global.System.Data.DataColumn
        
        Private columntxtPrintName As Global.System.Data.DataColumn
        
        Private columntxtTelNo As Global.System.Data.DataColumn
        
        Private columntxtFaxNo As Global.System.Data.DataColumn
        
        Private columntxtCoEmail As Global.System.Data.DataColumn
        
        Private columnTranNumber As Global.System.Data.DataColumn
        
        Private columntxtCoVatNo As Global.System.Data.DataColumn
        
        Private columndblAmount As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "lstReceipts"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property id_tblReceiptsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnid_tblReceipts
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FK_tblQuotHeaderColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFK_tblQuotHeader
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property fk_tblInvoiceHeaderColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfk_tblInvoiceHeader
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FK_tblCustomerColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFK_tblCustomer
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property dteReceiptDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndteReceiptDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property txtReceiptTypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntxtReceiptType
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property txtStatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntxtStatus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property dteLogDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndteLogDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property txtLogUserColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntxtLogUser
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnType
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property txtCusDescColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntxtCusDesc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property txtAddPosColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntxtAddPos
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property txtContactNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntxtContactName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property txtEmailColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntxtEmail
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property txtPhone1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columntxtPhone1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property txtPhone2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columntxtPhone2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property txtFaxColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntxtFax
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TranDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTranDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property txtVatNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntxtVatNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property tblCustomer_txtVatNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntblCustomer_txtVatNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property txtCoAd1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columntxtCoAd1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property txtCoAd2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columntxtCoAd2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property txtCoAd3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columntxtCoAd3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property txtCoPosCdeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntxtCoPosCde
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property txtRegNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntxtRegNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property txtDirectorsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntxtDirectors
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property txtPrintNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntxtPrintName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property txtTelNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntxtTelNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property txtFaxNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntxtFaxNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property txtCoEmailColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntxtCoEmail
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TranNumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTranNumber
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property txtCoVatNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntxtCoVatNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property dblAmountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndblAmount
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As lstReceiptsRow
            Get
                Return CType(Me.Rows(index),lstReceiptsRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event lstReceiptsRowChanging As lstReceiptsRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event lstReceiptsRowChanged As lstReceiptsRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event lstReceiptsRowDeleting As lstReceiptsRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event lstReceiptsRowDeleted As lstReceiptsRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddlstReceiptsRow(ByVal row As lstReceiptsRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddlstReceiptsRow( _
                    ByVal FK_tblQuotHeader As Integer,  _
                    ByVal fk_tblInvoiceHeader As Integer,  _
                    ByVal FK_tblCustomer As Integer,  _
                    ByVal dteReceiptDate As String,  _
                    ByVal txtReceiptType As String,  _
                    ByVal txtStatus As String,  _
                    ByVal dteLogDate As String,  _
                    ByVal txtLogUser As String,  _
                    ByVal Type As String,  _
                    ByVal txtCusDesc As String,  _
                    ByVal txtAddPos As String,  _
                    ByVal txtContactName As String,  _
                    ByVal txtEmail As String,  _
                    ByVal txtPhone1 As String,  _
                    ByVal txtPhone2 As String,  _
                    ByVal txtFax As String,  _
                    ByVal TranDate As Date,  _
                    ByVal txtVatNo As String,  _
                    ByVal tblCustomer_txtVatNo As String,  _
                    ByVal txtCoAd1 As String,  _
                    ByVal txtCoAd2 As String,  _
                    ByVal txtCoAd3 As String,  _
                    ByVal txtCoPosCde As String,  _
                    ByVal txtRegNo As String,  _
                    ByVal txtDirectors As String,  _
                    ByVal txtPrintName As String,  _
                    ByVal txtTelNo As String,  _
                    ByVal txtFaxNo As String,  _
                    ByVal txtCoEmail As String,  _
                    ByVal TranNumber As Integer,  _
                    ByVal txtCoVatNo As String,  _
                    ByVal dblAmount As Double) As lstReceiptsRow
            Dim rowlstReceiptsRow As lstReceiptsRow = CType(Me.NewRow,lstReceiptsRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, FK_tblQuotHeader, fk_tblInvoiceHeader, FK_tblCustomer, dteReceiptDate, txtReceiptType, txtStatus, dteLogDate, txtLogUser, Type, txtCusDesc, txtAddPos, txtContactName, txtEmail, txtPhone1, txtPhone2, txtFax, TranDate, txtVatNo, tblCustomer_txtVatNo, txtCoAd1, txtCoAd2, txtCoAd3, txtCoPosCde, txtRegNo, txtDirectors, txtPrintName, txtTelNo, txtFaxNo, txtCoEmail, TranNumber, txtCoVatNo, dblAmount}
            rowlstReceiptsRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowlstReceiptsRow)
            Return rowlstReceiptsRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As lstReceiptsDataTable = CType(MyBase.Clone,lstReceiptsDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New lstReceiptsDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnid_tblReceipts = MyBase.Columns("id_tblReceipts")
            Me.columnFK_tblQuotHeader = MyBase.Columns("FK_tblQuotHeader")
            Me.columnfk_tblInvoiceHeader = MyBase.Columns("fk_tblInvoiceHeader")
            Me.columnFK_tblCustomer = MyBase.Columns("FK_tblCustomer")
            Me.columndteReceiptDate = MyBase.Columns("dteReceiptDate")
            Me.columntxtReceiptType = MyBase.Columns("txtReceiptType")
            Me.columntxtStatus = MyBase.Columns("txtStatus")
            Me.columndteLogDate = MyBase.Columns("dteLogDate")
            Me.columntxtLogUser = MyBase.Columns("txtLogUser")
            Me.columnType = MyBase.Columns("Type")
            Me.columntxtCusDesc = MyBase.Columns("txtCusDesc")
            Me.columntxtAddPos = MyBase.Columns("txtAddPos")
            Me.columntxtContactName = MyBase.Columns("txtContactName")
            Me.columntxtEmail = MyBase.Columns("txtEmail")
            Me.columntxtPhone1 = MyBase.Columns("txtPhone1")
            Me.columntxtPhone2 = MyBase.Columns("txtPhone2")
            Me.columntxtFax = MyBase.Columns("txtFax")
            Me.columnTranDate = MyBase.Columns("TranDate")
            Me.columntxtVatNo = MyBase.Columns("txtVatNo")
            Me.columntblCustomer_txtVatNo = MyBase.Columns("tblCustomer_txtVatNo")
            Me.columntxtCoAd1 = MyBase.Columns("txtCoAd1")
            Me.columntxtCoAd2 = MyBase.Columns("txtCoAd2")
            Me.columntxtCoAd3 = MyBase.Columns("txtCoAd3")
            Me.columntxtCoPosCde = MyBase.Columns("txtCoPosCde")
            Me.columntxtRegNo = MyBase.Columns("txtRegNo")
            Me.columntxtDirectors = MyBase.Columns("txtDirectors")
            Me.columntxtPrintName = MyBase.Columns("txtPrintName")
            Me.columntxtTelNo = MyBase.Columns("txtTelNo")
            Me.columntxtFaxNo = MyBase.Columns("txtFaxNo")
            Me.columntxtCoEmail = MyBase.Columns("txtCoEmail")
            Me.columnTranNumber = MyBase.Columns("TranNumber")
            Me.columntxtCoVatNo = MyBase.Columns("txtCoVatNo")
            Me.columndblAmount = MyBase.Columns("dblAmount")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnid_tblReceipts = New Global.System.Data.DataColumn("id_tblReceipts", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnid_tblReceipts)
            Me.columnFK_tblQuotHeader = New Global.System.Data.DataColumn("FK_tblQuotHeader", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFK_tblQuotHeader)
            Me.columnfk_tblInvoiceHeader = New Global.System.Data.DataColumn("fk_tblInvoiceHeader", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfk_tblInvoiceHeader)
            Me.columnFK_tblCustomer = New Global.System.Data.DataColumn("FK_tblCustomer", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFK_tblCustomer)
            Me.columndteReceiptDate = New Global.System.Data.DataColumn("dteReceiptDate", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndteReceiptDate)
            Me.columntxtReceiptType = New Global.System.Data.DataColumn("txtReceiptType", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntxtReceiptType)
            Me.columntxtStatus = New Global.System.Data.DataColumn("txtStatus", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntxtStatus)
            Me.columndteLogDate = New Global.System.Data.DataColumn("dteLogDate", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndteLogDate)
            Me.columntxtLogUser = New Global.System.Data.DataColumn("txtLogUser", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntxtLogUser)
            Me.columnType = New Global.System.Data.DataColumn("Type", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnType)
            Me.columntxtCusDesc = New Global.System.Data.DataColumn("txtCusDesc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntxtCusDesc)
            Me.columntxtAddPos = New Global.System.Data.DataColumn("txtAddPos", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntxtAddPos)
            Me.columntxtContactName = New Global.System.Data.DataColumn("txtContactName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntxtContactName)
            Me.columntxtEmail = New Global.System.Data.DataColumn("txtEmail", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntxtEmail)
            Me.columntxtPhone1 = New Global.System.Data.DataColumn("txtPhone1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntxtPhone1)
            Me.columntxtPhone2 = New Global.System.Data.DataColumn("txtPhone2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntxtPhone2)
            Me.columntxtFax = New Global.System.Data.DataColumn("txtFax", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntxtFax)
            Me.columnTranDate = New Global.System.Data.DataColumn("TranDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTranDate)
            Me.columntxtVatNo = New Global.System.Data.DataColumn("txtVatNo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntxtVatNo)
            Me.columntblCustomer_txtVatNo = New Global.System.Data.DataColumn("tblCustomer_txtVatNo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntblCustomer_txtVatNo)
            Me.columntxtCoAd1 = New Global.System.Data.DataColumn("txtCoAd1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntxtCoAd1)
            Me.columntxtCoAd2 = New Global.System.Data.DataColumn("txtCoAd2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntxtCoAd2)
            Me.columntxtCoAd3 = New Global.System.Data.DataColumn("txtCoAd3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntxtCoAd3)
            Me.columntxtCoPosCde = New Global.System.Data.DataColumn("txtCoPosCde", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntxtCoPosCde)
            Me.columntxtRegNo = New Global.System.Data.DataColumn("txtRegNo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntxtRegNo)
            Me.columntxtDirectors = New Global.System.Data.DataColumn("txtDirectors", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntxtDirectors)
            Me.columntxtPrintName = New Global.System.Data.DataColumn("txtPrintName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntxtPrintName)
            Me.columntxtTelNo = New Global.System.Data.DataColumn("txtTelNo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntxtTelNo)
            Me.columntxtFaxNo = New Global.System.Data.DataColumn("txtFaxNo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntxtFaxNo)
            Me.columntxtCoEmail = New Global.System.Data.DataColumn("txtCoEmail", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntxtCoEmail)
            Me.columnTranNumber = New Global.System.Data.DataColumn("TranNumber", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTranNumber)
            Me.columntxtCoVatNo = New Global.System.Data.DataColumn("txtCoVatNo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntxtCoVatNo)
            Me.columndblAmount = New Global.System.Data.DataColumn("dblAmount", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndblAmount)
            Me.columnid_tblReceipts.AutoIncrement = true
            Me.columnid_tblReceipts.AutoIncrementSeed = -1
            Me.columnid_tblReceipts.AutoIncrementStep = -1
            Me.columndteReceiptDate.MaxLength = 255
            Me.columntxtReceiptType.MaxLength = 255
            Me.columntxtStatus.MaxLength = 255
            Me.columndteLogDate.MaxLength = 255
            Me.columntxtLogUser.MaxLength = 255
            Me.columnType.ReadOnly = true
            Me.columnType.MaxLength = 255
            Me.columntxtCusDesc.ReadOnly = true
            Me.columntxtCusDesc.MaxLength = 255
            Me.columntxtAddPos.ReadOnly = true
            Me.columntxtAddPos.MaxLength = 255
            Me.columntxtContactName.ReadOnly = true
            Me.columntxtContactName.MaxLength = 255
            Me.columntxtEmail.ReadOnly = true
            Me.columntxtEmail.MaxLength = 255
            Me.columntxtPhone1.ReadOnly = true
            Me.columntxtPhone1.MaxLength = 255
            Me.columntxtPhone2.ReadOnly = true
            Me.columntxtPhone2.MaxLength = 255
            Me.columntxtFax.ReadOnly = true
            Me.columntxtFax.MaxLength = 255
            Me.columnTranDate.ReadOnly = true
            Me.columntxtVatNo.MaxLength = 15
            Me.columntblCustomer_txtVatNo.Caption = "tblCustomer.txtVatNo"
            Me.columntblCustomer_txtVatNo.MaxLength = 15
            Me.columntxtCoAd1.MaxLength = 255
            Me.columntxtCoAd2.MaxLength = 255
            Me.columntxtCoAd3.MaxLength = 255
            Me.columntxtCoPosCde.MaxLength = 255
            Me.columntxtRegNo.MaxLength = 20
            Me.columntxtDirectors.MaxLength = 255
            Me.columntxtPrintName.MaxLength = 255
            Me.columntxtTelNo.MaxLength = 255
            Me.columntxtFaxNo.MaxLength = 255
            Me.columntxtCoEmail.MaxLength = 255
            Me.columnTranNumber.ReadOnly = true
            Me.columntxtCoVatNo.MaxLength = 15
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewlstReceiptsRow() As lstReceiptsRow
            Return CType(Me.NewRow,lstReceiptsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New lstReceiptsRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(lstReceiptsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.lstReceiptsRowChangedEvent) Is Nothing) Then
                RaiseEvent lstReceiptsRowChanged(Me, New lstReceiptsRowChangeEvent(CType(e.Row,lstReceiptsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.lstReceiptsRowChangingEvent) Is Nothing) Then
                RaiseEvent lstReceiptsRowChanging(Me, New lstReceiptsRowChangeEvent(CType(e.Row,lstReceiptsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.lstReceiptsRowDeletedEvent) Is Nothing) Then
                RaiseEvent lstReceiptsRowDeleted(Me, New lstReceiptsRowChangeEvent(CType(e.Row,lstReceiptsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.lstReceiptsRowDeletingEvent) Is Nothing) Then
                RaiseEvent lstReceiptsRowDeleting(Me, New lstReceiptsRowChangeEvent(CType(e.Row,lstReceiptsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemovelstReceiptsRow(ByVal row As lstReceiptsRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As MyProdDBDataSet = New MyProdDBDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "lstReceiptsDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class lstInvoiceHeaderDetailsDataTable
        Inherits Global.System.Data.TypedTableBase(Of lstInvoiceHeaderDetailsRow)
        
        Private columnid_tblInvoiceHeader As Global.System.Data.DataColumn
        
        Private columnfk_idtblCustomer As Global.System.Data.DataColumn
        
        Private columntxtCompanyNo As Global.System.Data.DataColumn
        
        Private columndblInvoiceNum As Global.System.Data.DataColumn
        
        Private columntxtCusDesc As Global.System.Data.DataColumn
        
        Private columntxtAddPos As Global.System.Data.DataColumn
        
        Private columntxtContactName As Global.System.Data.DataColumn
        
        Private columntxtEmail As Global.System.Data.DataColumn
        
        Private columntxtPhone1 As Global.System.Data.DataColumn
        
        Private columntxtPhone2 As Global.System.Data.DataColumn
        
        Private columntxtFax As Global.System.Data.DataColumn
        
        Private columntxtInvoiceDate As Global.System.Data.DataColumn
        
        Private columntxtInvoiceOperator As Global.System.Data.DataColumn
        
        Private columntxtInvoiceStatus As Global.System.Data.DataColumn
        
        Private columntxtInvoiceDocName As Global.System.Data.DataColumn
        
        Private columntxtNotes As Global.System.Data.DataColumn
        
        Private columnid_tblInvoiceDetail As Global.System.Data.DataColumn
        
        Private columnfk_tblnvoiceHeader As Global.System.Data.DataColumn
        
        Private columnfk_tblProduct As Global.System.Data.DataColumn
        
        Private columntxtProdCde As Global.System.Data.DataColumn
        
        Private columntxtProdDesc As Global.System.Data.DataColumn
        
        Private columntxtProdSpec1 As Global.System.Data.DataColumn
        
        Private columntxtProdSpec2 As Global.System.Data.DataColumn
        
        Private columntxtProdSpec3 As Global.System.Data.DataColumn
        
        Private columndecQty As Global.System.Data.DataColumn
        
        Private columndecSellingPrice As Global.System.Data.DataColumn
        
        Private columndecSellingValue As Global.System.Data.DataColumn
        
        Private columndecOriginalPrice As Global.System.Data.DataColumn
        
        Private columndecVatPercentage As Global.System.Data.DataColumn
        
        Private columndecVatAmount As Global.System.Data.DataColumn
        
        Private columndecInvoiceLineAmount As Global.System.Data.DataColumn
        
        Private columntxtUOM As Global.System.Data.DataColumn
        
        Private columntxtCoInfo As Global.System.Data.DataColumn
        
        Private columntxtCoAd1 As Global.System.Data.DataColumn
        
        Private columntxtCoAd2 As Global.System.Data.DataColumn
        
        Private columntxtCoAd3 As Global.System.Data.DataColumn
        
        Private columntxtCoPosCde As Global.System.Data.DataColumn
        
        Private columntxtVatNo As Global.System.Data.DataColumn
        
        Private columntxtDirectors As Global.System.Data.DataColumn
        
        Private columntxtPrintName As Global.System.Data.DataColumn
        
        Private columntxtTelNo As Global.System.Data.DataColumn
        
        Private columntxtCoEmail As Global.System.Data.DataColumn
        
        Private columndblVatRate As Global.System.Data.DataColumn
        
        Private columntxtFaxNo As Global.System.Data.DataColumn
        
        Private columntxtRegNo As Global.System.Data.DataColumn
        
        Private columnFK_tblQuoteHeader As Global.System.Data.DataColumn
        
        Private columndblReceiptAmount As Global.System.Data.DataColumn
        
        Private columntxtCusRef As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "lstInvoiceHeaderDetails"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property id_tblInvoiceHeaderColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnid_tblInvoiceHeader
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property fk_idtblCustomerColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfk_idtblCustomer
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property txtCompanyNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntxtCompanyNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property dblInvoiceNumColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndblInvoiceNum
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property txtCusDescColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntxtCusDesc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property txtAddPosColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntxtAddPos
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property txtContactNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntxtContactName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property txtEmailColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntxtEmail
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property txtPhone1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columntxtPhone1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property txtPhone2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columntxtPhone2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property txtFaxColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntxtFax
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property txtInvoiceDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntxtInvoiceDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property txtInvoiceOperatorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntxtInvoiceOperator
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property txtInvoiceStatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntxtInvoiceStatus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property txtInvoiceDocNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntxtInvoiceDocName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property txtNotesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntxtNotes
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property id_tblInvoiceDetailColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnid_tblInvoiceDetail
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property fk_tblnvoiceHeaderColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfk_tblnvoiceHeader
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property fk_tblProductColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfk_tblProduct
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property txtProdCdeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntxtProdCde
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property txtProdDescColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntxtProdDesc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property txtProdSpec1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columntxtProdSpec1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property txtProdSpec2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columntxtProdSpec2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property txtProdSpec3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columntxtProdSpec3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property decQtyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndecQty
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property decSellingPriceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndecSellingPrice
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property decSellingValueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndecSellingValue
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property decOriginalPriceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndecOriginalPrice
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property decVatPercentageColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndecVatPercentage
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property decVatAmountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndecVatAmount
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property decInvoiceLineAmountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndecInvoiceLineAmount
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property txtUOMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntxtUOM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property txtCoInfoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntxtCoInfo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property txtCoAd1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columntxtCoAd1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property txtCoAd2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columntxtCoAd2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property txtCoAd3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columntxtCoAd3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property txtCoPosCdeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntxtCoPosCde
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property txtVatNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntxtVatNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property txtDirectorsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntxtDirectors
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property txtPrintNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntxtPrintName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property txtTelNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntxtTelNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property txtCoEmailColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntxtCoEmail
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property dblVatRateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndblVatRate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property txtFaxNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntxtFaxNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property txtRegNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntxtRegNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FK_tblQuoteHeaderColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFK_tblQuoteHeader
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property dblReceiptAmountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndblReceiptAmount
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property txtCusRefColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntxtCusRef
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As lstInvoiceHeaderDetailsRow
            Get
                Return CType(Me.Rows(index),lstInvoiceHeaderDetailsRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event lstInvoiceHeaderDetailsRowChanging As lstInvoiceHeaderDetailsRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event lstInvoiceHeaderDetailsRowChanged As lstInvoiceHeaderDetailsRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event lstInvoiceHeaderDetailsRowDeleting As lstInvoiceHeaderDetailsRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event lstInvoiceHeaderDetailsRowDeleted As lstInvoiceHeaderDetailsRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddlstInvoiceHeaderDetailsRow(ByVal row As lstInvoiceHeaderDetailsRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddlstInvoiceHeaderDetailsRow( _
                    ByVal fk_idtblCustomer As Integer,  _
                    ByVal txtCompanyNo As Short,  _
                    ByVal dblInvoiceNum As Integer,  _
                    ByVal txtCusDesc As String,  _
                    ByVal txtAddPos As String,  _
                    ByVal txtContactName As String,  _
                    ByVal txtEmail As String,  _
                    ByVal txtPhone1 As String,  _
                    ByVal txtPhone2 As String,  _
                    ByVal txtFax As String,  _
                    ByVal txtInvoiceDate As Date,  _
                    ByVal txtInvoiceOperator As String,  _
                    ByVal txtInvoiceStatus As String,  _
                    ByVal txtInvoiceDocName As String,  _
                    ByVal txtNotes As String,  _
                    ByVal fk_tblnvoiceHeader As Integer,  _
                    ByVal fk_tblProduct As Integer,  _
                    ByVal txtProdCde As String,  _
                    ByVal txtProdDesc As String,  _
                    ByVal txtProdSpec1 As String,  _
                    ByVal txtProdSpec2 As String,  _
                    ByVal txtProdSpec3 As String,  _
                    ByVal decQty As Double,  _
                    ByVal decSellingPrice As Double,  _
                    ByVal decSellingValue As Double,  _
                    ByVal decOriginalPrice As Double,  _
                    ByVal decVatPercentage As Double,  _
                    ByVal decVatAmount As Double,  _
                    ByVal decInvoiceLineAmount As Double,  _
                    ByVal txtUOM As String,  _
                    ByVal txtCoInfo As String,  _
                    ByVal txtCoAd1 As String,  _
                    ByVal txtCoAd2 As String,  _
                    ByVal txtCoAd3 As String,  _
                    ByVal txtCoPosCde As String,  _
                    ByVal txtVatNo As String,  _
                    ByVal txtDirectors As String,  _
                    ByVal txtPrintName As String,  _
                    ByVal txtTelNo As String,  _
                    ByVal txtCoEmail As String,  _
                    ByVal dblVatRate As Double,  _
                    ByVal txtFaxNo As String,  _
                    ByVal txtRegNo As String,  _
                    ByVal FK_tblQuoteHeader As Integer,  _
                    ByVal dblReceiptAmount As Double,  _
                    ByVal txtCusRef As String) As lstInvoiceHeaderDetailsRow
            Dim rowlstInvoiceHeaderDetailsRow As lstInvoiceHeaderDetailsRow = CType(Me.NewRow,lstInvoiceHeaderDetailsRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, fk_idtblCustomer, txtCompanyNo, dblInvoiceNum, txtCusDesc, txtAddPos, txtContactName, txtEmail, txtPhone1, txtPhone2, txtFax, txtInvoiceDate, txtInvoiceOperator, txtInvoiceStatus, txtInvoiceDocName, txtNotes, Nothing, fk_tblnvoiceHeader, fk_tblProduct, txtProdCde, txtProdDesc, txtProdSpec1, txtProdSpec2, txtProdSpec3, decQty, decSellingPrice, decSellingValue, decOriginalPrice, decVatPercentage, decVatAmount, decInvoiceLineAmount, txtUOM, txtCoInfo, txtCoAd1, txtCoAd2, txtCoAd3, txtCoPosCde, txtVatNo, txtDirectors, txtPrintName, txtTelNo, txtCoEmail, dblVatRate, txtFaxNo, txtRegNo, FK_tblQuoteHeader, dblReceiptAmount, txtCusRef}
            rowlstInvoiceHeaderDetailsRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowlstInvoiceHeaderDetailsRow)
            Return rowlstInvoiceHeaderDetailsRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As lstInvoiceHeaderDetailsDataTable = CType(MyBase.Clone,lstInvoiceHeaderDetailsDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New lstInvoiceHeaderDetailsDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnid_tblInvoiceHeader = MyBase.Columns("id_tblInvoiceHeader")
            Me.columnfk_idtblCustomer = MyBase.Columns("fk_idtblCustomer")
            Me.columntxtCompanyNo = MyBase.Columns("txtCompanyNo")
            Me.columndblInvoiceNum = MyBase.Columns("dblInvoiceNum")
            Me.columntxtCusDesc = MyBase.Columns("txtCusDesc")
            Me.columntxtAddPos = MyBase.Columns("txtAddPos")
            Me.columntxtContactName = MyBase.Columns("txtContactName")
            Me.columntxtEmail = MyBase.Columns("txtEmail")
            Me.columntxtPhone1 = MyBase.Columns("txtPhone1")
            Me.columntxtPhone2 = MyBase.Columns("txtPhone2")
            Me.columntxtFax = MyBase.Columns("txtFax")
            Me.columntxtInvoiceDate = MyBase.Columns("txtInvoiceDate")
            Me.columntxtInvoiceOperator = MyBase.Columns("txtInvoiceOperator")
            Me.columntxtInvoiceStatus = MyBase.Columns("txtInvoiceStatus")
            Me.columntxtInvoiceDocName = MyBase.Columns("txtInvoiceDocName")
            Me.columntxtNotes = MyBase.Columns("txtNotes")
            Me.columnid_tblInvoiceDetail = MyBase.Columns("id_tblInvoiceDetail")
            Me.columnfk_tblnvoiceHeader = MyBase.Columns("fk_tblnvoiceHeader")
            Me.columnfk_tblProduct = MyBase.Columns("fk_tblProduct")
            Me.columntxtProdCde = MyBase.Columns("txtProdCde")
            Me.columntxtProdDesc = MyBase.Columns("txtProdDesc")
            Me.columntxtProdSpec1 = MyBase.Columns("txtProdSpec1")
            Me.columntxtProdSpec2 = MyBase.Columns("txtProdSpec2")
            Me.columntxtProdSpec3 = MyBase.Columns("txtProdSpec3")
            Me.columndecQty = MyBase.Columns("decQty")
            Me.columndecSellingPrice = MyBase.Columns("decSellingPrice")
            Me.columndecSellingValue = MyBase.Columns("decSellingValue")
            Me.columndecOriginalPrice = MyBase.Columns("decOriginalPrice")
            Me.columndecVatPercentage = MyBase.Columns("decVatPercentage")
            Me.columndecVatAmount = MyBase.Columns("decVatAmount")
            Me.columndecInvoiceLineAmount = MyBase.Columns("decInvoiceLineAmount")
            Me.columntxtUOM = MyBase.Columns("txtUOM")
            Me.columntxtCoInfo = MyBase.Columns("txtCoInfo")
            Me.columntxtCoAd1 = MyBase.Columns("txtCoAd1")
            Me.columntxtCoAd2 = MyBase.Columns("txtCoAd2")
            Me.columntxtCoAd3 = MyBase.Columns("txtCoAd3")
            Me.columntxtCoPosCde = MyBase.Columns("txtCoPosCde")
            Me.columntxtVatNo = MyBase.Columns("txtVatNo")
            Me.columntxtDirectors = MyBase.Columns("txtDirectors")
            Me.columntxtPrintName = MyBase.Columns("txtPrintName")
            Me.columntxtTelNo = MyBase.Columns("txtTelNo")
            Me.columntxtCoEmail = MyBase.Columns("txtCoEmail")
            Me.columndblVatRate = MyBase.Columns("dblVatRate")
            Me.columntxtFaxNo = MyBase.Columns("txtFaxNo")
            Me.columntxtRegNo = MyBase.Columns("txtRegNo")
            Me.columnFK_tblQuoteHeader = MyBase.Columns("FK_tblQuoteHeader")
            Me.columndblReceiptAmount = MyBase.Columns("dblReceiptAmount")
            Me.columntxtCusRef = MyBase.Columns("txtCusRef")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnid_tblInvoiceHeader = New Global.System.Data.DataColumn("id_tblInvoiceHeader", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnid_tblInvoiceHeader)
            Me.columnfk_idtblCustomer = New Global.System.Data.DataColumn("fk_idtblCustomer", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfk_idtblCustomer)
            Me.columntxtCompanyNo = New Global.System.Data.DataColumn("txtCompanyNo", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntxtCompanyNo)
            Me.columndblInvoiceNum = New Global.System.Data.DataColumn("dblInvoiceNum", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndblInvoiceNum)
            Me.columntxtCusDesc = New Global.System.Data.DataColumn("txtCusDesc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntxtCusDesc)
            Me.columntxtAddPos = New Global.System.Data.DataColumn("txtAddPos", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntxtAddPos)
            Me.columntxtContactName = New Global.System.Data.DataColumn("txtContactName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntxtContactName)
            Me.columntxtEmail = New Global.System.Data.DataColumn("txtEmail", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntxtEmail)
            Me.columntxtPhone1 = New Global.System.Data.DataColumn("txtPhone1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntxtPhone1)
            Me.columntxtPhone2 = New Global.System.Data.DataColumn("txtPhone2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntxtPhone2)
            Me.columntxtFax = New Global.System.Data.DataColumn("txtFax", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntxtFax)
            Me.columntxtInvoiceDate = New Global.System.Data.DataColumn("txtInvoiceDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntxtInvoiceDate)
            Me.columntxtInvoiceOperator = New Global.System.Data.DataColumn("txtInvoiceOperator", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntxtInvoiceOperator)
            Me.columntxtInvoiceStatus = New Global.System.Data.DataColumn("txtInvoiceStatus", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntxtInvoiceStatus)
            Me.columntxtInvoiceDocName = New Global.System.Data.DataColumn("txtInvoiceDocName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntxtInvoiceDocName)
            Me.columntxtNotes = New Global.System.Data.DataColumn("txtNotes", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntxtNotes)
            Me.columnid_tblInvoiceDetail = New Global.System.Data.DataColumn("id_tblInvoiceDetail", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnid_tblInvoiceDetail)
            Me.columnfk_tblnvoiceHeader = New Global.System.Data.DataColumn("fk_tblnvoiceHeader", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfk_tblnvoiceHeader)
            Me.columnfk_tblProduct = New Global.System.Data.DataColumn("fk_tblProduct", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfk_tblProduct)
            Me.columntxtProdCde = New Global.System.Data.DataColumn("txtProdCde", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntxtProdCde)
            Me.columntxtProdDesc = New Global.System.Data.DataColumn("txtProdDesc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntxtProdDesc)
            Me.columntxtProdSpec1 = New Global.System.Data.DataColumn("txtProdSpec1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntxtProdSpec1)
            Me.columntxtProdSpec2 = New Global.System.Data.DataColumn("txtProdSpec2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntxtProdSpec2)
            Me.columntxtProdSpec3 = New Global.System.Data.DataColumn("txtProdSpec3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntxtProdSpec3)
            Me.columndecQty = New Global.System.Data.DataColumn("decQty", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndecQty)
            Me.columndecSellingPrice = New Global.System.Data.DataColumn("decSellingPrice", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndecSellingPrice)
            Me.columndecSellingValue = New Global.System.Data.DataColumn("decSellingValue", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndecSellingValue)
            Me.columndecOriginalPrice = New Global.System.Data.DataColumn("decOriginalPrice", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndecOriginalPrice)
            Me.columndecVatPercentage = New Global.System.Data.DataColumn("decVatPercentage", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndecVatPercentage)
            Me.columndecVatAmount = New Global.System.Data.DataColumn("decVatAmount", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndecVatAmount)
            Me.columndecInvoiceLineAmount = New Global.System.Data.DataColumn("decInvoiceLineAmount", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndecInvoiceLineAmount)
            Me.columntxtUOM = New Global.System.Data.DataColumn("txtUOM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntxtUOM)
            Me.columntxtCoInfo = New Global.System.Data.DataColumn("txtCoInfo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntxtCoInfo)
            Me.columntxtCoAd1 = New Global.System.Data.DataColumn("txtCoAd1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntxtCoAd1)
            Me.columntxtCoAd2 = New Global.System.Data.DataColumn("txtCoAd2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntxtCoAd2)
            Me.columntxtCoAd3 = New Global.System.Data.DataColumn("txtCoAd3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntxtCoAd3)
            Me.columntxtCoPosCde = New Global.System.Data.DataColumn("txtCoPosCde", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntxtCoPosCde)
            Me.columntxtVatNo = New Global.System.Data.DataColumn("txtVatNo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntxtVatNo)
            Me.columntxtDirectors = New Global.System.Data.DataColumn("txtDirectors", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntxtDirectors)
            Me.columntxtPrintName = New Global.System.Data.DataColumn("txtPrintName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntxtPrintName)
            Me.columntxtTelNo = New Global.System.Data.DataColumn("txtTelNo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntxtTelNo)
            Me.columntxtCoEmail = New Global.System.Data.DataColumn("txtCoEmail", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntxtCoEmail)
            Me.columndblVatRate = New Global.System.Data.DataColumn("dblVatRate", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndblVatRate)
            Me.columntxtFaxNo = New Global.System.Data.DataColumn("txtFaxNo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntxtFaxNo)
            Me.columntxtRegNo = New Global.System.Data.DataColumn("txtRegNo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntxtRegNo)
            Me.columnFK_tblQuoteHeader = New Global.System.Data.DataColumn("FK_tblQuoteHeader", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFK_tblQuoteHeader)
            Me.columndblReceiptAmount = New Global.System.Data.DataColumn("dblReceiptAmount", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndblReceiptAmount)
            Me.columntxtCusRef = New Global.System.Data.DataColumn("txtCusRef", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntxtCusRef)
            Me.columnid_tblInvoiceHeader.AutoIncrement = true
            Me.columnid_tblInvoiceHeader.AutoIncrementSeed = -1
            Me.columnid_tblInvoiceHeader.AutoIncrementStep = -1
            Me.columntxtCusDesc.MaxLength = 255
            Me.columntxtAddPos.MaxLength = 536870910
            Me.columntxtContactName.MaxLength = 255
            Me.columntxtEmail.MaxLength = 255
            Me.columntxtPhone1.MaxLength = 255
            Me.columntxtPhone2.MaxLength = 255
            Me.columntxtFax.MaxLength = 255
            Me.columntxtInvoiceOperator.MaxLength = 255
            Me.columntxtInvoiceStatus.MaxLength = 255
            Me.columntxtInvoiceDocName.MaxLength = 255
            Me.columntxtNotes.MaxLength = 536870910
            Me.columnid_tblInvoiceDetail.AutoIncrement = true
            Me.columnid_tblInvoiceDetail.AutoIncrementSeed = -1
            Me.columnid_tblInvoiceDetail.AutoIncrementStep = -1
            Me.columntxtProdCde.MaxLength = 255
            Me.columntxtProdDesc.MaxLength = 255
            Me.columntxtProdSpec1.MaxLength = 255
            Me.columntxtProdSpec2.MaxLength = 255
            Me.columntxtProdSpec3.MaxLength = 255
            Me.columntxtUOM.MaxLength = 12
            Me.columntxtCoInfo.MaxLength = 255
            Me.columntxtCoAd1.MaxLength = 255
            Me.columntxtCoAd2.MaxLength = 255
            Me.columntxtCoAd3.MaxLength = 255
            Me.columntxtCoPosCde.MaxLength = 255
            Me.columntxtVatNo.MaxLength = 15
            Me.columntxtDirectors.MaxLength = 255
            Me.columntxtPrintName.MaxLength = 255
            Me.columntxtTelNo.MaxLength = 255
            Me.columntxtCoEmail.MaxLength = 255
            Me.columntxtFaxNo.MaxLength = 255
            Me.columntxtRegNo.MaxLength = 20
            Me.columntxtCusRef.MaxLength = 255
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewlstInvoiceHeaderDetailsRow() As lstInvoiceHeaderDetailsRow
            Return CType(Me.NewRow,lstInvoiceHeaderDetailsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New lstInvoiceHeaderDetailsRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(lstInvoiceHeaderDetailsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.lstInvoiceHeaderDetailsRowChangedEvent) Is Nothing) Then
                RaiseEvent lstInvoiceHeaderDetailsRowChanged(Me, New lstInvoiceHeaderDetailsRowChangeEvent(CType(e.Row,lstInvoiceHeaderDetailsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.lstInvoiceHeaderDetailsRowChangingEvent) Is Nothing) Then
                RaiseEvent lstInvoiceHeaderDetailsRowChanging(Me, New lstInvoiceHeaderDetailsRowChangeEvent(CType(e.Row,lstInvoiceHeaderDetailsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.lstInvoiceHeaderDetailsRowDeletedEvent) Is Nothing) Then
                RaiseEvent lstInvoiceHeaderDetailsRowDeleted(Me, New lstInvoiceHeaderDetailsRowChangeEvent(CType(e.Row,lstInvoiceHeaderDetailsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.lstInvoiceHeaderDetailsRowDeletingEvent) Is Nothing) Then
                RaiseEvent lstInvoiceHeaderDetailsRowDeleting(Me, New lstInvoiceHeaderDetailsRowChangeEvent(CType(e.Row,lstInvoiceHeaderDetailsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemovelstInvoiceHeaderDetailsRow(ByVal row As lstInvoiceHeaderDetailsRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As MyProdDBDataSet = New MyProdDBDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "lstInvoiceHeaderDetailsDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class lstPOHeaderDetailsDataTable
        Inherits Global.System.Data.TypedTableBase(Of lstPOHeaderDetailsRow)
        
        Private columnid_tblPOHeader As Global.System.Data.DataColumn
        
        Private columnfk_idtblCustomer As Global.System.Data.DataColumn
        
        Private columntxtCompanyNo As Global.System.Data.DataColumn
        
        Private columndblPONum As Global.System.Data.DataColumn
        
        Private columntxtCusDesc As Global.System.Data.DataColumn
        
        Private columntxtAddPos As Global.System.Data.DataColumn
        
        Private columntxtContactName As Global.System.Data.DataColumn
        
        Private columntxtEmail As Global.System.Data.DataColumn
        
        Private columntxtPhone1 As Global.System.Data.DataColumn
        
        Private columntxtPhone2 As Global.System.Data.DataColumn
        
        Private columntxtFax As Global.System.Data.DataColumn
        
        Private columntxtPODate As Global.System.Data.DataColumn
        
        Private columntxtPOOperator As Global.System.Data.DataColumn
        
        Private columntxtPOStatus As Global.System.Data.DataColumn
        
        Private columntxtPODocName As Global.System.Data.DataColumn
        
        Private columntxtNotes As Global.System.Data.DataColumn
        
        Private columnFK_tblQuoteHeader As Global.System.Data.DataColumn
        
        Private columntxtCusRef As Global.System.Data.DataColumn
        
        Private columnid_tblPODetail As Global.System.Data.DataColumn
        
        Private columnfk_tblPOHeader As Global.System.Data.DataColumn
        
        Private columnfk_tblProduct As Global.System.Data.DataColumn
        
        Private columntxtProdCde As Global.System.Data.DataColumn
        
        Private columntxtProdDesc As Global.System.Data.DataColumn
        
        Private columntxtProdSpec1 As Global.System.Data.DataColumn
        
        Private columntxtProdSpec2 As Global.System.Data.DataColumn
        
        Private columntxtProdSpec3 As Global.System.Data.DataColumn
        
        Private columndecQty As Global.System.Data.DataColumn
        
        Private columndecSellingPrice As Global.System.Data.DataColumn
        
        Private columndecSellingValue As Global.System.Data.DataColumn
        
        Private columndecOriginalPrice As Global.System.Data.DataColumn
        
        Private columndecVatPercentage As Global.System.Data.DataColumn
        
        Private columndecVatAmount As Global.System.Data.DataColumn
        
        Private columndecInvoiceLineAmount As Global.System.Data.DataColumn
        
        Private columntxtUOM As Global.System.Data.DataColumn
        
        Private columndblQuoteNum As Global.System.Data.DataColumn
        
        Private columnDateFrom As Global.System.Data.DataColumn
        
        Private columnDateTo As Global.System.Data.DataColumn
        
        Private columnDateETD As Global.System.Data.DataColumn
        
        Private columntxtPOMessage As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "lstPOHeaderDetails"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property id_tblPOHeaderColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnid_tblPOHeader
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property fk_idtblCustomerColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfk_idtblCustomer
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property txtCompanyNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntxtCompanyNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property dblPONumColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndblPONum
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property txtCusDescColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntxtCusDesc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property txtAddPosColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntxtAddPos
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property txtContactNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntxtContactName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property txtEmailColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntxtEmail
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property txtPhone1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columntxtPhone1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property txtPhone2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columntxtPhone2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property txtFaxColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntxtFax
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property txtPODateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntxtPODate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property txtPOOperatorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntxtPOOperator
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property txtPOStatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntxtPOStatus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property txtPODocNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntxtPODocName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property txtNotesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntxtNotes
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FK_tblQuoteHeaderColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFK_tblQuoteHeader
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property txtCusRefColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntxtCusRef
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property id_tblPODetailColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnid_tblPODetail
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property fk_tblPOHeaderColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfk_tblPOHeader
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property fk_tblProductColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfk_tblProduct
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property txtProdCdeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntxtProdCde
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property txtProdDescColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntxtProdDesc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property txtProdSpec1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columntxtProdSpec1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property txtProdSpec2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columntxtProdSpec2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property txtProdSpec3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columntxtProdSpec3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property decQtyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndecQty
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property decSellingPriceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndecSellingPrice
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property decSellingValueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndecSellingValue
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property decOriginalPriceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndecOriginalPrice
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property decVatPercentageColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndecVatPercentage
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property decVatAmountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndecVatAmount
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property decInvoiceLineAmountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndecInvoiceLineAmount
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property txtUOMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntxtUOM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property dblQuoteNumColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndblQuoteNum
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DateFromColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDateFrom
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DateToColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDateTo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DateETDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDateETD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property txtPOMessageColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntxtPOMessage
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As lstPOHeaderDetailsRow
            Get
                Return CType(Me.Rows(index),lstPOHeaderDetailsRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event lstPOHeaderDetailsRowChanging As lstPOHeaderDetailsRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event lstPOHeaderDetailsRowChanged As lstPOHeaderDetailsRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event lstPOHeaderDetailsRowDeleting As lstPOHeaderDetailsRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event lstPOHeaderDetailsRowDeleted As lstPOHeaderDetailsRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddlstPOHeaderDetailsRow(ByVal row As lstPOHeaderDetailsRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddlstPOHeaderDetailsRow( _
                    ByVal fk_idtblCustomer As Integer,  _
                    ByVal txtCompanyNo As Short,  _
                    ByVal dblPONum As Integer,  _
                    ByVal txtCusDesc As String,  _
                    ByVal txtAddPos As String,  _
                    ByVal txtContactName As String,  _
                    ByVal txtEmail As String,  _
                    ByVal txtPhone1 As String,  _
                    ByVal txtPhone2 As String,  _
                    ByVal txtFax As String,  _
                    ByVal txtPODate As Date,  _
                    ByVal txtPOOperator As String,  _
                    ByVal txtPOStatus As String,  _
                    ByVal txtPODocName As String,  _
                    ByVal txtNotes As String,  _
                    ByVal FK_tblQuoteHeader As Integer,  _
                    ByVal txtCusRef As String,  _
                    ByVal fk_tblPOHeader As Integer,  _
                    ByVal fk_tblProduct As Integer,  _
                    ByVal txtProdCde As String,  _
                    ByVal txtProdDesc As String,  _
                    ByVal txtProdSpec1 As String,  _
                    ByVal txtProdSpec2 As String,  _
                    ByVal txtProdSpec3 As String,  _
                    ByVal decQty As Double,  _
                    ByVal decSellingPrice As Double,  _
                    ByVal decSellingValue As Double,  _
                    ByVal decOriginalPrice As Double,  _
                    ByVal decVatPercentage As Double,  _
                    ByVal decVatAmount As Double,  _
                    ByVal decInvoiceLineAmount As Double,  _
                    ByVal txtUOM As String,  _
                    ByVal dblQuoteNum As Integer,  _
                    ByVal DateFrom As Date,  _
                    ByVal DateTo As Date,  _
                    ByVal DateETD As Date,  _
                    ByVal txtPOMessage As String) As lstPOHeaderDetailsRow
            Dim rowlstPOHeaderDetailsRow As lstPOHeaderDetailsRow = CType(Me.NewRow,lstPOHeaderDetailsRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, fk_idtblCustomer, txtCompanyNo, dblPONum, txtCusDesc, txtAddPos, txtContactName, txtEmail, txtPhone1, txtPhone2, txtFax, txtPODate, txtPOOperator, txtPOStatus, txtPODocName, txtNotes, FK_tblQuoteHeader, txtCusRef, Nothing, fk_tblPOHeader, fk_tblProduct, txtProdCde, txtProdDesc, txtProdSpec1, txtProdSpec2, txtProdSpec3, decQty, decSellingPrice, decSellingValue, decOriginalPrice, decVatPercentage, decVatAmount, decInvoiceLineAmount, txtUOM, dblQuoteNum, DateFrom, DateTo, DateETD, txtPOMessage}
            rowlstPOHeaderDetailsRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowlstPOHeaderDetailsRow)
            Return rowlstPOHeaderDetailsRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As lstPOHeaderDetailsDataTable = CType(MyBase.Clone,lstPOHeaderDetailsDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New lstPOHeaderDetailsDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnid_tblPOHeader = MyBase.Columns("id_tblPOHeader")
            Me.columnfk_idtblCustomer = MyBase.Columns("fk_idtblCustomer")
            Me.columntxtCompanyNo = MyBase.Columns("txtCompanyNo")
            Me.columndblPONum = MyBase.Columns("dblPONum")
            Me.columntxtCusDesc = MyBase.Columns("txtCusDesc")
            Me.columntxtAddPos = MyBase.Columns("txtAddPos")
            Me.columntxtContactName = MyBase.Columns("txtContactName")
            Me.columntxtEmail = MyBase.Columns("txtEmail")
            Me.columntxtPhone1 = MyBase.Columns("txtPhone1")
            Me.columntxtPhone2 = MyBase.Columns("txtPhone2")
            Me.columntxtFax = MyBase.Columns("txtFax")
            Me.columntxtPODate = MyBase.Columns("txtPODate")
            Me.columntxtPOOperator = MyBase.Columns("txtPOOperator")
            Me.columntxtPOStatus = MyBase.Columns("txtPOStatus")
            Me.columntxtPODocName = MyBase.Columns("txtPODocName")
            Me.columntxtNotes = MyBase.Columns("txtNotes")
            Me.columnFK_tblQuoteHeader = MyBase.Columns("FK_tblQuoteHeader")
            Me.columntxtCusRef = MyBase.Columns("txtCusRef")
            Me.columnid_tblPODetail = MyBase.Columns("id_tblPODetail")
            Me.columnfk_tblPOHeader = MyBase.Columns("fk_tblPOHeader")
            Me.columnfk_tblProduct = MyBase.Columns("fk_tblProduct")
            Me.columntxtProdCde = MyBase.Columns("txtProdCde")
            Me.columntxtProdDesc = MyBase.Columns("txtProdDesc")
            Me.columntxtProdSpec1 = MyBase.Columns("txtProdSpec1")
            Me.columntxtProdSpec2 = MyBase.Columns("txtProdSpec2")
            Me.columntxtProdSpec3 = MyBase.Columns("txtProdSpec3")
            Me.columndecQty = MyBase.Columns("decQty")
            Me.columndecSellingPrice = MyBase.Columns("decSellingPrice")
            Me.columndecSellingValue = MyBase.Columns("decSellingValue")
            Me.columndecOriginalPrice = MyBase.Columns("decOriginalPrice")
            Me.columndecVatPercentage = MyBase.Columns("decVatPercentage")
            Me.columndecVatAmount = MyBase.Columns("decVatAmount")
            Me.columndecInvoiceLineAmount = MyBase.Columns("decInvoiceLineAmount")
            Me.columntxtUOM = MyBase.Columns("txtUOM")
            Me.columndblQuoteNum = MyBase.Columns("dblQuoteNum")
            Me.columnDateFrom = MyBase.Columns("DateFrom")
            Me.columnDateTo = MyBase.Columns("DateTo")
            Me.columnDateETD = MyBase.Columns("DateETD")
            Me.columntxtPOMessage = MyBase.Columns("txtPOMessage")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnid_tblPOHeader = New Global.System.Data.DataColumn("id_tblPOHeader", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnid_tblPOHeader)
            Me.columnfk_idtblCustomer = New Global.System.Data.DataColumn("fk_idtblCustomer", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfk_idtblCustomer)
            Me.columntxtCompanyNo = New Global.System.Data.DataColumn("txtCompanyNo", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntxtCompanyNo)
            Me.columndblPONum = New Global.System.Data.DataColumn("dblPONum", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndblPONum)
            Me.columntxtCusDesc = New Global.System.Data.DataColumn("txtCusDesc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntxtCusDesc)
            Me.columntxtAddPos = New Global.System.Data.DataColumn("txtAddPos", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntxtAddPos)
            Me.columntxtContactName = New Global.System.Data.DataColumn("txtContactName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntxtContactName)
            Me.columntxtEmail = New Global.System.Data.DataColumn("txtEmail", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntxtEmail)
            Me.columntxtPhone1 = New Global.System.Data.DataColumn("txtPhone1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntxtPhone1)
            Me.columntxtPhone2 = New Global.System.Data.DataColumn("txtPhone2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntxtPhone2)
            Me.columntxtFax = New Global.System.Data.DataColumn("txtFax", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntxtFax)
            Me.columntxtPODate = New Global.System.Data.DataColumn("txtPODate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntxtPODate)
            Me.columntxtPOOperator = New Global.System.Data.DataColumn("txtPOOperator", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntxtPOOperator)
            Me.columntxtPOStatus = New Global.System.Data.DataColumn("txtPOStatus", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntxtPOStatus)
            Me.columntxtPODocName = New Global.System.Data.DataColumn("txtPODocName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntxtPODocName)
            Me.columntxtNotes = New Global.System.Data.DataColumn("txtNotes", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntxtNotes)
            Me.columnFK_tblQuoteHeader = New Global.System.Data.DataColumn("FK_tblQuoteHeader", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFK_tblQuoteHeader)
            Me.columntxtCusRef = New Global.System.Data.DataColumn("txtCusRef", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntxtCusRef)
            Me.columnid_tblPODetail = New Global.System.Data.DataColumn("id_tblPODetail", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnid_tblPODetail)
            Me.columnfk_tblPOHeader = New Global.System.Data.DataColumn("fk_tblPOHeader", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfk_tblPOHeader)
            Me.columnfk_tblProduct = New Global.System.Data.DataColumn("fk_tblProduct", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfk_tblProduct)
            Me.columntxtProdCde = New Global.System.Data.DataColumn("txtProdCde", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntxtProdCde)
            Me.columntxtProdDesc = New Global.System.Data.DataColumn("txtProdDesc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntxtProdDesc)
            Me.columntxtProdSpec1 = New Global.System.Data.DataColumn("txtProdSpec1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntxtProdSpec1)
            Me.columntxtProdSpec2 = New Global.System.Data.DataColumn("txtProdSpec2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntxtProdSpec2)
            Me.columntxtProdSpec3 = New Global.System.Data.DataColumn("txtProdSpec3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntxtProdSpec3)
            Me.columndecQty = New Global.System.Data.DataColumn("decQty", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndecQty)
            Me.columndecSellingPrice = New Global.System.Data.DataColumn("decSellingPrice", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndecSellingPrice)
            Me.columndecSellingValue = New Global.System.Data.DataColumn("decSellingValue", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndecSellingValue)
            Me.columndecOriginalPrice = New Global.System.Data.DataColumn("decOriginalPrice", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndecOriginalPrice)
            Me.columndecVatPercentage = New Global.System.Data.DataColumn("decVatPercentage", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndecVatPercentage)
            Me.columndecVatAmount = New Global.System.Data.DataColumn("decVatAmount", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndecVatAmount)
            Me.columndecInvoiceLineAmount = New Global.System.Data.DataColumn("decInvoiceLineAmount", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndecInvoiceLineAmount)
            Me.columntxtUOM = New Global.System.Data.DataColumn("txtUOM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntxtUOM)
            Me.columndblQuoteNum = New Global.System.Data.DataColumn("dblQuoteNum", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndblQuoteNum)
            Me.columnDateFrom = New Global.System.Data.DataColumn("DateFrom", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDateFrom)
            Me.columnDateTo = New Global.System.Data.DataColumn("DateTo", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDateTo)
            Me.columnDateETD = New Global.System.Data.DataColumn("DateETD", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDateETD)
            Me.columntxtPOMessage = New Global.System.Data.DataColumn("txtPOMessage", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntxtPOMessage)
            Me.columnid_tblPOHeader.AutoIncrement = true
            Me.columnid_tblPOHeader.AutoIncrementSeed = -1
            Me.columnid_tblPOHeader.AutoIncrementStep = -1
            Me.columntxtCusDesc.MaxLength = 255
            Me.columntxtAddPos.MaxLength = 536870910
            Me.columntxtContactName.MaxLength = 255
            Me.columntxtEmail.MaxLength = 255
            Me.columntxtPhone1.MaxLength = 255
            Me.columntxtPhone2.MaxLength = 255
            Me.columntxtFax.MaxLength = 255
            Me.columntxtPOOperator.MaxLength = 255
            Me.columntxtPOStatus.MaxLength = 255
            Me.columntxtPODocName.MaxLength = 255
            Me.columntxtNotes.MaxLength = 536870910
            Me.columntxtCusRef.MaxLength = 255
            Me.columnid_tblPODetail.AutoIncrement = true
            Me.columnid_tblPODetail.AutoIncrementSeed = -1
            Me.columnid_tblPODetail.AutoIncrementStep = -1
            Me.columntxtProdCde.MaxLength = 255
            Me.columntxtProdDesc.MaxLength = 255
            Me.columntxtProdSpec1.MaxLength = 255
            Me.columntxtProdSpec2.MaxLength = 255
            Me.columntxtProdSpec3.MaxLength = 255
            Me.columntxtUOM.MaxLength = 12
            Me.columntxtPOMessage.MaxLength = 536870910
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewlstPOHeaderDetailsRow() As lstPOHeaderDetailsRow
            Return CType(Me.NewRow,lstPOHeaderDetailsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New lstPOHeaderDetailsRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(lstPOHeaderDetailsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.lstPOHeaderDetailsRowChangedEvent) Is Nothing) Then
                RaiseEvent lstPOHeaderDetailsRowChanged(Me, New lstPOHeaderDetailsRowChangeEvent(CType(e.Row,lstPOHeaderDetailsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.lstPOHeaderDetailsRowChangingEvent) Is Nothing) Then
                RaiseEvent lstPOHeaderDetailsRowChanging(Me, New lstPOHeaderDetailsRowChangeEvent(CType(e.Row,lstPOHeaderDetailsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.lstPOHeaderDetailsRowDeletedEvent) Is Nothing) Then
                RaiseEvent lstPOHeaderDetailsRowDeleted(Me, New lstPOHeaderDetailsRowChangeEvent(CType(e.Row,lstPOHeaderDetailsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.lstPOHeaderDetailsRowDeletingEvent) Is Nothing) Then
                RaiseEvent lstPOHeaderDetailsRowDeleting(Me, New lstPOHeaderDetailsRowChangeEvent(CType(e.Row,lstPOHeaderDetailsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemovelstPOHeaderDetailsRow(ByVal row As lstPOHeaderDetailsRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As MyProdDBDataSet = New MyProdDBDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "lstPOHeaderDetailsDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class lstJCDetailsDataTable
        Inherits Global.System.Data.TypedTableBase(Of lstJCDetailsRow)
        
        Private columnid_tblJC As Global.System.Data.DataColumn
        
        Private columndblJCno As Global.System.Data.DataColumn
        
        Private columntxtCusRef As Global.System.Data.DataColumn
        
        Private columnFK_tblPOHeader As Global.System.Data.DataColumn
        
        Private columnFK_tblProduct As Global.System.Data.DataColumn
        
        Private columndblQty As Global.System.Data.DataColumn
        
        Private columnDateETD As Global.System.Data.DataColumn
        
        Private columntxtPic As Global.System.Data.DataColumn
        
        Private columnDateFrom As Global.System.Data.DataColumn
        
        Private columnDateTo As Global.System.Data.DataColumn
        
        Private columntxtCusDesc As Global.System.Data.DataColumn
        
        Private columnFK_tblCustomer As Global.System.Data.DataColumn
        
        Private columnProduct As Global.System.Data.DataColumn
        
        Private columndblPONum As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "lstJCDetails"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property id_tblJCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnid_tblJC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property dblJCnoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndblJCno
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property txtCusRefColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntxtCusRef
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FK_tblPOHeaderColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFK_tblPOHeader
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FK_tblProductColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFK_tblProduct
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property dblQtyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndblQty
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DateETDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDateETD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property txtPicColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntxtPic
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DateFromColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDateFrom
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DateToColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDateTo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property txtCusDescColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntxtCusDesc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FK_tblCustomerColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFK_tblCustomer
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ProductColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnProduct
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property dblPONumColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndblPONum
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As lstJCDetailsRow
            Get
                Return CType(Me.Rows(index),lstJCDetailsRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event lstJCDetailsRowChanging As lstJCDetailsRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event lstJCDetailsRowChanged As lstJCDetailsRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event lstJCDetailsRowDeleting As lstJCDetailsRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event lstJCDetailsRowDeleted As lstJCDetailsRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddlstJCDetailsRow(ByVal row As lstJCDetailsRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddlstJCDetailsRow(ByVal dblJCno As Integer, ByVal txtCusRef As String, ByVal FK_tblPOHeader As Integer, ByVal FK_tblProduct As Integer, ByVal dblQty As Integer, ByVal DateETD As Date, ByVal txtPic As String, ByVal DateFrom As Date, ByVal DateTo As Date, ByVal txtCusDesc As String, ByVal FK_tblCustomer As Integer, ByVal Product As String, ByVal dblPONum As Integer) As lstJCDetailsRow
            Dim rowlstJCDetailsRow As lstJCDetailsRow = CType(Me.NewRow,lstJCDetailsRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, dblJCno, txtCusRef, FK_tblPOHeader, FK_tblProduct, dblQty, DateETD, txtPic, DateFrom, DateTo, txtCusDesc, FK_tblCustomer, Product, dblPONum}
            rowlstJCDetailsRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowlstJCDetailsRow)
            Return rowlstJCDetailsRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByid_tblJC(ByVal id_tblJC As Integer) As lstJCDetailsRow
            Return CType(Me.Rows.Find(New Object() {id_tblJC}),lstJCDetailsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As lstJCDetailsDataTable = CType(MyBase.Clone,lstJCDetailsDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New lstJCDetailsDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnid_tblJC = MyBase.Columns("id_tblJC")
            Me.columndblJCno = MyBase.Columns("dblJCno")
            Me.columntxtCusRef = MyBase.Columns("txtCusRef")
            Me.columnFK_tblPOHeader = MyBase.Columns("FK_tblPOHeader")
            Me.columnFK_tblProduct = MyBase.Columns("FK_tblProduct")
            Me.columndblQty = MyBase.Columns("dblQty")
            Me.columnDateETD = MyBase.Columns("DateETD")
            Me.columntxtPic = MyBase.Columns("txtPic")
            Me.columnDateFrom = MyBase.Columns("DateFrom")
            Me.columnDateTo = MyBase.Columns("DateTo")
            Me.columntxtCusDesc = MyBase.Columns("txtCusDesc")
            Me.columnFK_tblCustomer = MyBase.Columns("FK_tblCustomer")
            Me.columnProduct = MyBase.Columns("Product")
            Me.columndblPONum = MyBase.Columns("dblPONum")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnid_tblJC = New Global.System.Data.DataColumn("id_tblJC", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnid_tblJC)
            Me.columndblJCno = New Global.System.Data.DataColumn("dblJCno", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndblJCno)
            Me.columntxtCusRef = New Global.System.Data.DataColumn("txtCusRef", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntxtCusRef)
            Me.columnFK_tblPOHeader = New Global.System.Data.DataColumn("FK_tblPOHeader", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFK_tblPOHeader)
            Me.columnFK_tblProduct = New Global.System.Data.DataColumn("FK_tblProduct", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFK_tblProduct)
            Me.columndblQty = New Global.System.Data.DataColumn("dblQty", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndblQty)
            Me.columnDateETD = New Global.System.Data.DataColumn("DateETD", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDateETD)
            Me.columntxtPic = New Global.System.Data.DataColumn("txtPic", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntxtPic)
            Me.columnDateFrom = New Global.System.Data.DataColumn("DateFrom", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDateFrom)
            Me.columnDateTo = New Global.System.Data.DataColumn("DateTo", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDateTo)
            Me.columntxtCusDesc = New Global.System.Data.DataColumn("txtCusDesc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntxtCusDesc)
            Me.columnFK_tblCustomer = New Global.System.Data.DataColumn("FK_tblCustomer", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFK_tblCustomer)
            Me.columnProduct = New Global.System.Data.DataColumn("Product", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProduct)
            Me.columndblPONum = New Global.System.Data.DataColumn("dblPONum", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndblPONum)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnid_tblJC}, true))
            Me.columnid_tblJC.AutoIncrement = true
            Me.columnid_tblJC.AutoIncrementSeed = -1
            Me.columnid_tblJC.AutoIncrementStep = -1
            Me.columnid_tblJC.AllowDBNull = false
            Me.columnid_tblJC.Unique = true
            Me.columntxtCusRef.MaxLength = 255
            Me.columntxtPic.MaxLength = 536870910
            Me.columntxtCusDesc.MaxLength = 255
            Me.columnProduct.ReadOnly = true
            Me.columnProduct.MaxLength = 255
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewlstJCDetailsRow() As lstJCDetailsRow
            Return CType(Me.NewRow,lstJCDetailsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New lstJCDetailsRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(lstJCDetailsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.lstJCDetailsRowChangedEvent) Is Nothing) Then
                RaiseEvent lstJCDetailsRowChanged(Me, New lstJCDetailsRowChangeEvent(CType(e.Row,lstJCDetailsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.lstJCDetailsRowChangingEvent) Is Nothing) Then
                RaiseEvent lstJCDetailsRowChanging(Me, New lstJCDetailsRowChangeEvent(CType(e.Row,lstJCDetailsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.lstJCDetailsRowDeletedEvent) Is Nothing) Then
                RaiseEvent lstJCDetailsRowDeleted(Me, New lstJCDetailsRowChangeEvent(CType(e.Row,lstJCDetailsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.lstJCDetailsRowDeletingEvent) Is Nothing) Then
                RaiseEvent lstJCDetailsRowDeleting(Me, New lstJCDetailsRowChangeEvent(CType(e.Row,lstJCDetailsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemovelstJCDetailsRow(ByVal row As lstJCDetailsRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As MyProdDBDataSet = New MyProdDBDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "lstJCDetailsDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class tblJCMaterialDataTable
        Inherits Global.System.Data.TypedTableBase(Of tblJCMaterialRow)
        
        Private columnid_tblJCMaterial As Global.System.Data.DataColumn
        
        Private columnFK_tblJC As Global.System.Data.DataColumn
        
        Private columnFK_tblMatLInk As Global.System.Data.DataColumn
        
        Private columnTxtMaterial As Global.System.Data.DataColumn
        
        Private columnDblProdQty As Global.System.Data.DataColumn
        
        Private columntxtUOM As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "tblJCMaterial"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property id_tblJCMaterialColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnid_tblJCMaterial
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FK_tblJCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFK_tblJC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FK_tblMatLInkColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFK_tblMatLInk
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TxtMaterialColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTxtMaterial
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DblProdQtyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDblProdQty
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property txtUOMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntxtUOM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As tblJCMaterialRow
            Get
                Return CType(Me.Rows(index),tblJCMaterialRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event tblJCMaterialRowChanging As tblJCMaterialRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event tblJCMaterialRowChanged As tblJCMaterialRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event tblJCMaterialRowDeleting As tblJCMaterialRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event tblJCMaterialRowDeleted As tblJCMaterialRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddtblJCMaterialRow(ByVal row As tblJCMaterialRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddtblJCMaterialRow(ByVal FK_tblJC As Integer, ByVal FK_tblMatLInk As Integer, ByVal TxtMaterial As String, ByVal DblProdQty As Double, ByVal txtUOM As String) As tblJCMaterialRow
            Dim rowtblJCMaterialRow As tblJCMaterialRow = CType(Me.NewRow,tblJCMaterialRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, FK_tblJC, FK_tblMatLInk, TxtMaterial, DblProdQty, txtUOM}
            rowtblJCMaterialRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowtblJCMaterialRow)
            Return rowtblJCMaterialRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByid_tblJCMaterial(ByVal id_tblJCMaterial As Integer) As tblJCMaterialRow
            Return CType(Me.Rows.Find(New Object() {id_tblJCMaterial}),tblJCMaterialRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As tblJCMaterialDataTable = CType(MyBase.Clone,tblJCMaterialDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New tblJCMaterialDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnid_tblJCMaterial = MyBase.Columns("id_tblJCMaterial")
            Me.columnFK_tblJC = MyBase.Columns("FK_tblJC")
            Me.columnFK_tblMatLInk = MyBase.Columns("FK_tblMatLInk")
            Me.columnTxtMaterial = MyBase.Columns("TxtMaterial")
            Me.columnDblProdQty = MyBase.Columns("DblProdQty")
            Me.columntxtUOM = MyBase.Columns("txtUOM")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnid_tblJCMaterial = New Global.System.Data.DataColumn("id_tblJCMaterial", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnid_tblJCMaterial)
            Me.columnFK_tblJC = New Global.System.Data.DataColumn("FK_tblJC", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFK_tblJC)
            Me.columnFK_tblMatLInk = New Global.System.Data.DataColumn("FK_tblMatLInk", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFK_tblMatLInk)
            Me.columnTxtMaterial = New Global.System.Data.DataColumn("TxtMaterial", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTxtMaterial)
            Me.columnDblProdQty = New Global.System.Data.DataColumn("DblProdQty", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDblProdQty)
            Me.columntxtUOM = New Global.System.Data.DataColumn("txtUOM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntxtUOM)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnid_tblJCMaterial}, true))
            Me.columnid_tblJCMaterial.AutoIncrement = true
            Me.columnid_tblJCMaterial.AutoIncrementSeed = -1
            Me.columnid_tblJCMaterial.AutoIncrementStep = -1
            Me.columnid_tblJCMaterial.AllowDBNull = false
            Me.columnid_tblJCMaterial.Unique = true
            Me.columnTxtMaterial.MaxLength = 255
            Me.columntxtUOM.MaxLength = 255
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewtblJCMaterialRow() As tblJCMaterialRow
            Return CType(Me.NewRow,tblJCMaterialRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New tblJCMaterialRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(tblJCMaterialRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tblJCMaterialRowChangedEvent) Is Nothing) Then
                RaiseEvent tblJCMaterialRowChanged(Me, New tblJCMaterialRowChangeEvent(CType(e.Row,tblJCMaterialRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tblJCMaterialRowChangingEvent) Is Nothing) Then
                RaiseEvent tblJCMaterialRowChanging(Me, New tblJCMaterialRowChangeEvent(CType(e.Row,tblJCMaterialRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tblJCMaterialRowDeletedEvent) Is Nothing) Then
                RaiseEvent tblJCMaterialRowDeleted(Me, New tblJCMaterialRowChangeEvent(CType(e.Row,tblJCMaterialRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tblJCMaterialRowDeletingEvent) Is Nothing) Then
                RaiseEvent tblJCMaterialRowDeleting(Me, New tblJCMaterialRowChangeEvent(CType(e.Row,tblJCMaterialRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemovetblJCMaterialRow(ByVal row As tblJCMaterialRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As MyProdDBDataSet = New MyProdDBDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "tblJCMaterialDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class tblJCLabourDataTable
        Inherits Global.System.Data.TypedTableBase(Of tblJCLabourRow)
        
        Private columnid_tblJCLabour As Global.System.Data.DataColumn
        
        Private columnFK_tblJC As Global.System.Data.DataColumn
        
        Private columntxtDesc As Global.System.Data.DataColumn
        
        Private columndblMin As Global.System.Data.DataColumn
        
        Private columndblHour As Global.System.Data.DataColumn
        
        Private columntxtOp1 As Global.System.Data.DataColumn
        
        Private columntxtOp2 As Global.System.Data.DataColumn
        
        Private columntxtNotes As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "tblJCLabour"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property id_tblJCLabourColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnid_tblJCLabour
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FK_tblJCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFK_tblJC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property txtDescColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntxtDesc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property dblMinColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndblMin
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property dblHourColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndblHour
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property txtOp1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columntxtOp1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property txtOp2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columntxtOp2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property txtNotesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntxtNotes
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As tblJCLabourRow
            Get
                Return CType(Me.Rows(index),tblJCLabourRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event tblJCLabourRowChanging As tblJCLabourRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event tblJCLabourRowChanged As tblJCLabourRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event tblJCLabourRowDeleting As tblJCLabourRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event tblJCLabourRowDeleted As tblJCLabourRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddtblJCLabourRow(ByVal row As tblJCLabourRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddtblJCLabourRow(ByVal FK_tblJC As Integer, ByVal txtDesc As String, ByVal dblMin As Double, ByVal dblHour As Double, ByVal txtOp1 As String, ByVal txtOp2 As String, ByVal txtNotes As String) As tblJCLabourRow
            Dim rowtblJCLabourRow As tblJCLabourRow = CType(Me.NewRow,tblJCLabourRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, FK_tblJC, txtDesc, dblMin, dblHour, txtOp1, txtOp2, txtNotes}
            rowtblJCLabourRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowtblJCLabourRow)
            Return rowtblJCLabourRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByid_tblJCLabour(ByVal id_tblJCLabour As Integer) As tblJCLabourRow
            Return CType(Me.Rows.Find(New Object() {id_tblJCLabour}),tblJCLabourRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As tblJCLabourDataTable = CType(MyBase.Clone,tblJCLabourDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New tblJCLabourDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnid_tblJCLabour = MyBase.Columns("id_tblJCLabour")
            Me.columnFK_tblJC = MyBase.Columns("FK_tblJC")
            Me.columntxtDesc = MyBase.Columns("txtDesc")
            Me.columndblMin = MyBase.Columns("dblMin")
            Me.columndblHour = MyBase.Columns("dblHour")
            Me.columntxtOp1 = MyBase.Columns("txtOp1")
            Me.columntxtOp2 = MyBase.Columns("txtOp2")
            Me.columntxtNotes = MyBase.Columns("txtNotes")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnid_tblJCLabour = New Global.System.Data.DataColumn("id_tblJCLabour", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnid_tblJCLabour)
            Me.columnFK_tblJC = New Global.System.Data.DataColumn("FK_tblJC", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFK_tblJC)
            Me.columntxtDesc = New Global.System.Data.DataColumn("txtDesc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntxtDesc)
            Me.columndblMin = New Global.System.Data.DataColumn("dblMin", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndblMin)
            Me.columndblHour = New Global.System.Data.DataColumn("dblHour", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndblHour)
            Me.columntxtOp1 = New Global.System.Data.DataColumn("txtOp1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntxtOp1)
            Me.columntxtOp2 = New Global.System.Data.DataColumn("txtOp2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntxtOp2)
            Me.columntxtNotes = New Global.System.Data.DataColumn("txtNotes", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntxtNotes)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnid_tblJCLabour}, true))
            Me.columnid_tblJCLabour.AutoIncrement = true
            Me.columnid_tblJCLabour.AutoIncrementSeed = -1
            Me.columnid_tblJCLabour.AutoIncrementStep = -1
            Me.columnid_tblJCLabour.AllowDBNull = false
            Me.columnid_tblJCLabour.Unique = true
            Me.columntxtDesc.MaxLength = 255
            Me.columntxtOp1.MaxLength = 255
            Me.columntxtOp2.MaxLength = 255
            Me.columntxtNotes.MaxLength = 255
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewtblJCLabourRow() As tblJCLabourRow
            Return CType(Me.NewRow,tblJCLabourRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New tblJCLabourRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(tblJCLabourRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tblJCLabourRowChangedEvent) Is Nothing) Then
                RaiseEvent tblJCLabourRowChanged(Me, New tblJCLabourRowChangeEvent(CType(e.Row,tblJCLabourRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tblJCLabourRowChangingEvent) Is Nothing) Then
                RaiseEvent tblJCLabourRowChanging(Me, New tblJCLabourRowChangeEvent(CType(e.Row,tblJCLabourRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tblJCLabourRowDeletedEvent) Is Nothing) Then
                RaiseEvent tblJCLabourRowDeleted(Me, New tblJCLabourRowChangeEvent(CType(e.Row,tblJCLabourRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tblJCLabourRowDeletingEvent) Is Nothing) Then
                RaiseEvent tblJCLabourRowDeleting(Me, New tblJCLabourRowChangeEvent(CType(e.Row,tblJCLabourRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemovetblJCLabourRow(ByVal row As tblJCLabourRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As MyProdDBDataSet = New MyProdDBDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "tblJCLabourDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class tblProductRow
        Inherits Global.System.Data.DataRow
        
        Private tabletblProduct As tblProductDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabletblProduct = CType(Me.Table,tblProductDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property idtblProduct() As Integer
            Get
                Return CType(Me(Me.tabletblProduct.idtblProductColumn),Integer)
            End Get
            Set
                Me(Me.tabletblProduct.idtblProductColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property txtProdCde() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblProduct.txtProdCdeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'txtProdCde' in table 'tblProduct' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblProduct.txtProdCdeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property txtProdDesc() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblProduct.txtProdDescColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'txtProdDesc' in table 'tblProduct' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblProduct.txtProdDescColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property txtCostSortCat() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblProduct.txtCostSortCatColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'txtCostSortCat' in table 'tblProduct' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblProduct.txtCostSortCatColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property txtCostSortItem() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblProduct.txtCostSortItemColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'txtCostSortItem' in table 'tblProduct' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblProduct.txtCostSortItemColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FK_idtblCoInfo() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletblProduct.FK_idtblCoInfoColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FK_idtblCoInfo' in table 'tblProduct' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblProduct.FK_idtblCoInfoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property txtProdSpec1() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblProduct.txtProdSpec1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'txtProdSpec1' in table 'tblProduct' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblProduct.txtProdSpec1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property txtProdSpec2() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblProduct.txtProdSpec2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'txtProdSpec2' in table 'tblProduct' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblProduct.txtProdSpec2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property txtProdSpec3() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblProduct.txtProdSpec3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'txtProdSpec3' in table 'tblProduct' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblProduct.txtProdSpec3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IstxtProdCdeNull() As Boolean
            Return Me.IsNull(Me.tabletblProduct.txtProdCdeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SettxtProdCdeNull()
            Me(Me.tabletblProduct.txtProdCdeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IstxtProdDescNull() As Boolean
            Return Me.IsNull(Me.tabletblProduct.txtProdDescColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SettxtProdDescNull()
            Me(Me.tabletblProduct.txtProdDescColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IstxtCostSortCatNull() As Boolean
            Return Me.IsNull(Me.tabletblProduct.txtCostSortCatColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SettxtCostSortCatNull()
            Me(Me.tabletblProduct.txtCostSortCatColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IstxtCostSortItemNull() As Boolean
            Return Me.IsNull(Me.tabletblProduct.txtCostSortItemColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SettxtCostSortItemNull()
            Me(Me.tabletblProduct.txtCostSortItemColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFK_idtblCoInfoNull() As Boolean
            Return Me.IsNull(Me.tabletblProduct.FK_idtblCoInfoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFK_idtblCoInfoNull()
            Me(Me.tabletblProduct.FK_idtblCoInfoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IstxtProdSpec1Null() As Boolean
            Return Me.IsNull(Me.tabletblProduct.txtProdSpec1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SettxtProdSpec1Null()
            Me(Me.tabletblProduct.txtProdSpec1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IstxtProdSpec2Null() As Boolean
            Return Me.IsNull(Me.tabletblProduct.txtProdSpec2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SettxtProdSpec2Null()
            Me(Me.tabletblProduct.txtProdSpec2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IstxtProdSpec3Null() As Boolean
            Return Me.IsNull(Me.tabletblProduct.txtProdSpec3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SettxtProdSpec3Null()
            Me(Me.tabletblProduct.txtProdSpec3Column) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class tblCoInfoRow
        Inherits Global.System.Data.DataRow
        
        Private tabletblCoInfo As tblCoInfoDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabletblCoInfo = CType(Me.Table,tblCoInfoDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property idtblCoInfo() As Integer
            Get
                Return CType(Me(Me.tabletblCoInfo.idtblCoInfoColumn),Integer)
            End Get
            Set
                Me(Me.tabletblCoInfo.idtblCoInfoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property txtCoInfo() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblCoInfo.txtCoInfoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'txtCoInfo' in table 'tblCoInfo' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblCoInfo.txtCoInfoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property txtCoAd1() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblCoInfo.txtCoAd1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'txtCoAd1' in table 'tblCoInfo' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblCoInfo.txtCoAd1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property txtCoAd2() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblCoInfo.txtCoAd2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'txtCoAd2' in table 'tblCoInfo' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblCoInfo.txtCoAd2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property txtCoAd3() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblCoInfo.txtCoAd3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'txtCoAd3' in table 'tblCoInfo' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblCoInfo.txtCoAd3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property txtCoPosCde() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblCoInfo.txtCoPosCdeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'txtCoPosCde' in table 'tblCoInfo' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblCoInfo.txtCoPosCdeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property dteFinYearEnd() As Date
            Get
                Try 
                    Return CType(Me(Me.tabletblCoInfo.dteFinYearEndColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'dteFinYearEnd' in table 'tblCoInfo' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblCoInfo.dteFinYearEndColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property dblNormalLabHours() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletblCoInfo.dblNormalLabHoursColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'dblNormalLabHours' in table 'tblCoInfo' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblCoInfo.dblNormalLabHoursColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property dblFridayLabHours() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletblCoInfo.dblFridayLabHoursColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'dblFridayLabHours' in table 'tblCoInfo' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblCoInfo.dblFridayLabHoursColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property perSalesIncrease() As Double
            Get
                Try 
                    Return CType(Me(Me.tabletblCoInfo.perSalesIncreaseColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'perSalesIncrease' in table 'tblCoInfo' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblCoInfo.perSalesIncreaseColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property dblLeaveDays() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletblCoInfo.dblLeaveDaysColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'dblLeaveDays' in table 'tblCoInfo' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblCoInfo.dblLeaveDaysColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property perPriceIncrease() As Double
            Get
                Try 
                    Return CType(Me(Me.tabletblCoInfo.perPriceIncreaseColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'perPriceIncrease' in table 'tblCoInfo' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblCoInfo.perPriceIncreaseColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property perLabIncrease() As Double
            Get
                Try 
                    Return CType(Me(Me.tabletblCoInfo.perLabIncreaseColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'perLabIncrease' in table 'tblCoInfo' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblCoInfo.perLabIncreaseColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property perOHIncrease() As Double
            Get
                Try 
                    Return CType(Me(Me.tabletblCoInfo.perOHIncreaseColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'perOHIncrease' in table 'tblCoInfo' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblCoInfo.perOHIncreaseColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property perMatPriceIncrease() As Double
            Get
                Try 
                    Return CType(Me(Me.tabletblCoInfo.perMatPriceIncreaseColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'perMatPriceIncrease' in table 'tblCoInfo' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblCoInfo.perMatPriceIncreaseColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property perRentIncrease() As Double
            Get
                Try 
                    Return CType(Me(Me.tabletblCoInfo.perRentIncreaseColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'perRentIncrease' in table 'tblCoInfo' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblCoInfo.perRentIncreaseColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property dblCashOB() As Double
            Get
                Try 
                    Return CType(Me(Me.tabletblCoInfo.dblCashOBColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'dblCashOB' in table 'tblCoInfo' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblCoInfo.dblCashOBColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property dblDebOB() As Double
            Get
                Try 
                    Return CType(Me(Me.tabletblCoInfo.dblDebOBColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'dblDebOB' in table 'tblCoInfo' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblCoInfo.dblDebOBColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property dblCredOB() As Double
            Get
                Try 
                    Return CType(Me(Me.tabletblCoInfo.dblCredOBColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'dblCredOB' in table 'tblCoInfo' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblCoInfo.dblCredOBColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property txtProdUnique() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblCoInfo.txtProdUniqueColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'txtProdUnique' in table 'tblCoInfo' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblCoInfo.txtProdUniqueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property dblAvgDebDays() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletblCoInfo.dblAvgDebDaysColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'dblAvgDebDays' in table 'tblCoInfo' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblCoInfo.dblAvgDebDaysColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property dblAvgPayDays() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletblCoInfo.dblAvgPayDaysColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'dblAvgPayDays' in table 'tblCoInfo' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblCoInfo.dblAvgPayDaysColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IstxtCoInfoNull() As Boolean
            Return Me.IsNull(Me.tabletblCoInfo.txtCoInfoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SettxtCoInfoNull()
            Me(Me.tabletblCoInfo.txtCoInfoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IstxtCoAd1Null() As Boolean
            Return Me.IsNull(Me.tabletblCoInfo.txtCoAd1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SettxtCoAd1Null()
            Me(Me.tabletblCoInfo.txtCoAd1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IstxtCoAd2Null() As Boolean
            Return Me.IsNull(Me.tabletblCoInfo.txtCoAd2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SettxtCoAd2Null()
            Me(Me.tabletblCoInfo.txtCoAd2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IstxtCoAd3Null() As Boolean
            Return Me.IsNull(Me.tabletblCoInfo.txtCoAd3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SettxtCoAd3Null()
            Me(Me.tabletblCoInfo.txtCoAd3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IstxtCoPosCdeNull() As Boolean
            Return Me.IsNull(Me.tabletblCoInfo.txtCoPosCdeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SettxtCoPosCdeNull()
            Me(Me.tabletblCoInfo.txtCoPosCdeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsdteFinYearEndNull() As Boolean
            Return Me.IsNull(Me.tabletblCoInfo.dteFinYearEndColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetdteFinYearEndNull()
            Me(Me.tabletblCoInfo.dteFinYearEndColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsdblNormalLabHoursNull() As Boolean
            Return Me.IsNull(Me.tabletblCoInfo.dblNormalLabHoursColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetdblNormalLabHoursNull()
            Me(Me.tabletblCoInfo.dblNormalLabHoursColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsdblFridayLabHoursNull() As Boolean
            Return Me.IsNull(Me.tabletblCoInfo.dblFridayLabHoursColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetdblFridayLabHoursNull()
            Me(Me.tabletblCoInfo.dblFridayLabHoursColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsperSalesIncreaseNull() As Boolean
            Return Me.IsNull(Me.tabletblCoInfo.perSalesIncreaseColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetperSalesIncreaseNull()
            Me(Me.tabletblCoInfo.perSalesIncreaseColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsdblLeaveDaysNull() As Boolean
            Return Me.IsNull(Me.tabletblCoInfo.dblLeaveDaysColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetdblLeaveDaysNull()
            Me(Me.tabletblCoInfo.dblLeaveDaysColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsperPriceIncreaseNull() As Boolean
            Return Me.IsNull(Me.tabletblCoInfo.perPriceIncreaseColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetperPriceIncreaseNull()
            Me(Me.tabletblCoInfo.perPriceIncreaseColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsperLabIncreaseNull() As Boolean
            Return Me.IsNull(Me.tabletblCoInfo.perLabIncreaseColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetperLabIncreaseNull()
            Me(Me.tabletblCoInfo.perLabIncreaseColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsperOHIncreaseNull() As Boolean
            Return Me.IsNull(Me.tabletblCoInfo.perOHIncreaseColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetperOHIncreaseNull()
            Me(Me.tabletblCoInfo.perOHIncreaseColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsperMatPriceIncreaseNull() As Boolean
            Return Me.IsNull(Me.tabletblCoInfo.perMatPriceIncreaseColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetperMatPriceIncreaseNull()
            Me(Me.tabletblCoInfo.perMatPriceIncreaseColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsperRentIncreaseNull() As Boolean
            Return Me.IsNull(Me.tabletblCoInfo.perRentIncreaseColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetperRentIncreaseNull()
            Me(Me.tabletblCoInfo.perRentIncreaseColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsdblCashOBNull() As Boolean
            Return Me.IsNull(Me.tabletblCoInfo.dblCashOBColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetdblCashOBNull()
            Me(Me.tabletblCoInfo.dblCashOBColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsdblDebOBNull() As Boolean
            Return Me.IsNull(Me.tabletblCoInfo.dblDebOBColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetdblDebOBNull()
            Me(Me.tabletblCoInfo.dblDebOBColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsdblCredOBNull() As Boolean
            Return Me.IsNull(Me.tabletblCoInfo.dblCredOBColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetdblCredOBNull()
            Me(Me.tabletblCoInfo.dblCredOBColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IstxtProdUniqueNull() As Boolean
            Return Me.IsNull(Me.tabletblCoInfo.txtProdUniqueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SettxtProdUniqueNull()
            Me(Me.tabletblCoInfo.txtProdUniqueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsdblAvgDebDaysNull() As Boolean
            Return Me.IsNull(Me.tabletblCoInfo.dblAvgDebDaysColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetdblAvgDebDaysNull()
            Me(Me.tabletblCoInfo.dblAvgDebDaysColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsdblAvgPayDaysNull() As Boolean
            Return Me.IsNull(Me.tabletblCoInfo.dblAvgPayDaysColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetdblAvgPayDaysNull()
            Me(Me.tabletblCoInfo.dblAvgPayDaysColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class lstQuoteHeaderDetailsRow
        Inherits Global.System.Data.DataRow
        
        Private tablelstQuoteHeaderDetails As lstQuoteHeaderDetailsDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablelstQuoteHeaderDetails = CType(Me.Table,lstQuoteHeaderDetailsDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property id_tblQuoteHeader() As Integer
            Get
                Return CType(Me(Me.tablelstQuoteHeaderDetails.id_tblQuoteHeaderColumn),Integer)
            End Get
            Set
                Me(Me.tablelstQuoteHeaderDetails.id_tblQuoteHeaderColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property fk_idtblCustomer() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablelstQuoteHeaderDetails.fk_idtblCustomerColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'fk_idtblCustomer' in table 'lstQuoteHeaderDetails' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstQuoteHeaderDetails.fk_idtblCustomerColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property dblQuoteNum() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablelstQuoteHeaderDetails.dblQuoteNumColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'dblQuoteNum' in table 'lstQuoteHeaderDetails' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstQuoteHeaderDetails.dblQuoteNumColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property txtCusDesc() As String
            Get
                Try 
                    Return CType(Me(Me.tablelstQuoteHeaderDetails.txtCusDescColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'txtCusDesc' in table 'lstQuoteHeaderDetails' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstQuoteHeaderDetails.txtCusDescColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property txtAddPos() As String
            Get
                Try 
                    Return CType(Me(Me.tablelstQuoteHeaderDetails.txtAddPosColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'txtAddPos' in table 'lstQuoteHeaderDetails' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstQuoteHeaderDetails.txtAddPosColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property txtContactName() As String
            Get
                Try 
                    Return CType(Me(Me.tablelstQuoteHeaderDetails.txtContactNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'txtContactName' in table 'lstQuoteHeaderDetails' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tablelstQuoteHeaderDetails.txtContactNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property txtEmail() As String
            Get
                Try 
                    Return CType(Me(Me.tablelstQuoteHeaderDetails.txtEmailColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'txtEmail' in table 'lstQuoteHeaderDetails' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstQuoteHeaderDetails.txtEmailColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property txtPhone1() As String
            Get
                Try 
                    Return CType(Me(Me.tablelstQuoteHeaderDetails.txtPhone1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'txtPhone1' in table 'lstQuoteHeaderDetails' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstQuoteHeaderDetails.txtPhone1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property txtPhone2() As String
            Get
                Try 
                    Return CType(Me(Me.tablelstQuoteHeaderDetails.txtPhone2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'txtPhone2' in table 'lstQuoteHeaderDetails' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstQuoteHeaderDetails.txtPhone2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property txtFax() As String
            Get
                Try 
                    Return CType(Me(Me.tablelstQuoteHeaderDetails.txtFaxColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'txtFax' in table 'lstQuoteHeaderDetails' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstQuoteHeaderDetails.txtFaxColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property txtQuoteDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tablelstQuoteHeaderDetails.txtQuoteDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'txtQuoteDate' in table 'lstQuoteHeaderDetails' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstQuoteHeaderDetails.txtQuoteDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property txtQuoteOperator() As String
            Get
                Try 
                    Return CType(Me(Me.tablelstQuoteHeaderDetails.txtQuoteOperatorColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'txtQuoteOperator' in table 'lstQuoteHeaderDetails' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstQuoteHeaderDetails.txtQuoteOperatorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property txtQuoteStatus() As String
            Get
                Try 
                    Return CType(Me(Me.tablelstQuoteHeaderDetails.txtQuoteStatusColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'txtQuoteStatus' in table 'lstQuoteHeaderDetails' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tablelstQuoteHeaderDetails.txtQuoteStatusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property txtQuoteDocName() As String
            Get
                Try 
                    Return CType(Me(Me.tablelstQuoteHeaderDetails.txtQuoteDocNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'txtQuoteDocName' in table 'lstQuoteHeaderDetails' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tablelstQuoteHeaderDetails.txtQuoteDocNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property txtNotes() As String
            Get
                Try 
                    Return CType(Me(Me.tablelstQuoteHeaderDetails.txtNotesColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'txtNotes' in table 'lstQuoteHeaderDetails' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstQuoteHeaderDetails.txtNotesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property id_tblQuoteDetails() As Integer
            Get
                Return CType(Me(Me.tablelstQuoteHeaderDetails.id_tblQuoteDetailsColumn),Integer)
            End Get
            Set
                Me(Me.tablelstQuoteHeaderDetails.id_tblQuoteDetailsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property fk_tblQuoteHeader() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablelstQuoteHeaderDetails.fk_tblQuoteHeaderColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'fk_tblQuoteHeader' in table 'lstQuoteHeaderDetails' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstQuoteHeaderDetails.fk_tblQuoteHeaderColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property fk_tblProduct() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablelstQuoteHeaderDetails.fk_tblProductColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'fk_tblProduct' in table 'lstQuoteHeaderDetails' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstQuoteHeaderDetails.fk_tblProductColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property txtProdCde() As String
            Get
                Try 
                    Return CType(Me(Me.tablelstQuoteHeaderDetails.txtProdCdeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'txtProdCde' in table 'lstQuoteHeaderDetails' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstQuoteHeaderDetails.txtProdCdeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property txtProdDesc() As String
            Get
                Try 
                    Return CType(Me(Me.tablelstQuoteHeaderDetails.txtProdDescColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'txtProdDesc' in table 'lstQuoteHeaderDetails' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstQuoteHeaderDetails.txtProdDescColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property txtProdSpec1() As String
            Get
                Try 
                    Return CType(Me(Me.tablelstQuoteHeaderDetails.txtProdSpec1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'txtProdSpec1' in table 'lstQuoteHeaderDetails' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstQuoteHeaderDetails.txtProdSpec1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property txtProdSpec2() As String
            Get
                Try 
                    Return CType(Me(Me.tablelstQuoteHeaderDetails.txtProdSpec2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'txtProdSpec2' in table 'lstQuoteHeaderDetails' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstQuoteHeaderDetails.txtProdSpec2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property txtProdSpec3() As String
            Get
                Try 
                    Return CType(Me(Me.tablelstQuoteHeaderDetails.txtProdSpec3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'txtProdSpec3' in table 'lstQuoteHeaderDetails' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstQuoteHeaderDetails.txtProdSpec3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property decQty() As Double
            Get
                Try 
                    Return CType(Me(Me.tablelstQuoteHeaderDetails.decQtyColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'decQty' in table 'lstQuoteHeaderDetails' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstQuoteHeaderDetails.decQtyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property decSellingPrice() As Double
            Get
                Try 
                    Return CType(Me(Me.tablelstQuoteHeaderDetails.decSellingPriceColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'decSellingPrice' in table 'lstQuoteHeaderDetails' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tablelstQuoteHeaderDetails.decSellingPriceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property decSellingValue() As Double
            Get
                Try 
                    Return CType(Me(Me.tablelstQuoteHeaderDetails.decSellingValueColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'decSellingValue' in table 'lstQuoteHeaderDetails' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tablelstQuoteHeaderDetails.decSellingValueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property decOriginalPrice() As Double
            Get
                Try 
                    Return CType(Me(Me.tablelstQuoteHeaderDetails.decOriginalPriceColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'decOriginalPrice' in table 'lstQuoteHeaderDetails' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstQuoteHeaderDetails.decOriginalPriceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property decVatPercentage() As Double
            Get
                Try 
                    Return CType(Me(Me.tablelstQuoteHeaderDetails.decVatPercentageColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'decVatPercentage' in table 'lstQuoteHeaderDetails' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstQuoteHeaderDetails.decVatPercentageColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property decVatAmount() As Double
            Get
                Try 
                    Return CType(Me(Me.tablelstQuoteHeaderDetails.decVatAmountColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'decVatAmount' in table 'lstQuoteHeaderDetails' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstQuoteHeaderDetails.decVatAmountColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property decQuoteLineAmount() As Double
            Get
                Try 
                    Return CType(Me(Me.tablelstQuoteHeaderDetails.decQuoteLineAmountColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'decQuoteLineAmount' in table 'lstQuoteHeaderDetails' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstQuoteHeaderDetails.decQuoteLineAmountColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property txtCompanyNo() As Short
            Get
                Try 
                    Return CType(Me(Me.tablelstQuoteHeaderDetails.txtCompanyNoColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'txtCompanyNo' in table 'lstQuoteHeaderDetails' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstQuoteHeaderDetails.txtCompanyNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property txtCoInfo() As String
            Get
                Try 
                    Return CType(Me(Me.tablelstQuoteHeaderDetails.txtCoInfoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'txtCoInfo' in table 'lstQuoteHeaderDetails' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstQuoteHeaderDetails.txtCoInfoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property txtCoAd1() As String
            Get
                Try 
                    Return CType(Me(Me.tablelstQuoteHeaderDetails.txtCoAd1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'txtCoAd1' in table 'lstQuoteHeaderDetails' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstQuoteHeaderDetails.txtCoAd1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property txtCoAd2() As String
            Get
                Try 
                    Return CType(Me(Me.tablelstQuoteHeaderDetails.txtCoAd2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'txtCoAd2' in table 'lstQuoteHeaderDetails' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstQuoteHeaderDetails.txtCoAd2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property txtCoAd3() As String
            Get
                Try 
                    Return CType(Me(Me.tablelstQuoteHeaderDetails.txtCoAd3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'txtCoAd3' in table 'lstQuoteHeaderDetails' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstQuoteHeaderDetails.txtCoAd3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property txtCoPosCde() As String
            Get
                Try 
                    Return CType(Me(Me.tablelstQuoteHeaderDetails.txtCoPosCdeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'txtCoPosCde' in table 'lstQuoteHeaderDetails' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstQuoteHeaderDetails.txtCoPosCdeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property txtVatNo() As String
            Get
                Try 
                    Return CType(Me(Me.tablelstQuoteHeaderDetails.txtVatNoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'txtVatNo' in table 'lstQuoteHeaderDetails' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstQuoteHeaderDetails.txtVatNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property txtRegNo() As String
            Get
                Try 
                    Return CType(Me(Me.tablelstQuoteHeaderDetails.txtRegNoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'txtRegNo' in table 'lstQuoteHeaderDetails' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstQuoteHeaderDetails.txtRegNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property txtDirectors() As String
            Get
                Try 
                    Return CType(Me(Me.tablelstQuoteHeaderDetails.txtDirectorsColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'txtDirectors' in table 'lstQuoteHeaderDetails' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstQuoteHeaderDetails.txtDirectorsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property txtPrintName() As String
            Get
                Try 
                    Return CType(Me(Me.tablelstQuoteHeaderDetails.txtPrintNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'txtPrintName' in table 'lstQuoteHeaderDetails' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstQuoteHeaderDetails.txtPrintNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property txtCoEmail() As String
            Get
                If Me.IstxtCoEmailNull Then
                    Return Nothing
                Else
                    Return CType(Me(Me.tablelstQuoteHeaderDetails.txtCoEmailColumn),String)
                End If
            End Get
            Set
                Me(Me.tablelstQuoteHeaderDetails.txtCoEmailColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property txtTelNo() As String
            Get
                Try 
                    Return CType(Me(Me.tablelstQuoteHeaderDetails.txtTelNoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'txtTelNo' in table 'lstQuoteHeaderDetails' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstQuoteHeaderDetails.txtTelNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property txtFaxNo() As String
            Get
                Try 
                    Return CType(Me(Me.tablelstQuoteHeaderDetails.txtFaxNoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'txtFaxNo' in table 'lstQuoteHeaderDetails' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstQuoteHeaderDetails.txtFaxNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property txtUOM() As String
            Get
                Try 
                    Return CType(Me(Me.tablelstQuoteHeaderDetails.txtUOMColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'txtUOM' in table 'lstQuoteHeaderDetails' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstQuoteHeaderDetails.txtUOMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isfk_idtblCustomerNull() As Boolean
            Return Me.IsNull(Me.tablelstQuoteHeaderDetails.fk_idtblCustomerColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setfk_idtblCustomerNull()
            Me(Me.tablelstQuoteHeaderDetails.fk_idtblCustomerColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsdblQuoteNumNull() As Boolean
            Return Me.IsNull(Me.tablelstQuoteHeaderDetails.dblQuoteNumColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetdblQuoteNumNull()
            Me(Me.tablelstQuoteHeaderDetails.dblQuoteNumColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IstxtCusDescNull() As Boolean
            Return Me.IsNull(Me.tablelstQuoteHeaderDetails.txtCusDescColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SettxtCusDescNull()
            Me(Me.tablelstQuoteHeaderDetails.txtCusDescColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IstxtAddPosNull() As Boolean
            Return Me.IsNull(Me.tablelstQuoteHeaderDetails.txtAddPosColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SettxtAddPosNull()
            Me(Me.tablelstQuoteHeaderDetails.txtAddPosColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IstxtContactNameNull() As Boolean
            Return Me.IsNull(Me.tablelstQuoteHeaderDetails.txtContactNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SettxtContactNameNull()
            Me(Me.tablelstQuoteHeaderDetails.txtContactNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IstxtEmailNull() As Boolean
            Return Me.IsNull(Me.tablelstQuoteHeaderDetails.txtEmailColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SettxtEmailNull()
            Me(Me.tablelstQuoteHeaderDetails.txtEmailColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IstxtPhone1Null() As Boolean
            Return Me.IsNull(Me.tablelstQuoteHeaderDetails.txtPhone1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SettxtPhone1Null()
            Me(Me.tablelstQuoteHeaderDetails.txtPhone1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IstxtPhone2Null() As Boolean
            Return Me.IsNull(Me.tablelstQuoteHeaderDetails.txtPhone2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SettxtPhone2Null()
            Me(Me.tablelstQuoteHeaderDetails.txtPhone2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IstxtFaxNull() As Boolean
            Return Me.IsNull(Me.tablelstQuoteHeaderDetails.txtFaxColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SettxtFaxNull()
            Me(Me.tablelstQuoteHeaderDetails.txtFaxColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IstxtQuoteDateNull() As Boolean
            Return Me.IsNull(Me.tablelstQuoteHeaderDetails.txtQuoteDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SettxtQuoteDateNull()
            Me(Me.tablelstQuoteHeaderDetails.txtQuoteDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IstxtQuoteOperatorNull() As Boolean
            Return Me.IsNull(Me.tablelstQuoteHeaderDetails.txtQuoteOperatorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SettxtQuoteOperatorNull()
            Me(Me.tablelstQuoteHeaderDetails.txtQuoteOperatorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IstxtQuoteStatusNull() As Boolean
            Return Me.IsNull(Me.tablelstQuoteHeaderDetails.txtQuoteStatusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SettxtQuoteStatusNull()
            Me(Me.tablelstQuoteHeaderDetails.txtQuoteStatusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IstxtQuoteDocNameNull() As Boolean
            Return Me.IsNull(Me.tablelstQuoteHeaderDetails.txtQuoteDocNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SettxtQuoteDocNameNull()
            Me(Me.tablelstQuoteHeaderDetails.txtQuoteDocNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IstxtNotesNull() As Boolean
            Return Me.IsNull(Me.tablelstQuoteHeaderDetails.txtNotesColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SettxtNotesNull()
            Me(Me.tablelstQuoteHeaderDetails.txtNotesColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isfk_tblQuoteHeaderNull() As Boolean
            Return Me.IsNull(Me.tablelstQuoteHeaderDetails.fk_tblQuoteHeaderColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setfk_tblQuoteHeaderNull()
            Me(Me.tablelstQuoteHeaderDetails.fk_tblQuoteHeaderColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isfk_tblProductNull() As Boolean
            Return Me.IsNull(Me.tablelstQuoteHeaderDetails.fk_tblProductColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setfk_tblProductNull()
            Me(Me.tablelstQuoteHeaderDetails.fk_tblProductColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IstxtProdCdeNull() As Boolean
            Return Me.IsNull(Me.tablelstQuoteHeaderDetails.txtProdCdeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SettxtProdCdeNull()
            Me(Me.tablelstQuoteHeaderDetails.txtProdCdeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IstxtProdDescNull() As Boolean
            Return Me.IsNull(Me.tablelstQuoteHeaderDetails.txtProdDescColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SettxtProdDescNull()
            Me(Me.tablelstQuoteHeaderDetails.txtProdDescColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IstxtProdSpec1Null() As Boolean
            Return Me.IsNull(Me.tablelstQuoteHeaderDetails.txtProdSpec1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SettxtProdSpec1Null()
            Me(Me.tablelstQuoteHeaderDetails.txtProdSpec1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IstxtProdSpec2Null() As Boolean
            Return Me.IsNull(Me.tablelstQuoteHeaderDetails.txtProdSpec2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SettxtProdSpec2Null()
            Me(Me.tablelstQuoteHeaderDetails.txtProdSpec2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IstxtProdSpec3Null() As Boolean
            Return Me.IsNull(Me.tablelstQuoteHeaderDetails.txtProdSpec3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SettxtProdSpec3Null()
            Me(Me.tablelstQuoteHeaderDetails.txtProdSpec3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsdecQtyNull() As Boolean
            Return Me.IsNull(Me.tablelstQuoteHeaderDetails.decQtyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetdecQtyNull()
            Me(Me.tablelstQuoteHeaderDetails.decQtyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsdecSellingPriceNull() As Boolean
            Return Me.IsNull(Me.tablelstQuoteHeaderDetails.decSellingPriceColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetdecSellingPriceNull()
            Me(Me.tablelstQuoteHeaderDetails.decSellingPriceColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsdecSellingValueNull() As Boolean
            Return Me.IsNull(Me.tablelstQuoteHeaderDetails.decSellingValueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetdecSellingValueNull()
            Me(Me.tablelstQuoteHeaderDetails.decSellingValueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsdecOriginalPriceNull() As Boolean
            Return Me.IsNull(Me.tablelstQuoteHeaderDetails.decOriginalPriceColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetdecOriginalPriceNull()
            Me(Me.tablelstQuoteHeaderDetails.decOriginalPriceColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsdecVatPercentageNull() As Boolean
            Return Me.IsNull(Me.tablelstQuoteHeaderDetails.decVatPercentageColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetdecVatPercentageNull()
            Me(Me.tablelstQuoteHeaderDetails.decVatPercentageColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsdecVatAmountNull() As Boolean
            Return Me.IsNull(Me.tablelstQuoteHeaderDetails.decVatAmountColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetdecVatAmountNull()
            Me(Me.tablelstQuoteHeaderDetails.decVatAmountColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsdecQuoteLineAmountNull() As Boolean
            Return Me.IsNull(Me.tablelstQuoteHeaderDetails.decQuoteLineAmountColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetdecQuoteLineAmountNull()
            Me(Me.tablelstQuoteHeaderDetails.decQuoteLineAmountColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IstxtCompanyNoNull() As Boolean
            Return Me.IsNull(Me.tablelstQuoteHeaderDetails.txtCompanyNoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SettxtCompanyNoNull()
            Me(Me.tablelstQuoteHeaderDetails.txtCompanyNoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IstxtCoInfoNull() As Boolean
            Return Me.IsNull(Me.tablelstQuoteHeaderDetails.txtCoInfoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SettxtCoInfoNull()
            Me(Me.tablelstQuoteHeaderDetails.txtCoInfoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IstxtCoAd1Null() As Boolean
            Return Me.IsNull(Me.tablelstQuoteHeaderDetails.txtCoAd1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SettxtCoAd1Null()
            Me(Me.tablelstQuoteHeaderDetails.txtCoAd1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IstxtCoAd2Null() As Boolean
            Return Me.IsNull(Me.tablelstQuoteHeaderDetails.txtCoAd2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SettxtCoAd2Null()
            Me(Me.tablelstQuoteHeaderDetails.txtCoAd2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IstxtCoAd3Null() As Boolean
            Return Me.IsNull(Me.tablelstQuoteHeaderDetails.txtCoAd3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SettxtCoAd3Null()
            Me(Me.tablelstQuoteHeaderDetails.txtCoAd3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IstxtCoPosCdeNull() As Boolean
            Return Me.IsNull(Me.tablelstQuoteHeaderDetails.txtCoPosCdeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SettxtCoPosCdeNull()
            Me(Me.tablelstQuoteHeaderDetails.txtCoPosCdeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IstxtVatNoNull() As Boolean
            Return Me.IsNull(Me.tablelstQuoteHeaderDetails.txtVatNoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SettxtVatNoNull()
            Me(Me.tablelstQuoteHeaderDetails.txtVatNoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IstxtRegNoNull() As Boolean
            Return Me.IsNull(Me.tablelstQuoteHeaderDetails.txtRegNoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SettxtRegNoNull()
            Me(Me.tablelstQuoteHeaderDetails.txtRegNoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IstxtDirectorsNull() As Boolean
            Return Me.IsNull(Me.tablelstQuoteHeaderDetails.txtDirectorsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SettxtDirectorsNull()
            Me(Me.tablelstQuoteHeaderDetails.txtDirectorsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IstxtPrintNameNull() As Boolean
            Return Me.IsNull(Me.tablelstQuoteHeaderDetails.txtPrintNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SettxtPrintNameNull()
            Me(Me.tablelstQuoteHeaderDetails.txtPrintNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IstxtCoEmailNull() As Boolean
            Return Me.IsNull(Me.tablelstQuoteHeaderDetails.txtCoEmailColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SettxtCoEmailNull()
            Me(Me.tablelstQuoteHeaderDetails.txtCoEmailColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IstxtTelNoNull() As Boolean
            Return Me.IsNull(Me.tablelstQuoteHeaderDetails.txtTelNoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SettxtTelNoNull()
            Me(Me.tablelstQuoteHeaderDetails.txtTelNoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IstxtFaxNoNull() As Boolean
            Return Me.IsNull(Me.tablelstQuoteHeaderDetails.txtFaxNoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SettxtFaxNoNull()
            Me(Me.tablelstQuoteHeaderDetails.txtFaxNoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IstxtUOMNull() As Boolean
            Return Me.IsNull(Me.tablelstQuoteHeaderDetails.txtUOMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SettxtUOMNull()
            Me(Me.tablelstQuoteHeaderDetails.txtUOMColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class lstReceiptsRow
        Inherits Global.System.Data.DataRow
        
        Private tablelstReceipts As lstReceiptsDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablelstReceipts = CType(Me.Table,lstReceiptsDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property id_tblReceipts() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablelstReceipts.id_tblReceiptsColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'id_tblReceipts' in table 'lstReceipts' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstReceipts.id_tblReceiptsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FK_tblQuotHeader() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablelstReceipts.FK_tblQuotHeaderColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FK_tblQuotHeader' in table 'lstReceipts' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstReceipts.FK_tblQuotHeaderColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property fk_tblInvoiceHeader() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablelstReceipts.fk_tblInvoiceHeaderColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'fk_tblInvoiceHeader' in table 'lstReceipts' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstReceipts.fk_tblInvoiceHeaderColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FK_tblCustomer() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablelstReceipts.FK_tblCustomerColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FK_tblCustomer' in table 'lstReceipts' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstReceipts.FK_tblCustomerColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property dteReceiptDate() As String
            Get
                Try 
                    Return CType(Me(Me.tablelstReceipts.dteReceiptDateColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'dteReceiptDate' in table 'lstReceipts' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstReceipts.dteReceiptDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property txtReceiptType() As String
            Get
                Try 
                    Return CType(Me(Me.tablelstReceipts.txtReceiptTypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'txtReceiptType' in table 'lstReceipts' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstReceipts.txtReceiptTypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property txtStatus() As String
            Get
                Try 
                    Return CType(Me(Me.tablelstReceipts.txtStatusColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'txtStatus' in table 'lstReceipts' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstReceipts.txtStatusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property dteLogDate() As String
            Get
                Try 
                    Return CType(Me(Me.tablelstReceipts.dteLogDateColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'dteLogDate' in table 'lstReceipts' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstReceipts.dteLogDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property txtLogUser() As String
            Get
                Try 
                    Return CType(Me(Me.tablelstReceipts.txtLogUserColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'txtLogUser' in table 'lstReceipts' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstReceipts.txtLogUserColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Type() As String
            Get
                Try 
                    Return CType(Me(Me.tablelstReceipts.TypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Type' in table 'lstReceipts' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstReceipts.TypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property txtCusDesc() As String
            Get
                Try 
                    Return CType(Me(Me.tablelstReceipts.txtCusDescColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'txtCusDesc' in table 'lstReceipts' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstReceipts.txtCusDescColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property txtAddPos() As String
            Get
                Try 
                    Return CType(Me(Me.tablelstReceipts.txtAddPosColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'txtAddPos' in table 'lstReceipts' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstReceipts.txtAddPosColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property txtContactName() As String
            Get
                Try 
                    Return CType(Me(Me.tablelstReceipts.txtContactNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'txtContactName' in table 'lstReceipts' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstReceipts.txtContactNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property txtEmail() As String
            Get
                Try 
                    Return CType(Me(Me.tablelstReceipts.txtEmailColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'txtEmail' in table 'lstReceipts' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstReceipts.txtEmailColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property txtPhone1() As String
            Get
                Try 
                    Return CType(Me(Me.tablelstReceipts.txtPhone1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'txtPhone1' in table 'lstReceipts' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstReceipts.txtPhone1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property txtPhone2() As String
            Get
                Try 
                    Return CType(Me(Me.tablelstReceipts.txtPhone2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'txtPhone2' in table 'lstReceipts' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstReceipts.txtPhone2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property txtFax() As String
            Get
                Try 
                    Return CType(Me(Me.tablelstReceipts.txtFaxColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'txtFax' in table 'lstReceipts' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstReceipts.txtFaxColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TranDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tablelstReceipts.TranDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TranDate' in table 'lstReceipts' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstReceipts.TranDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property txtVatNo() As String
            Get
                Try 
                    Return CType(Me(Me.tablelstReceipts.txtVatNoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'txtVatNo' in table 'lstReceipts' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstReceipts.txtVatNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property tblCustomer_txtVatNo() As String
            Get
                Try 
                    Return CType(Me(Me.tablelstReceipts.tblCustomer_txtVatNoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'tblCustomer_txtVatNo' in table 'lstReceipts' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstReceipts.tblCustomer_txtVatNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property txtCoAd1() As String
            Get
                Try 
                    Return CType(Me(Me.tablelstReceipts.txtCoAd1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'txtCoAd1' in table 'lstReceipts' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstReceipts.txtCoAd1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property txtCoAd2() As String
            Get
                Try 
                    Return CType(Me(Me.tablelstReceipts.txtCoAd2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'txtCoAd2' in table 'lstReceipts' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstReceipts.txtCoAd2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property txtCoAd3() As String
            Get
                Try 
                    Return CType(Me(Me.tablelstReceipts.txtCoAd3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'txtCoAd3' in table 'lstReceipts' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstReceipts.txtCoAd3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property txtCoPosCde() As String
            Get
                Try 
                    Return CType(Me(Me.tablelstReceipts.txtCoPosCdeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'txtCoPosCde' in table 'lstReceipts' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstReceipts.txtCoPosCdeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property txtRegNo() As String
            Get
                Try 
                    Return CType(Me(Me.tablelstReceipts.txtRegNoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'txtRegNo' in table 'lstReceipts' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstReceipts.txtRegNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property txtDirectors() As String
            Get
                Try 
                    Return CType(Me(Me.tablelstReceipts.txtDirectorsColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'txtDirectors' in table 'lstReceipts' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstReceipts.txtDirectorsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property txtPrintName() As String
            Get
                Try 
                    Return CType(Me(Me.tablelstReceipts.txtPrintNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'txtPrintName' in table 'lstReceipts' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstReceipts.txtPrintNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property txtTelNo() As String
            Get
                Try 
                    Return CType(Me(Me.tablelstReceipts.txtTelNoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'txtTelNo' in table 'lstReceipts' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstReceipts.txtTelNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property txtFaxNo() As String
            Get
                Try 
                    Return CType(Me(Me.tablelstReceipts.txtFaxNoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'txtFaxNo' in table 'lstReceipts' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstReceipts.txtFaxNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property txtCoEmail() As String
            Get
                Try 
                    Return CType(Me(Me.tablelstReceipts.txtCoEmailColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'txtCoEmail' in table 'lstReceipts' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstReceipts.txtCoEmailColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TranNumber() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablelstReceipts.TranNumberColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TranNumber' in table 'lstReceipts' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstReceipts.TranNumberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property txtCoVatNo() As String
            Get
                Try 
                    Return CType(Me(Me.tablelstReceipts.txtCoVatNoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'txtCoVatNo' in table 'lstReceipts' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstReceipts.txtCoVatNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property dblAmount() As Double
            Get
                Try 
                    Return CType(Me(Me.tablelstReceipts.dblAmountColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'dblAmount' in table 'lstReceipts' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstReceipts.dblAmountColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isid_tblReceiptsNull() As Boolean
            Return Me.IsNull(Me.tablelstReceipts.id_tblReceiptsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setid_tblReceiptsNull()
            Me(Me.tablelstReceipts.id_tblReceiptsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFK_tblQuotHeaderNull() As Boolean
            Return Me.IsNull(Me.tablelstReceipts.FK_tblQuotHeaderColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFK_tblQuotHeaderNull()
            Me(Me.tablelstReceipts.FK_tblQuotHeaderColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isfk_tblInvoiceHeaderNull() As Boolean
            Return Me.IsNull(Me.tablelstReceipts.fk_tblInvoiceHeaderColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setfk_tblInvoiceHeaderNull()
            Me(Me.tablelstReceipts.fk_tblInvoiceHeaderColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFK_tblCustomerNull() As Boolean
            Return Me.IsNull(Me.tablelstReceipts.FK_tblCustomerColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFK_tblCustomerNull()
            Me(Me.tablelstReceipts.FK_tblCustomerColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsdteReceiptDateNull() As Boolean
            Return Me.IsNull(Me.tablelstReceipts.dteReceiptDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetdteReceiptDateNull()
            Me(Me.tablelstReceipts.dteReceiptDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IstxtReceiptTypeNull() As Boolean
            Return Me.IsNull(Me.tablelstReceipts.txtReceiptTypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SettxtReceiptTypeNull()
            Me(Me.tablelstReceipts.txtReceiptTypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IstxtStatusNull() As Boolean
            Return Me.IsNull(Me.tablelstReceipts.txtStatusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SettxtStatusNull()
            Me(Me.tablelstReceipts.txtStatusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsdteLogDateNull() As Boolean
            Return Me.IsNull(Me.tablelstReceipts.dteLogDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetdteLogDateNull()
            Me(Me.tablelstReceipts.dteLogDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IstxtLogUserNull() As Boolean
            Return Me.IsNull(Me.tablelstReceipts.txtLogUserColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SettxtLogUserNull()
            Me(Me.tablelstReceipts.txtLogUserColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTypeNull() As Boolean
            Return Me.IsNull(Me.tablelstReceipts.TypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTypeNull()
            Me(Me.tablelstReceipts.TypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IstxtCusDescNull() As Boolean
            Return Me.IsNull(Me.tablelstReceipts.txtCusDescColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SettxtCusDescNull()
            Me(Me.tablelstReceipts.txtCusDescColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IstxtAddPosNull() As Boolean
            Return Me.IsNull(Me.tablelstReceipts.txtAddPosColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SettxtAddPosNull()
            Me(Me.tablelstReceipts.txtAddPosColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IstxtContactNameNull() As Boolean
            Return Me.IsNull(Me.tablelstReceipts.txtContactNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SettxtContactNameNull()
            Me(Me.tablelstReceipts.txtContactNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IstxtEmailNull() As Boolean
            Return Me.IsNull(Me.tablelstReceipts.txtEmailColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SettxtEmailNull()
            Me(Me.tablelstReceipts.txtEmailColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IstxtPhone1Null() As Boolean
            Return Me.IsNull(Me.tablelstReceipts.txtPhone1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SettxtPhone1Null()
            Me(Me.tablelstReceipts.txtPhone1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IstxtPhone2Null() As Boolean
            Return Me.IsNull(Me.tablelstReceipts.txtPhone2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SettxtPhone2Null()
            Me(Me.tablelstReceipts.txtPhone2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IstxtFaxNull() As Boolean
            Return Me.IsNull(Me.tablelstReceipts.txtFaxColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SettxtFaxNull()
            Me(Me.tablelstReceipts.txtFaxColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTranDateNull() As Boolean
            Return Me.IsNull(Me.tablelstReceipts.TranDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTranDateNull()
            Me(Me.tablelstReceipts.TranDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IstxtVatNoNull() As Boolean
            Return Me.IsNull(Me.tablelstReceipts.txtVatNoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SettxtVatNoNull()
            Me(Me.tablelstReceipts.txtVatNoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IstblCustomer_txtVatNoNull() As Boolean
            Return Me.IsNull(Me.tablelstReceipts.tblCustomer_txtVatNoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SettblCustomer_txtVatNoNull()
            Me(Me.tablelstReceipts.tblCustomer_txtVatNoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IstxtCoAd1Null() As Boolean
            Return Me.IsNull(Me.tablelstReceipts.txtCoAd1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SettxtCoAd1Null()
            Me(Me.tablelstReceipts.txtCoAd1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IstxtCoAd2Null() As Boolean
            Return Me.IsNull(Me.tablelstReceipts.txtCoAd2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SettxtCoAd2Null()
            Me(Me.tablelstReceipts.txtCoAd2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IstxtCoAd3Null() As Boolean
            Return Me.IsNull(Me.tablelstReceipts.txtCoAd3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SettxtCoAd3Null()
            Me(Me.tablelstReceipts.txtCoAd3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IstxtCoPosCdeNull() As Boolean
            Return Me.IsNull(Me.tablelstReceipts.txtCoPosCdeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SettxtCoPosCdeNull()
            Me(Me.tablelstReceipts.txtCoPosCdeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IstxtRegNoNull() As Boolean
            Return Me.IsNull(Me.tablelstReceipts.txtRegNoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SettxtRegNoNull()
            Me(Me.tablelstReceipts.txtRegNoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IstxtDirectorsNull() As Boolean
            Return Me.IsNull(Me.tablelstReceipts.txtDirectorsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SettxtDirectorsNull()
            Me(Me.tablelstReceipts.txtDirectorsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IstxtPrintNameNull() As Boolean
            Return Me.IsNull(Me.tablelstReceipts.txtPrintNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SettxtPrintNameNull()
            Me(Me.tablelstReceipts.txtPrintNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IstxtTelNoNull() As Boolean
            Return Me.IsNull(Me.tablelstReceipts.txtTelNoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SettxtTelNoNull()
            Me(Me.tablelstReceipts.txtTelNoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IstxtFaxNoNull() As Boolean
            Return Me.IsNull(Me.tablelstReceipts.txtFaxNoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SettxtFaxNoNull()
            Me(Me.tablelstReceipts.txtFaxNoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IstxtCoEmailNull() As Boolean
            Return Me.IsNull(Me.tablelstReceipts.txtCoEmailColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SettxtCoEmailNull()
            Me(Me.tablelstReceipts.txtCoEmailColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTranNumberNull() As Boolean
            Return Me.IsNull(Me.tablelstReceipts.TranNumberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTranNumberNull()
            Me(Me.tablelstReceipts.TranNumberColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IstxtCoVatNoNull() As Boolean
            Return Me.IsNull(Me.tablelstReceipts.txtCoVatNoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SettxtCoVatNoNull()
            Me(Me.tablelstReceipts.txtCoVatNoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsdblAmountNull() As Boolean
            Return Me.IsNull(Me.tablelstReceipts.dblAmountColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetdblAmountNull()
            Me(Me.tablelstReceipts.dblAmountColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class lstInvoiceHeaderDetailsRow
        Inherits Global.System.Data.DataRow
        
        Private tablelstInvoiceHeaderDetails As lstInvoiceHeaderDetailsDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablelstInvoiceHeaderDetails = CType(Me.Table,lstInvoiceHeaderDetailsDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property id_tblInvoiceHeader() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablelstInvoiceHeaderDetails.id_tblInvoiceHeaderColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'id_tblInvoiceHeader' in table 'lstInvoiceHeaderDetails' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstInvoiceHeaderDetails.id_tblInvoiceHeaderColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property fk_idtblCustomer() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablelstInvoiceHeaderDetails.fk_idtblCustomerColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'fk_idtblCustomer' in table 'lstInvoiceHeaderDetails' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstInvoiceHeaderDetails.fk_idtblCustomerColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property txtCompanyNo() As Short
            Get
                Try 
                    Return CType(Me(Me.tablelstInvoiceHeaderDetails.txtCompanyNoColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'txtCompanyNo' in table 'lstInvoiceHeaderDetails' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tablelstInvoiceHeaderDetails.txtCompanyNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property dblInvoiceNum() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablelstInvoiceHeaderDetails.dblInvoiceNumColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'dblInvoiceNum' in table 'lstInvoiceHeaderDetails' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tablelstInvoiceHeaderDetails.dblInvoiceNumColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property txtCusDesc() As String
            Get
                Try 
                    Return CType(Me(Me.tablelstInvoiceHeaderDetails.txtCusDescColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'txtCusDesc' in table 'lstInvoiceHeaderDetails' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstInvoiceHeaderDetails.txtCusDescColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property txtAddPos() As String
            Get
                Try 
                    Return CType(Me(Me.tablelstInvoiceHeaderDetails.txtAddPosColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'txtAddPos' in table 'lstInvoiceHeaderDetails' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstInvoiceHeaderDetails.txtAddPosColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property txtContactName() As String
            Get
                Try 
                    Return CType(Me(Me.tablelstInvoiceHeaderDetails.txtContactNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'txtContactName' in table 'lstInvoiceHeaderDetails' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstInvoiceHeaderDetails.txtContactNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property txtEmail() As String
            Get
                Try 
                    Return CType(Me(Me.tablelstInvoiceHeaderDetails.txtEmailColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'txtEmail' in table 'lstInvoiceHeaderDetails' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstInvoiceHeaderDetails.txtEmailColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property txtPhone1() As String
            Get
                Try 
                    Return CType(Me(Me.tablelstInvoiceHeaderDetails.txtPhone1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'txtPhone1' in table 'lstInvoiceHeaderDetails' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstInvoiceHeaderDetails.txtPhone1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property txtPhone2() As String
            Get
                Try 
                    Return CType(Me(Me.tablelstInvoiceHeaderDetails.txtPhone2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'txtPhone2' in table 'lstInvoiceHeaderDetails' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstInvoiceHeaderDetails.txtPhone2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property txtFax() As String
            Get
                Try 
                    Return CType(Me(Me.tablelstInvoiceHeaderDetails.txtFaxColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'txtFax' in table 'lstInvoiceHeaderDetails' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstInvoiceHeaderDetails.txtFaxColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property txtInvoiceDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tablelstInvoiceHeaderDetails.txtInvoiceDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'txtInvoiceDate' in table 'lstInvoiceHeaderDetails' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstInvoiceHeaderDetails.txtInvoiceDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property txtInvoiceOperator() As String
            Get
                Try 
                    Return CType(Me(Me.tablelstInvoiceHeaderDetails.txtInvoiceOperatorColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'txtInvoiceOperator' in table 'lstInvoiceHeaderDetails' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstInvoiceHeaderDetails.txtInvoiceOperatorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property txtInvoiceStatus() As String
            Get
                Try 
                    Return CType(Me(Me.tablelstInvoiceHeaderDetails.txtInvoiceStatusColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'txtInvoiceStatus' in table 'lstInvoiceHeaderDetails' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstInvoiceHeaderDetails.txtInvoiceStatusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property txtInvoiceDocName() As String
            Get
                Try 
                    Return CType(Me(Me.tablelstInvoiceHeaderDetails.txtInvoiceDocNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'txtInvoiceDocName' in table 'lstInvoiceHeaderDetails' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstInvoiceHeaderDetails.txtInvoiceDocNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property txtNotes() As String
            Get
                Try 
                    Return CType(Me(Me.tablelstInvoiceHeaderDetails.txtNotesColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'txtNotes' in table 'lstInvoiceHeaderDetails' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstInvoiceHeaderDetails.txtNotesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property id_tblInvoiceDetail() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablelstInvoiceHeaderDetails.id_tblInvoiceDetailColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'id_tblInvoiceDetail' in table 'lstInvoiceHeaderDetails' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstInvoiceHeaderDetails.id_tblInvoiceDetailColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property fk_tblnvoiceHeader() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablelstInvoiceHeaderDetails.fk_tblnvoiceHeaderColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'fk_tblnvoiceHeader' in table 'lstInvoiceHeaderDetails' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstInvoiceHeaderDetails.fk_tblnvoiceHeaderColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property fk_tblProduct() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablelstInvoiceHeaderDetails.fk_tblProductColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'fk_tblProduct' in table 'lstInvoiceHeaderDetails' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tablelstInvoiceHeaderDetails.fk_tblProductColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property txtProdCde() As String
            Get
                Try 
                    Return CType(Me(Me.tablelstInvoiceHeaderDetails.txtProdCdeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'txtProdCde' in table 'lstInvoiceHeaderDetails' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstInvoiceHeaderDetails.txtProdCdeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property txtProdDesc() As String
            Get
                Try 
                    Return CType(Me(Me.tablelstInvoiceHeaderDetails.txtProdDescColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'txtProdDesc' in table 'lstInvoiceHeaderDetails' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstInvoiceHeaderDetails.txtProdDescColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property txtProdSpec1() As String
            Get
                Try 
                    Return CType(Me(Me.tablelstInvoiceHeaderDetails.txtProdSpec1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'txtProdSpec1' in table 'lstInvoiceHeaderDetails' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tablelstInvoiceHeaderDetails.txtProdSpec1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property txtProdSpec2() As String
            Get
                Try 
                    Return CType(Me(Me.tablelstInvoiceHeaderDetails.txtProdSpec2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'txtProdSpec2' in table 'lstInvoiceHeaderDetails' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tablelstInvoiceHeaderDetails.txtProdSpec2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property txtProdSpec3() As String
            Get
                Try 
                    Return CType(Me(Me.tablelstInvoiceHeaderDetails.txtProdSpec3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'txtProdSpec3' in table 'lstInvoiceHeaderDetails' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tablelstInvoiceHeaderDetails.txtProdSpec3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property decQty() As Double
            Get
                Try 
                    Return CType(Me(Me.tablelstInvoiceHeaderDetails.decQtyColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'decQty' in table 'lstInvoiceHeaderDetails' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstInvoiceHeaderDetails.decQtyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property decSellingPrice() As Double
            Get
                Try 
                    Return CType(Me(Me.tablelstInvoiceHeaderDetails.decSellingPriceColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'decSellingPrice' in table 'lstInvoiceHeaderDetails' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstInvoiceHeaderDetails.decSellingPriceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property decSellingValue() As Double
            Get
                Try 
                    Return CType(Me(Me.tablelstInvoiceHeaderDetails.decSellingValueColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'decSellingValue' in table 'lstInvoiceHeaderDetails' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstInvoiceHeaderDetails.decSellingValueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property decOriginalPrice() As Double
            Get
                Try 
                    Return CType(Me(Me.tablelstInvoiceHeaderDetails.decOriginalPriceColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'decOriginalPrice' in table 'lstInvoiceHeaderDetails' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstInvoiceHeaderDetails.decOriginalPriceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property decVatPercentage() As Double
            Get
                Try 
                    Return CType(Me(Me.tablelstInvoiceHeaderDetails.decVatPercentageColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'decVatPercentage' in table 'lstInvoiceHeaderDetails' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstInvoiceHeaderDetails.decVatPercentageColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property decVatAmount() As Double
            Get
                Try 
                    Return CType(Me(Me.tablelstInvoiceHeaderDetails.decVatAmountColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'decVatAmount' in table 'lstInvoiceHeaderDetails' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tablelstInvoiceHeaderDetails.decVatAmountColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property decInvoiceLineAmount() As Double
            Get
                Try 
                    Return CType(Me(Me.tablelstInvoiceHeaderDetails.decInvoiceLineAmountColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'decInvoiceLineAmount' in table 'lstInvoiceHeaderDetails' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstInvoiceHeaderDetails.decInvoiceLineAmountColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property txtUOM() As String
            Get
                Try 
                    Return CType(Me(Me.tablelstInvoiceHeaderDetails.txtUOMColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'txtUOM' in table 'lstInvoiceHeaderDetails' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstInvoiceHeaderDetails.txtUOMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property txtCoInfo() As String
            Get
                Try 
                    Return CType(Me(Me.tablelstInvoiceHeaderDetails.txtCoInfoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'txtCoInfo' in table 'lstInvoiceHeaderDetails' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstInvoiceHeaderDetails.txtCoInfoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property txtCoAd1() As String
            Get
                Try 
                    Return CType(Me(Me.tablelstInvoiceHeaderDetails.txtCoAd1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'txtCoAd1' in table 'lstInvoiceHeaderDetails' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstInvoiceHeaderDetails.txtCoAd1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property txtCoAd2() As String
            Get
                Try 
                    Return CType(Me(Me.tablelstInvoiceHeaderDetails.txtCoAd2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'txtCoAd2' in table 'lstInvoiceHeaderDetails' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstInvoiceHeaderDetails.txtCoAd2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property txtCoAd3() As String
            Get
                Try 
                    Return CType(Me(Me.tablelstInvoiceHeaderDetails.txtCoAd3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'txtCoAd3' in table 'lstInvoiceHeaderDetails' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstInvoiceHeaderDetails.txtCoAd3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property txtCoPosCde() As String
            Get
                Try 
                    Return CType(Me(Me.tablelstInvoiceHeaderDetails.txtCoPosCdeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'txtCoPosCde' in table 'lstInvoiceHeaderDetails' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstInvoiceHeaderDetails.txtCoPosCdeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property txtVatNo() As String
            Get
                Try 
                    Return CType(Me(Me.tablelstInvoiceHeaderDetails.txtVatNoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'txtVatNo' in table 'lstInvoiceHeaderDetails' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstInvoiceHeaderDetails.txtVatNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property txtDirectors() As String
            Get
                Try 
                    Return CType(Me(Me.tablelstInvoiceHeaderDetails.txtDirectorsColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'txtDirectors' in table 'lstInvoiceHeaderDetails' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tablelstInvoiceHeaderDetails.txtDirectorsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property txtPrintName() As String
            Get
                Try 
                    Return CType(Me(Me.tablelstInvoiceHeaderDetails.txtPrintNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'txtPrintName' in table 'lstInvoiceHeaderDetails' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tablelstInvoiceHeaderDetails.txtPrintNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property txtTelNo() As String
            Get
                Try 
                    Return CType(Me(Me.tablelstInvoiceHeaderDetails.txtTelNoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'txtTelNo' in table 'lstInvoiceHeaderDetails' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstInvoiceHeaderDetails.txtTelNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property txtCoEmail() As String
            Get
                Try 
                    Return CType(Me(Me.tablelstInvoiceHeaderDetails.txtCoEmailColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'txtCoEmail' in table 'lstInvoiceHeaderDetails' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstInvoiceHeaderDetails.txtCoEmailColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property dblVatRate() As Double
            Get
                Try 
                    Return CType(Me(Me.tablelstInvoiceHeaderDetails.dblVatRateColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'dblVatRate' in table 'lstInvoiceHeaderDetails' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstInvoiceHeaderDetails.dblVatRateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property txtFaxNo() As String
            Get
                Try 
                    Return CType(Me(Me.tablelstInvoiceHeaderDetails.txtFaxNoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'txtFaxNo' in table 'lstInvoiceHeaderDetails' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstInvoiceHeaderDetails.txtFaxNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property txtRegNo() As String
            Get
                Try 
                    Return CType(Me(Me.tablelstInvoiceHeaderDetails.txtRegNoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'txtRegNo' in table 'lstInvoiceHeaderDetails' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstInvoiceHeaderDetails.txtRegNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FK_tblQuoteHeader() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablelstInvoiceHeaderDetails.FK_tblQuoteHeaderColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FK_tblQuoteHeader' in table 'lstInvoiceHeaderDetails' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstInvoiceHeaderDetails.FK_tblQuoteHeaderColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property dblReceiptAmount() As Double
            Get
                Try 
                    Return CType(Me(Me.tablelstInvoiceHeaderDetails.dblReceiptAmountColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'dblReceiptAmount' in table 'lstInvoiceHeaderDetails' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstInvoiceHeaderDetails.dblReceiptAmountColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property txtCusRef() As String
            Get
                Try 
                    Return CType(Me(Me.tablelstInvoiceHeaderDetails.txtCusRefColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'txtCusRef' in table 'lstInvoiceHeaderDetails' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstInvoiceHeaderDetails.txtCusRefColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isid_tblInvoiceHeaderNull() As Boolean
            Return Me.IsNull(Me.tablelstInvoiceHeaderDetails.id_tblInvoiceHeaderColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setid_tblInvoiceHeaderNull()
            Me(Me.tablelstInvoiceHeaderDetails.id_tblInvoiceHeaderColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isfk_idtblCustomerNull() As Boolean
            Return Me.IsNull(Me.tablelstInvoiceHeaderDetails.fk_idtblCustomerColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setfk_idtblCustomerNull()
            Me(Me.tablelstInvoiceHeaderDetails.fk_idtblCustomerColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IstxtCompanyNoNull() As Boolean
            Return Me.IsNull(Me.tablelstInvoiceHeaderDetails.txtCompanyNoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SettxtCompanyNoNull()
            Me(Me.tablelstInvoiceHeaderDetails.txtCompanyNoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsdblInvoiceNumNull() As Boolean
            Return Me.IsNull(Me.tablelstInvoiceHeaderDetails.dblInvoiceNumColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetdblInvoiceNumNull()
            Me(Me.tablelstInvoiceHeaderDetails.dblInvoiceNumColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IstxtCusDescNull() As Boolean
            Return Me.IsNull(Me.tablelstInvoiceHeaderDetails.txtCusDescColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SettxtCusDescNull()
            Me(Me.tablelstInvoiceHeaderDetails.txtCusDescColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IstxtAddPosNull() As Boolean
            Return Me.IsNull(Me.tablelstInvoiceHeaderDetails.txtAddPosColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SettxtAddPosNull()
            Me(Me.tablelstInvoiceHeaderDetails.txtAddPosColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IstxtContactNameNull() As Boolean
            Return Me.IsNull(Me.tablelstInvoiceHeaderDetails.txtContactNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SettxtContactNameNull()
            Me(Me.tablelstInvoiceHeaderDetails.txtContactNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IstxtEmailNull() As Boolean
            Return Me.IsNull(Me.tablelstInvoiceHeaderDetails.txtEmailColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SettxtEmailNull()
            Me(Me.tablelstInvoiceHeaderDetails.txtEmailColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IstxtPhone1Null() As Boolean
            Return Me.IsNull(Me.tablelstInvoiceHeaderDetails.txtPhone1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SettxtPhone1Null()
            Me(Me.tablelstInvoiceHeaderDetails.txtPhone1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IstxtPhone2Null() As Boolean
            Return Me.IsNull(Me.tablelstInvoiceHeaderDetails.txtPhone2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SettxtPhone2Null()
            Me(Me.tablelstInvoiceHeaderDetails.txtPhone2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IstxtFaxNull() As Boolean
            Return Me.IsNull(Me.tablelstInvoiceHeaderDetails.txtFaxColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SettxtFaxNull()
            Me(Me.tablelstInvoiceHeaderDetails.txtFaxColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IstxtInvoiceDateNull() As Boolean
            Return Me.IsNull(Me.tablelstInvoiceHeaderDetails.txtInvoiceDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SettxtInvoiceDateNull()
            Me(Me.tablelstInvoiceHeaderDetails.txtInvoiceDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IstxtInvoiceOperatorNull() As Boolean
            Return Me.IsNull(Me.tablelstInvoiceHeaderDetails.txtInvoiceOperatorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SettxtInvoiceOperatorNull()
            Me(Me.tablelstInvoiceHeaderDetails.txtInvoiceOperatorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IstxtInvoiceStatusNull() As Boolean
            Return Me.IsNull(Me.tablelstInvoiceHeaderDetails.txtInvoiceStatusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SettxtInvoiceStatusNull()
            Me(Me.tablelstInvoiceHeaderDetails.txtInvoiceStatusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IstxtInvoiceDocNameNull() As Boolean
            Return Me.IsNull(Me.tablelstInvoiceHeaderDetails.txtInvoiceDocNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SettxtInvoiceDocNameNull()
            Me(Me.tablelstInvoiceHeaderDetails.txtInvoiceDocNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IstxtNotesNull() As Boolean
            Return Me.IsNull(Me.tablelstInvoiceHeaderDetails.txtNotesColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SettxtNotesNull()
            Me(Me.tablelstInvoiceHeaderDetails.txtNotesColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isid_tblInvoiceDetailNull() As Boolean
            Return Me.IsNull(Me.tablelstInvoiceHeaderDetails.id_tblInvoiceDetailColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setid_tblInvoiceDetailNull()
            Me(Me.tablelstInvoiceHeaderDetails.id_tblInvoiceDetailColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isfk_tblnvoiceHeaderNull() As Boolean
            Return Me.IsNull(Me.tablelstInvoiceHeaderDetails.fk_tblnvoiceHeaderColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setfk_tblnvoiceHeaderNull()
            Me(Me.tablelstInvoiceHeaderDetails.fk_tblnvoiceHeaderColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isfk_tblProductNull() As Boolean
            Return Me.IsNull(Me.tablelstInvoiceHeaderDetails.fk_tblProductColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setfk_tblProductNull()
            Me(Me.tablelstInvoiceHeaderDetails.fk_tblProductColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IstxtProdCdeNull() As Boolean
            Return Me.IsNull(Me.tablelstInvoiceHeaderDetails.txtProdCdeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SettxtProdCdeNull()
            Me(Me.tablelstInvoiceHeaderDetails.txtProdCdeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IstxtProdDescNull() As Boolean
            Return Me.IsNull(Me.tablelstInvoiceHeaderDetails.txtProdDescColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SettxtProdDescNull()
            Me(Me.tablelstInvoiceHeaderDetails.txtProdDescColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IstxtProdSpec1Null() As Boolean
            Return Me.IsNull(Me.tablelstInvoiceHeaderDetails.txtProdSpec1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SettxtProdSpec1Null()
            Me(Me.tablelstInvoiceHeaderDetails.txtProdSpec1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IstxtProdSpec2Null() As Boolean
            Return Me.IsNull(Me.tablelstInvoiceHeaderDetails.txtProdSpec2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SettxtProdSpec2Null()
            Me(Me.tablelstInvoiceHeaderDetails.txtProdSpec2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IstxtProdSpec3Null() As Boolean
            Return Me.IsNull(Me.tablelstInvoiceHeaderDetails.txtProdSpec3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SettxtProdSpec3Null()
            Me(Me.tablelstInvoiceHeaderDetails.txtProdSpec3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsdecQtyNull() As Boolean
            Return Me.IsNull(Me.tablelstInvoiceHeaderDetails.decQtyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetdecQtyNull()
            Me(Me.tablelstInvoiceHeaderDetails.decQtyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsdecSellingPriceNull() As Boolean
            Return Me.IsNull(Me.tablelstInvoiceHeaderDetails.decSellingPriceColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetdecSellingPriceNull()
            Me(Me.tablelstInvoiceHeaderDetails.decSellingPriceColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsdecSellingValueNull() As Boolean
            Return Me.IsNull(Me.tablelstInvoiceHeaderDetails.decSellingValueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetdecSellingValueNull()
            Me(Me.tablelstInvoiceHeaderDetails.decSellingValueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsdecOriginalPriceNull() As Boolean
            Return Me.IsNull(Me.tablelstInvoiceHeaderDetails.decOriginalPriceColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetdecOriginalPriceNull()
            Me(Me.tablelstInvoiceHeaderDetails.decOriginalPriceColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsdecVatPercentageNull() As Boolean
            Return Me.IsNull(Me.tablelstInvoiceHeaderDetails.decVatPercentageColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetdecVatPercentageNull()
            Me(Me.tablelstInvoiceHeaderDetails.decVatPercentageColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsdecVatAmountNull() As Boolean
            Return Me.IsNull(Me.tablelstInvoiceHeaderDetails.decVatAmountColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetdecVatAmountNull()
            Me(Me.tablelstInvoiceHeaderDetails.decVatAmountColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsdecInvoiceLineAmountNull() As Boolean
            Return Me.IsNull(Me.tablelstInvoiceHeaderDetails.decInvoiceLineAmountColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetdecInvoiceLineAmountNull()
            Me(Me.tablelstInvoiceHeaderDetails.decInvoiceLineAmountColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IstxtUOMNull() As Boolean
            Return Me.IsNull(Me.tablelstInvoiceHeaderDetails.txtUOMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SettxtUOMNull()
            Me(Me.tablelstInvoiceHeaderDetails.txtUOMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IstxtCoInfoNull() As Boolean
            Return Me.IsNull(Me.tablelstInvoiceHeaderDetails.txtCoInfoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SettxtCoInfoNull()
            Me(Me.tablelstInvoiceHeaderDetails.txtCoInfoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IstxtCoAd1Null() As Boolean
            Return Me.IsNull(Me.tablelstInvoiceHeaderDetails.txtCoAd1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SettxtCoAd1Null()
            Me(Me.tablelstInvoiceHeaderDetails.txtCoAd1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IstxtCoAd2Null() As Boolean
            Return Me.IsNull(Me.tablelstInvoiceHeaderDetails.txtCoAd2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SettxtCoAd2Null()
            Me(Me.tablelstInvoiceHeaderDetails.txtCoAd2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IstxtCoAd3Null() As Boolean
            Return Me.IsNull(Me.tablelstInvoiceHeaderDetails.txtCoAd3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SettxtCoAd3Null()
            Me(Me.tablelstInvoiceHeaderDetails.txtCoAd3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IstxtCoPosCdeNull() As Boolean
            Return Me.IsNull(Me.tablelstInvoiceHeaderDetails.txtCoPosCdeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SettxtCoPosCdeNull()
            Me(Me.tablelstInvoiceHeaderDetails.txtCoPosCdeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IstxtVatNoNull() As Boolean
            Return Me.IsNull(Me.tablelstInvoiceHeaderDetails.txtVatNoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SettxtVatNoNull()
            Me(Me.tablelstInvoiceHeaderDetails.txtVatNoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IstxtDirectorsNull() As Boolean
            Return Me.IsNull(Me.tablelstInvoiceHeaderDetails.txtDirectorsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SettxtDirectorsNull()
            Me(Me.tablelstInvoiceHeaderDetails.txtDirectorsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IstxtPrintNameNull() As Boolean
            Return Me.IsNull(Me.tablelstInvoiceHeaderDetails.txtPrintNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SettxtPrintNameNull()
            Me(Me.tablelstInvoiceHeaderDetails.txtPrintNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IstxtTelNoNull() As Boolean
            Return Me.IsNull(Me.tablelstInvoiceHeaderDetails.txtTelNoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SettxtTelNoNull()
            Me(Me.tablelstInvoiceHeaderDetails.txtTelNoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IstxtCoEmailNull() As Boolean
            Return Me.IsNull(Me.tablelstInvoiceHeaderDetails.txtCoEmailColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SettxtCoEmailNull()
            Me(Me.tablelstInvoiceHeaderDetails.txtCoEmailColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsdblVatRateNull() As Boolean
            Return Me.IsNull(Me.tablelstInvoiceHeaderDetails.dblVatRateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetdblVatRateNull()
            Me(Me.tablelstInvoiceHeaderDetails.dblVatRateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IstxtFaxNoNull() As Boolean
            Return Me.IsNull(Me.tablelstInvoiceHeaderDetails.txtFaxNoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SettxtFaxNoNull()
            Me(Me.tablelstInvoiceHeaderDetails.txtFaxNoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IstxtRegNoNull() As Boolean
            Return Me.IsNull(Me.tablelstInvoiceHeaderDetails.txtRegNoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SettxtRegNoNull()
            Me(Me.tablelstInvoiceHeaderDetails.txtRegNoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFK_tblQuoteHeaderNull() As Boolean
            Return Me.IsNull(Me.tablelstInvoiceHeaderDetails.FK_tblQuoteHeaderColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFK_tblQuoteHeaderNull()
            Me(Me.tablelstInvoiceHeaderDetails.FK_tblQuoteHeaderColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsdblReceiptAmountNull() As Boolean
            Return Me.IsNull(Me.tablelstInvoiceHeaderDetails.dblReceiptAmountColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetdblReceiptAmountNull()
            Me(Me.tablelstInvoiceHeaderDetails.dblReceiptAmountColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IstxtCusRefNull() As Boolean
            Return Me.IsNull(Me.tablelstInvoiceHeaderDetails.txtCusRefColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SettxtCusRefNull()
            Me(Me.tablelstInvoiceHeaderDetails.txtCusRefColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class lstPOHeaderDetailsRow
        Inherits Global.System.Data.DataRow
        
        Private tablelstPOHeaderDetails As lstPOHeaderDetailsDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablelstPOHeaderDetails = CType(Me.Table,lstPOHeaderDetailsDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property id_tblPOHeader() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablelstPOHeaderDetails.id_tblPOHeaderColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'id_tblPOHeader' in table 'lstPOHeaderDetails' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstPOHeaderDetails.id_tblPOHeaderColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property fk_idtblCustomer() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablelstPOHeaderDetails.fk_idtblCustomerColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'fk_idtblCustomer' in table 'lstPOHeaderDetails' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstPOHeaderDetails.fk_idtblCustomerColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property txtCompanyNo() As Short
            Get
                Try 
                    Return CType(Me(Me.tablelstPOHeaderDetails.txtCompanyNoColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'txtCompanyNo' in table 'lstPOHeaderDetails' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstPOHeaderDetails.txtCompanyNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property dblPONum() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablelstPOHeaderDetails.dblPONumColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'dblPONum' in table 'lstPOHeaderDetails' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstPOHeaderDetails.dblPONumColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property txtCusDesc() As String
            Get
                Try 
                    Return CType(Me(Me.tablelstPOHeaderDetails.txtCusDescColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'txtCusDesc' in table 'lstPOHeaderDetails' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstPOHeaderDetails.txtCusDescColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property txtAddPos() As String
            Get
                Try 
                    Return CType(Me(Me.tablelstPOHeaderDetails.txtAddPosColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'txtAddPos' in table 'lstPOHeaderDetails' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstPOHeaderDetails.txtAddPosColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property txtContactName() As String
            Get
                Try 
                    Return CType(Me(Me.tablelstPOHeaderDetails.txtContactNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'txtContactName' in table 'lstPOHeaderDetails' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstPOHeaderDetails.txtContactNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property txtEmail() As String
            Get
                Try 
                    Return CType(Me(Me.tablelstPOHeaderDetails.txtEmailColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'txtEmail' in table 'lstPOHeaderDetails' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstPOHeaderDetails.txtEmailColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property txtPhone1() As String
            Get
                Try 
                    Return CType(Me(Me.tablelstPOHeaderDetails.txtPhone1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'txtPhone1' in table 'lstPOHeaderDetails' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstPOHeaderDetails.txtPhone1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property txtPhone2() As String
            Get
                Try 
                    Return CType(Me(Me.tablelstPOHeaderDetails.txtPhone2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'txtPhone2' in table 'lstPOHeaderDetails' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstPOHeaderDetails.txtPhone2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property txtFax() As String
            Get
                Try 
                    Return CType(Me(Me.tablelstPOHeaderDetails.txtFaxColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'txtFax' in table 'lstPOHeaderDetails' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstPOHeaderDetails.txtFaxColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property txtPODate() As Date
            Get
                Try 
                    Return CType(Me(Me.tablelstPOHeaderDetails.txtPODateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'txtPODate' in table 'lstPOHeaderDetails' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstPOHeaderDetails.txtPODateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property txtPOOperator() As String
            Get
                Try 
                    Return CType(Me(Me.tablelstPOHeaderDetails.txtPOOperatorColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'txtPOOperator' in table 'lstPOHeaderDetails' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstPOHeaderDetails.txtPOOperatorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property txtPOStatus() As String
            Get
                Try 
                    Return CType(Me(Me.tablelstPOHeaderDetails.txtPOStatusColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'txtPOStatus' in table 'lstPOHeaderDetails' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstPOHeaderDetails.txtPOStatusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property txtPODocName() As String
            Get
                Try 
                    Return CType(Me(Me.tablelstPOHeaderDetails.txtPODocNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'txtPODocName' in table 'lstPOHeaderDetails' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstPOHeaderDetails.txtPODocNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property txtNotes() As String
            Get
                Try 
                    Return CType(Me(Me.tablelstPOHeaderDetails.txtNotesColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'txtNotes' in table 'lstPOHeaderDetails' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstPOHeaderDetails.txtNotesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FK_tblQuoteHeader() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablelstPOHeaderDetails.FK_tblQuoteHeaderColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FK_tblQuoteHeader' in table 'lstPOHeaderDetails' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tablelstPOHeaderDetails.FK_tblQuoteHeaderColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property txtCusRef() As String
            Get
                Try 
                    Return CType(Me(Me.tablelstPOHeaderDetails.txtCusRefColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'txtCusRef' in table 'lstPOHeaderDetails' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstPOHeaderDetails.txtCusRefColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property id_tblPODetail() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablelstPOHeaderDetails.id_tblPODetailColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'id_tblPODetail' in table 'lstPOHeaderDetails' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstPOHeaderDetails.id_tblPODetailColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property fk_tblPOHeader() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablelstPOHeaderDetails.fk_tblPOHeaderColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'fk_tblPOHeader' in table 'lstPOHeaderDetails' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstPOHeaderDetails.fk_tblPOHeaderColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property fk_tblProduct() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablelstPOHeaderDetails.fk_tblProductColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'fk_tblProduct' in table 'lstPOHeaderDetails' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstPOHeaderDetails.fk_tblProductColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property txtProdCde() As String
            Get
                Try 
                    Return CType(Me(Me.tablelstPOHeaderDetails.txtProdCdeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'txtProdCde' in table 'lstPOHeaderDetails' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstPOHeaderDetails.txtProdCdeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property txtProdDesc() As String
            Get
                Try 
                    Return CType(Me(Me.tablelstPOHeaderDetails.txtProdDescColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'txtProdDesc' in table 'lstPOHeaderDetails' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstPOHeaderDetails.txtProdDescColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property txtProdSpec1() As String
            Get
                Try 
                    Return CType(Me(Me.tablelstPOHeaderDetails.txtProdSpec1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'txtProdSpec1' in table 'lstPOHeaderDetails' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstPOHeaderDetails.txtProdSpec1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property txtProdSpec2() As String
            Get
                Try 
                    Return CType(Me(Me.tablelstPOHeaderDetails.txtProdSpec2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'txtProdSpec2' in table 'lstPOHeaderDetails' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstPOHeaderDetails.txtProdSpec2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property txtProdSpec3() As String
            Get
                Try 
                    Return CType(Me(Me.tablelstPOHeaderDetails.txtProdSpec3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'txtProdSpec3' in table 'lstPOHeaderDetails' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstPOHeaderDetails.txtProdSpec3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property decQty() As Double
            Get
                Try 
                    Return CType(Me(Me.tablelstPOHeaderDetails.decQtyColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'decQty' in table 'lstPOHeaderDetails' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstPOHeaderDetails.decQtyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property decSellingPrice() As Double
            Get
                Try 
                    Return CType(Me(Me.tablelstPOHeaderDetails.decSellingPriceColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'decSellingPrice' in table 'lstPOHeaderDetails' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstPOHeaderDetails.decSellingPriceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property decSellingValue() As Double
            Get
                Try 
                    Return CType(Me(Me.tablelstPOHeaderDetails.decSellingValueColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'decSellingValue' in table 'lstPOHeaderDetails' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstPOHeaderDetails.decSellingValueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property decOriginalPrice() As Double
            Get
                Try 
                    Return CType(Me(Me.tablelstPOHeaderDetails.decOriginalPriceColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'decOriginalPrice' in table 'lstPOHeaderDetails' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstPOHeaderDetails.decOriginalPriceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property decVatPercentage() As Double
            Get
                Try 
                    Return CType(Me(Me.tablelstPOHeaderDetails.decVatPercentageColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'decVatPercentage' in table 'lstPOHeaderDetails' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstPOHeaderDetails.decVatPercentageColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property decVatAmount() As Double
            Get
                Try 
                    Return CType(Me(Me.tablelstPOHeaderDetails.decVatAmountColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'decVatAmount' in table 'lstPOHeaderDetails' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstPOHeaderDetails.decVatAmountColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property decInvoiceLineAmount() As Double
            Get
                Try 
                    Return CType(Me(Me.tablelstPOHeaderDetails.decInvoiceLineAmountColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'decInvoiceLineAmount' in table 'lstPOHeaderDetails' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstPOHeaderDetails.decInvoiceLineAmountColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property txtUOM() As String
            Get
                Try 
                    Return CType(Me(Me.tablelstPOHeaderDetails.txtUOMColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'txtUOM' in table 'lstPOHeaderDetails' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstPOHeaderDetails.txtUOMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property dblQuoteNum() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablelstPOHeaderDetails.dblQuoteNumColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'dblQuoteNum' in table 'lstPOHeaderDetails' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstPOHeaderDetails.dblQuoteNumColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DateFrom() As Date
            Get
                Try 
                    Return CType(Me(Me.tablelstPOHeaderDetails.DateFromColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DateFrom' in table 'lstPOHeaderDetails' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstPOHeaderDetails.DateFromColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DateTo() As Date
            Get
                Try 
                    Return CType(Me(Me.tablelstPOHeaderDetails.DateToColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DateTo' in table 'lstPOHeaderDetails' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstPOHeaderDetails.DateToColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DateETD() As Date
            Get
                Try 
                    Return CType(Me(Me.tablelstPOHeaderDetails.DateETDColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DateETD' in table 'lstPOHeaderDetails' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstPOHeaderDetails.DateETDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property txtPOMessage() As String
            Get
                Try 
                    Return CType(Me(Me.tablelstPOHeaderDetails.txtPOMessageColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'txtPOMessage' in table 'lstPOHeaderDetails' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstPOHeaderDetails.txtPOMessageColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isid_tblPOHeaderNull() As Boolean
            Return Me.IsNull(Me.tablelstPOHeaderDetails.id_tblPOHeaderColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setid_tblPOHeaderNull()
            Me(Me.tablelstPOHeaderDetails.id_tblPOHeaderColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isfk_idtblCustomerNull() As Boolean
            Return Me.IsNull(Me.tablelstPOHeaderDetails.fk_idtblCustomerColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setfk_idtblCustomerNull()
            Me(Me.tablelstPOHeaderDetails.fk_idtblCustomerColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IstxtCompanyNoNull() As Boolean
            Return Me.IsNull(Me.tablelstPOHeaderDetails.txtCompanyNoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SettxtCompanyNoNull()
            Me(Me.tablelstPOHeaderDetails.txtCompanyNoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsdblPONumNull() As Boolean
            Return Me.IsNull(Me.tablelstPOHeaderDetails.dblPONumColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetdblPONumNull()
            Me(Me.tablelstPOHeaderDetails.dblPONumColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IstxtCusDescNull() As Boolean
            Return Me.IsNull(Me.tablelstPOHeaderDetails.txtCusDescColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SettxtCusDescNull()
            Me(Me.tablelstPOHeaderDetails.txtCusDescColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IstxtAddPosNull() As Boolean
            Return Me.IsNull(Me.tablelstPOHeaderDetails.txtAddPosColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SettxtAddPosNull()
            Me(Me.tablelstPOHeaderDetails.txtAddPosColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IstxtContactNameNull() As Boolean
            Return Me.IsNull(Me.tablelstPOHeaderDetails.txtContactNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SettxtContactNameNull()
            Me(Me.tablelstPOHeaderDetails.txtContactNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IstxtEmailNull() As Boolean
            Return Me.IsNull(Me.tablelstPOHeaderDetails.txtEmailColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SettxtEmailNull()
            Me(Me.tablelstPOHeaderDetails.txtEmailColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IstxtPhone1Null() As Boolean
            Return Me.IsNull(Me.tablelstPOHeaderDetails.txtPhone1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SettxtPhone1Null()
            Me(Me.tablelstPOHeaderDetails.txtPhone1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IstxtPhone2Null() As Boolean
            Return Me.IsNull(Me.tablelstPOHeaderDetails.txtPhone2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SettxtPhone2Null()
            Me(Me.tablelstPOHeaderDetails.txtPhone2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IstxtFaxNull() As Boolean
            Return Me.IsNull(Me.tablelstPOHeaderDetails.txtFaxColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SettxtFaxNull()
            Me(Me.tablelstPOHeaderDetails.txtFaxColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IstxtPODateNull() As Boolean
            Return Me.IsNull(Me.tablelstPOHeaderDetails.txtPODateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SettxtPODateNull()
            Me(Me.tablelstPOHeaderDetails.txtPODateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IstxtPOOperatorNull() As Boolean
            Return Me.IsNull(Me.tablelstPOHeaderDetails.txtPOOperatorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SettxtPOOperatorNull()
            Me(Me.tablelstPOHeaderDetails.txtPOOperatorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IstxtPOStatusNull() As Boolean
            Return Me.IsNull(Me.tablelstPOHeaderDetails.txtPOStatusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SettxtPOStatusNull()
            Me(Me.tablelstPOHeaderDetails.txtPOStatusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IstxtPODocNameNull() As Boolean
            Return Me.IsNull(Me.tablelstPOHeaderDetails.txtPODocNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SettxtPODocNameNull()
            Me(Me.tablelstPOHeaderDetails.txtPODocNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IstxtNotesNull() As Boolean
            Return Me.IsNull(Me.tablelstPOHeaderDetails.txtNotesColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SettxtNotesNull()
            Me(Me.tablelstPOHeaderDetails.txtNotesColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFK_tblQuoteHeaderNull() As Boolean
            Return Me.IsNull(Me.tablelstPOHeaderDetails.FK_tblQuoteHeaderColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFK_tblQuoteHeaderNull()
            Me(Me.tablelstPOHeaderDetails.FK_tblQuoteHeaderColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IstxtCusRefNull() As Boolean
            Return Me.IsNull(Me.tablelstPOHeaderDetails.txtCusRefColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SettxtCusRefNull()
            Me(Me.tablelstPOHeaderDetails.txtCusRefColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isid_tblPODetailNull() As Boolean
            Return Me.IsNull(Me.tablelstPOHeaderDetails.id_tblPODetailColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setid_tblPODetailNull()
            Me(Me.tablelstPOHeaderDetails.id_tblPODetailColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isfk_tblPOHeaderNull() As Boolean
            Return Me.IsNull(Me.tablelstPOHeaderDetails.fk_tblPOHeaderColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setfk_tblPOHeaderNull()
            Me(Me.tablelstPOHeaderDetails.fk_tblPOHeaderColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isfk_tblProductNull() As Boolean
            Return Me.IsNull(Me.tablelstPOHeaderDetails.fk_tblProductColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setfk_tblProductNull()
            Me(Me.tablelstPOHeaderDetails.fk_tblProductColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IstxtProdCdeNull() As Boolean
            Return Me.IsNull(Me.tablelstPOHeaderDetails.txtProdCdeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SettxtProdCdeNull()
            Me(Me.tablelstPOHeaderDetails.txtProdCdeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IstxtProdDescNull() As Boolean
            Return Me.IsNull(Me.tablelstPOHeaderDetails.txtProdDescColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SettxtProdDescNull()
            Me(Me.tablelstPOHeaderDetails.txtProdDescColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IstxtProdSpec1Null() As Boolean
            Return Me.IsNull(Me.tablelstPOHeaderDetails.txtProdSpec1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SettxtProdSpec1Null()
            Me(Me.tablelstPOHeaderDetails.txtProdSpec1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IstxtProdSpec2Null() As Boolean
            Return Me.IsNull(Me.tablelstPOHeaderDetails.txtProdSpec2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SettxtProdSpec2Null()
            Me(Me.tablelstPOHeaderDetails.txtProdSpec2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IstxtProdSpec3Null() As Boolean
            Return Me.IsNull(Me.tablelstPOHeaderDetails.txtProdSpec3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SettxtProdSpec3Null()
            Me(Me.tablelstPOHeaderDetails.txtProdSpec3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsdecQtyNull() As Boolean
            Return Me.IsNull(Me.tablelstPOHeaderDetails.decQtyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetdecQtyNull()
            Me(Me.tablelstPOHeaderDetails.decQtyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsdecSellingPriceNull() As Boolean
            Return Me.IsNull(Me.tablelstPOHeaderDetails.decSellingPriceColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetdecSellingPriceNull()
            Me(Me.tablelstPOHeaderDetails.decSellingPriceColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsdecSellingValueNull() As Boolean
            Return Me.IsNull(Me.tablelstPOHeaderDetails.decSellingValueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetdecSellingValueNull()
            Me(Me.tablelstPOHeaderDetails.decSellingValueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsdecOriginalPriceNull() As Boolean
            Return Me.IsNull(Me.tablelstPOHeaderDetails.decOriginalPriceColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetdecOriginalPriceNull()
            Me(Me.tablelstPOHeaderDetails.decOriginalPriceColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsdecVatPercentageNull() As Boolean
            Return Me.IsNull(Me.tablelstPOHeaderDetails.decVatPercentageColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetdecVatPercentageNull()
            Me(Me.tablelstPOHeaderDetails.decVatPercentageColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsdecVatAmountNull() As Boolean
            Return Me.IsNull(Me.tablelstPOHeaderDetails.decVatAmountColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetdecVatAmountNull()
            Me(Me.tablelstPOHeaderDetails.decVatAmountColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsdecInvoiceLineAmountNull() As Boolean
            Return Me.IsNull(Me.tablelstPOHeaderDetails.decInvoiceLineAmountColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetdecInvoiceLineAmountNull()
            Me(Me.tablelstPOHeaderDetails.decInvoiceLineAmountColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IstxtUOMNull() As Boolean
            Return Me.IsNull(Me.tablelstPOHeaderDetails.txtUOMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SettxtUOMNull()
            Me(Me.tablelstPOHeaderDetails.txtUOMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsdblQuoteNumNull() As Boolean
            Return Me.IsNull(Me.tablelstPOHeaderDetails.dblQuoteNumColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetdblQuoteNumNull()
            Me(Me.tablelstPOHeaderDetails.dblQuoteNumColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDateFromNull() As Boolean
            Return Me.IsNull(Me.tablelstPOHeaderDetails.DateFromColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDateFromNull()
            Me(Me.tablelstPOHeaderDetails.DateFromColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDateToNull() As Boolean
            Return Me.IsNull(Me.tablelstPOHeaderDetails.DateToColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDateToNull()
            Me(Me.tablelstPOHeaderDetails.DateToColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDateETDNull() As Boolean
            Return Me.IsNull(Me.tablelstPOHeaderDetails.DateETDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDateETDNull()
            Me(Me.tablelstPOHeaderDetails.DateETDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IstxtPOMessageNull() As Boolean
            Return Me.IsNull(Me.tablelstPOHeaderDetails.txtPOMessageColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SettxtPOMessageNull()
            Me(Me.tablelstPOHeaderDetails.txtPOMessageColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class lstJCDetailsRow
        Inherits Global.System.Data.DataRow
        
        Private tablelstJCDetails As lstJCDetailsDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablelstJCDetails = CType(Me.Table,lstJCDetailsDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property id_tblJC() As Integer
            Get
                Return CType(Me(Me.tablelstJCDetails.id_tblJCColumn),Integer)
            End Get
            Set
                Me(Me.tablelstJCDetails.id_tblJCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property dblJCno() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablelstJCDetails.dblJCnoColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'dblJCno' in table 'lstJCDetails' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstJCDetails.dblJCnoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property txtCusRef() As String
            Get
                Try 
                    Return CType(Me(Me.tablelstJCDetails.txtCusRefColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'txtCusRef' in table 'lstJCDetails' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstJCDetails.txtCusRefColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FK_tblPOHeader() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablelstJCDetails.FK_tblPOHeaderColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FK_tblPOHeader' in table 'lstJCDetails' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstJCDetails.FK_tblPOHeaderColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FK_tblProduct() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablelstJCDetails.FK_tblProductColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FK_tblProduct' in table 'lstJCDetails' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstJCDetails.FK_tblProductColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property dblQty() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablelstJCDetails.dblQtyColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'dblQty' in table 'lstJCDetails' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstJCDetails.dblQtyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DateETD() As Date
            Get
                Try 
                    Return CType(Me(Me.tablelstJCDetails.DateETDColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DateETD' in table 'lstJCDetails' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstJCDetails.DateETDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property txtPic() As String
            Get
                Try 
                    Return CType(Me(Me.tablelstJCDetails.txtPicColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'txtPic' in table 'lstJCDetails' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstJCDetails.txtPicColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DateFrom() As Date
            Get
                Try 
                    Return CType(Me(Me.tablelstJCDetails.DateFromColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DateFrom' in table 'lstJCDetails' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstJCDetails.DateFromColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DateTo() As Date
            Get
                Try 
                    Return CType(Me(Me.tablelstJCDetails.DateToColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DateTo' in table 'lstJCDetails' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstJCDetails.DateToColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property txtCusDesc() As String
            Get
                Try 
                    Return CType(Me(Me.tablelstJCDetails.txtCusDescColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'txtCusDesc' in table 'lstJCDetails' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstJCDetails.txtCusDescColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FK_tblCustomer() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablelstJCDetails.FK_tblCustomerColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FK_tblCustomer' in table 'lstJCDetails' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstJCDetails.FK_tblCustomerColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Product() As String
            Get
                Try 
                    Return CType(Me(Me.tablelstJCDetails.ProductColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Product' in table 'lstJCDetails' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstJCDetails.ProductColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property dblPONum() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablelstJCDetails.dblPONumColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'dblPONum' in table 'lstJCDetails' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelstJCDetails.dblPONumColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsdblJCnoNull() As Boolean
            Return Me.IsNull(Me.tablelstJCDetails.dblJCnoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetdblJCnoNull()
            Me(Me.tablelstJCDetails.dblJCnoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IstxtCusRefNull() As Boolean
            Return Me.IsNull(Me.tablelstJCDetails.txtCusRefColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SettxtCusRefNull()
            Me(Me.tablelstJCDetails.txtCusRefColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFK_tblPOHeaderNull() As Boolean
            Return Me.IsNull(Me.tablelstJCDetails.FK_tblPOHeaderColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFK_tblPOHeaderNull()
            Me(Me.tablelstJCDetails.FK_tblPOHeaderColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFK_tblProductNull() As Boolean
            Return Me.IsNull(Me.tablelstJCDetails.FK_tblProductColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFK_tblProductNull()
            Me(Me.tablelstJCDetails.FK_tblProductColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsdblQtyNull() As Boolean
            Return Me.IsNull(Me.tablelstJCDetails.dblQtyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetdblQtyNull()
            Me(Me.tablelstJCDetails.dblQtyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDateETDNull() As Boolean
            Return Me.IsNull(Me.tablelstJCDetails.DateETDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDateETDNull()
            Me(Me.tablelstJCDetails.DateETDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IstxtPicNull() As Boolean
            Return Me.IsNull(Me.tablelstJCDetails.txtPicColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SettxtPicNull()
            Me(Me.tablelstJCDetails.txtPicColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDateFromNull() As Boolean
            Return Me.IsNull(Me.tablelstJCDetails.DateFromColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDateFromNull()
            Me(Me.tablelstJCDetails.DateFromColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDateToNull() As Boolean
            Return Me.IsNull(Me.tablelstJCDetails.DateToColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDateToNull()
            Me(Me.tablelstJCDetails.DateToColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IstxtCusDescNull() As Boolean
            Return Me.IsNull(Me.tablelstJCDetails.txtCusDescColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SettxtCusDescNull()
            Me(Me.tablelstJCDetails.txtCusDescColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFK_tblCustomerNull() As Boolean
            Return Me.IsNull(Me.tablelstJCDetails.FK_tblCustomerColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFK_tblCustomerNull()
            Me(Me.tablelstJCDetails.FK_tblCustomerColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsProductNull() As Boolean
            Return Me.IsNull(Me.tablelstJCDetails.ProductColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetProductNull()
            Me(Me.tablelstJCDetails.ProductColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsdblPONumNull() As Boolean
            Return Me.IsNull(Me.tablelstJCDetails.dblPONumColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetdblPONumNull()
            Me(Me.tablelstJCDetails.dblPONumColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class tblJCMaterialRow
        Inherits Global.System.Data.DataRow
        
        Private tabletblJCMaterial As tblJCMaterialDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabletblJCMaterial = CType(Me.Table,tblJCMaterialDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property id_tblJCMaterial() As Integer
            Get
                Return CType(Me(Me.tabletblJCMaterial.id_tblJCMaterialColumn),Integer)
            End Get
            Set
                Me(Me.tabletblJCMaterial.id_tblJCMaterialColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FK_tblJC() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletblJCMaterial.FK_tblJCColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FK_tblJC' in table 'tblJCMaterial' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblJCMaterial.FK_tblJCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FK_tblMatLInk() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletblJCMaterial.FK_tblMatLInkColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FK_tblMatLInk' in table 'tblJCMaterial' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblJCMaterial.FK_tblMatLInkColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TxtMaterial() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblJCMaterial.TxtMaterialColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TxtMaterial' in table 'tblJCMaterial' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblJCMaterial.TxtMaterialColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DblProdQty() As Double
            Get
                Try 
                    Return CType(Me(Me.tabletblJCMaterial.DblProdQtyColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DblProdQty' in table 'tblJCMaterial' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblJCMaterial.DblProdQtyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property txtUOM() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblJCMaterial.txtUOMColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'txtUOM' in table 'tblJCMaterial' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblJCMaterial.txtUOMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFK_tblJCNull() As Boolean
            Return Me.IsNull(Me.tabletblJCMaterial.FK_tblJCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFK_tblJCNull()
            Me(Me.tabletblJCMaterial.FK_tblJCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFK_tblMatLInkNull() As Boolean
            Return Me.IsNull(Me.tabletblJCMaterial.FK_tblMatLInkColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFK_tblMatLInkNull()
            Me(Me.tabletblJCMaterial.FK_tblMatLInkColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTxtMaterialNull() As Boolean
            Return Me.IsNull(Me.tabletblJCMaterial.TxtMaterialColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTxtMaterialNull()
            Me(Me.tabletblJCMaterial.TxtMaterialColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDblProdQtyNull() As Boolean
            Return Me.IsNull(Me.tabletblJCMaterial.DblProdQtyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDblProdQtyNull()
            Me(Me.tabletblJCMaterial.DblProdQtyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IstxtUOMNull() As Boolean
            Return Me.IsNull(Me.tabletblJCMaterial.txtUOMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SettxtUOMNull()
            Me(Me.tabletblJCMaterial.txtUOMColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class tblJCLabourRow
        Inherits Global.System.Data.DataRow
        
        Private tabletblJCLabour As tblJCLabourDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabletblJCLabour = CType(Me.Table,tblJCLabourDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property id_tblJCLabour() As Integer
            Get
                Return CType(Me(Me.tabletblJCLabour.id_tblJCLabourColumn),Integer)
            End Get
            Set
                Me(Me.tabletblJCLabour.id_tblJCLabourColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FK_tblJC() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletblJCLabour.FK_tblJCColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FK_tblJC' in table 'tblJCLabour' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblJCLabour.FK_tblJCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property txtDesc() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblJCLabour.txtDescColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'txtDesc' in table 'tblJCLabour' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblJCLabour.txtDescColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property dblMin() As Double
            Get
                Try 
                    Return CType(Me(Me.tabletblJCLabour.dblMinColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'dblMin' in table 'tblJCLabour' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblJCLabour.dblMinColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property dblHour() As Double
            Get
                Try 
                    Return CType(Me(Me.tabletblJCLabour.dblHourColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'dblHour' in table 'tblJCLabour' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblJCLabour.dblHourColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property txtOp1() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblJCLabour.txtOp1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'txtOp1' in table 'tblJCLabour' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblJCLabour.txtOp1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property txtOp2() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblJCLabour.txtOp2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'txtOp2' in table 'tblJCLabour' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblJCLabour.txtOp2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property txtNotes() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblJCLabour.txtNotesColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'txtNotes' in table 'tblJCLabour' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblJCLabour.txtNotesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFK_tblJCNull() As Boolean
            Return Me.IsNull(Me.tabletblJCLabour.FK_tblJCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFK_tblJCNull()
            Me(Me.tabletblJCLabour.FK_tblJCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IstxtDescNull() As Boolean
            Return Me.IsNull(Me.tabletblJCLabour.txtDescColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SettxtDescNull()
            Me(Me.tabletblJCLabour.txtDescColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsdblMinNull() As Boolean
            Return Me.IsNull(Me.tabletblJCLabour.dblMinColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetdblMinNull()
            Me(Me.tabletblJCLabour.dblMinColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsdblHourNull() As Boolean
            Return Me.IsNull(Me.tabletblJCLabour.dblHourColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetdblHourNull()
            Me(Me.tabletblJCLabour.dblHourColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IstxtOp1Null() As Boolean
            Return Me.IsNull(Me.tabletblJCLabour.txtOp1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SettxtOp1Null()
            Me(Me.tabletblJCLabour.txtOp1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IstxtOp2Null() As Boolean
            Return Me.IsNull(Me.tabletblJCLabour.txtOp2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SettxtOp2Null()
            Me(Me.tabletblJCLabour.txtOp2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IstxtNotesNull() As Boolean
            Return Me.IsNull(Me.tabletblJCLabour.txtNotesColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SettxtNotesNull()
            Me(Me.tabletblJCLabour.txtNotesColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class tblProductRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As tblProductRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As tblProductRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As tblProductRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class tblCoInfoRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As tblCoInfoRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As tblCoInfoRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As tblCoInfoRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class lstQuoteHeaderDetailsRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As lstQuoteHeaderDetailsRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As lstQuoteHeaderDetailsRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As lstQuoteHeaderDetailsRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class lstReceiptsRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As lstReceiptsRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As lstReceiptsRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As lstReceiptsRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class lstInvoiceHeaderDetailsRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As lstInvoiceHeaderDetailsRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As lstInvoiceHeaderDetailsRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As lstInvoiceHeaderDetailsRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class lstPOHeaderDetailsRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As lstPOHeaderDetailsRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As lstPOHeaderDetailsRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As lstPOHeaderDetailsRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class lstJCDetailsRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As lstJCDetailsRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As lstJCDetailsRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As lstJCDetailsRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class tblJCMaterialRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As tblJCMaterialRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As tblJCMaterialRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As tblJCMaterialRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class tblJCLabourRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As tblJCLabourRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As tblJCLabourRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As tblJCLabourRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace MyProdDBDataSetTableAdapters
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class tblProductTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "tblProduct"
            tableMapping.ColumnMappings.Add("idtblProduct", "idtblProduct")
            tableMapping.ColumnMappings.Add("txtProdCde", "txtProdCde")
            tableMapping.ColumnMappings.Add("txtProdDesc", "txtProdDesc")
            tableMapping.ColumnMappings.Add("txtCostSortCat", "txtCostSortCat")
            tableMapping.ColumnMappings.Add("txtCostSortItem", "txtCostSortItem")
            tableMapping.ColumnMappings.Add("FK_idtblCoInfo", "FK_idtblCoInfo")
            tableMapping.ColumnMappings.Add("txtProdSpec1", "txtProdSpec1")
            tableMapping.ColumnMappings.Add("txtProdSpec2", "txtProdSpec2")
            tableMapping.ColumnMappings.Add("txtProdSpec3", "txtProdSpec3")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [tblProduct] WHERE (([idtblProduct] = @Original_idtblProduct) AND ((@"& _ 
                "IsNull_txtProdCde = 1 AND [txtProdCde] IS NULL) OR ([txtProdCde] = @Original_txt"& _ 
                "ProdCde)) AND ((@IsNull_txtProdDesc = 1 AND [txtProdDesc] IS NULL) OR ([txtProdD"& _ 
                "esc] = @Original_txtProdDesc)) AND ((@IsNull_txtCostSortCat = 1 AND [txtCostSort"& _ 
                "Cat] IS NULL) OR ([txtCostSortCat] = @Original_txtCostSortCat)) AND ((@IsNull_tx"& _ 
                "tCostSortItem = 1 AND [txtCostSortItem] IS NULL) OR ([txtCostSortItem] = @Origin"& _ 
                "al_txtCostSortItem)) AND ((@IsNull_FK_idtblCoInfo = 1 AND [FK_idtblCoInfo] IS NU"& _ 
                "LL) OR ([FK_idtblCoInfo] = @Original_FK_idtblCoInfo)) AND ((@IsNull_txtProdSpec1"& _ 
                " = 1 AND [txtProdSpec1] IS NULL) OR ([txtProdSpec1] = @Original_txtProdSpec1)) A"& _ 
                "ND ((@IsNull_txtProdSpec2 = 1 AND [txtProdSpec2] IS NULL) OR ([txtProdSpec2] = @"& _ 
                "Original_txtProdSpec2)) AND ((@IsNull_txtProdSpec3 = 1 AND [txtProdSpec3] IS NUL"& _ 
                "L) OR ([txtProdSpec3] = @Original_txtProdSpec3)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_idtblProduct", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "idtblProduct", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_txtProdCde", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "txtProdCde", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_txtProdCde", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "txtProdCde", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_txtProdDesc", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "txtProdDesc", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_txtProdDesc", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "txtProdDesc", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_txtCostSortCat", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "txtCostSortCat", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_txtCostSortCat", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "txtCostSortCat", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_txtCostSortItem", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "txtCostSortItem", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_txtCostSortItem", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "txtCostSortItem", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FK_idtblCoInfo", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FK_idtblCoInfo", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FK_idtblCoInfo", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FK_idtblCoInfo", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_txtProdSpec1", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "txtProdSpec1", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_txtProdSpec1", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "txtProdSpec1", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_txtProdSpec2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "txtProdSpec2", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_txtProdSpec2", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "txtProdSpec2", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_txtProdSpec3", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "txtProdSpec3", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_txtProdSpec3", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "txtProdSpec3", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [tblProduct] ([txtProdCde], [txtProdDesc], [txtCostSortCat], [txtCost"& _ 
                "SortItem], [FK_idtblCoInfo], [txtProdSpec1], [txtProdSpec2], [txtProdSpec3]) VAL"& _ 
                "UES (@txtProdCde, @txtProdDesc, @txtCostSortCat, @txtCostSortItem, @FK_idtblCoIn"& _ 
                "fo, @txtProdSpec1, @txtProdSpec2, @txtProdSpec3)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@txtProdCde", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "txtProdCde", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@txtProdDesc", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "txtProdDesc", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@txtCostSortCat", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "txtCostSortCat", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@txtCostSortItem", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "txtCostSortItem", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FK_idtblCoInfo", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FK_idtblCoInfo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@txtProdSpec1", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "txtProdSpec1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@txtProdSpec2", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "txtProdSpec2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@txtProdSpec3", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "txtProdSpec3", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [tblProduct] SET [txtProdCde] = @txtProdCde, [txtProdDesc] = @txtProdDesc,"& _ 
                " [txtCostSortCat] = @txtCostSortCat, [txtCostSortItem] = @txtCostSortItem, [FK_i"& _ 
                "dtblCoInfo] = @FK_idtblCoInfo, [txtProdSpec1] = @txtProdSpec1, [txtProdSpec2] = "& _ 
                "@txtProdSpec2, [txtProdSpec3] = @txtProdSpec3 WHERE (([idtblProduct] = @Original"& _ 
                "_idtblProduct) AND ((@IsNull_txtProdCde = 1 AND [txtProdCde] IS NULL) OR ([txtPr"& _ 
                "odCde] = @Original_txtProdCde)) AND ((@IsNull_txtProdDesc = 1 AND [txtProdDesc] "& _ 
                "IS NULL) OR ([txtProdDesc] = @Original_txtProdDesc)) AND ((@IsNull_txtCostSortCa"& _ 
                "t = 1 AND [txtCostSortCat] IS NULL) OR ([txtCostSortCat] = @Original_txtCostSort"& _ 
                "Cat)) AND ((@IsNull_txtCostSortItem = 1 AND [txtCostSortItem] IS NULL) OR ([txtC"& _ 
                "ostSortItem] = @Original_txtCostSortItem)) AND ((@IsNull_FK_idtblCoInfo = 1 AND "& _ 
                "[FK_idtblCoInfo] IS NULL) OR ([FK_idtblCoInfo] = @Original_FK_idtblCoInfo)) AND "& _ 
                "((@IsNull_txtProdSpec1 = 1 AND [txtProdSpec1] IS NULL) OR ([txtProdSpec1] = @Ori"& _ 
                "ginal_txtProdSpec1)) AND ((@IsNull_txtProdSpec2 = 1 AND [txtProdSpec2] IS NULL) "& _ 
                "OR ([txtProdSpec2] = @Original_txtProdSpec2)) AND ((@IsNull_txtProdSpec3 = 1 AND"& _ 
                " [txtProdSpec3] IS NULL) OR ([txtProdSpec3] = @Original_txtProdSpec3)))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@txtProdCde", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "txtProdCde", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@txtProdDesc", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "txtProdDesc", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@txtCostSortCat", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "txtCostSortCat", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@txtCostSortItem", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "txtCostSortItem", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FK_idtblCoInfo", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FK_idtblCoInfo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@txtProdSpec1", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "txtProdSpec1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@txtProdSpec2", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "txtProdSpec2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@txtProdSpec3", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "txtProdSpec3", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_idtblProduct", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "idtblProduct", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_txtProdCde", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "txtProdCde", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_txtProdCde", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "txtProdCde", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_txtProdDesc", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "txtProdDesc", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_txtProdDesc", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "txtProdDesc", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_txtCostSortCat", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "txtCostSortCat", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_txtCostSortCat", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "txtCostSortCat", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_txtCostSortItem", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "txtCostSortItem", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_txtCostSortItem", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "txtCostSortItem", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FK_idtblCoInfo", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FK_idtblCoInfo", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FK_idtblCoInfo", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FK_idtblCoInfo", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_txtProdSpec1", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "txtProdSpec1", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_txtProdSpec1", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "txtProdSpec1", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_txtProdSpec2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "txtProdSpec2", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_txtProdSpec2", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "txtProdSpec2", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_txtProdSpec3", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "txtProdSpec3", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_txtProdSpec3", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "txtProdSpec3", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.CCP.My.MySettings.Default.ConnectionString1
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT idtblProduct, txtProdCde, txtProdDesc, txtCostSortCat, txtCostSortItem, FK" & _
                "_idtblCoInfo, txtProdSpec1, txtProdSpec2, txtProdSpec3 FROM tblProduct"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, True)> _
        Public Overridable Overloads Function Fill(ByVal dataTable As MyProdDBDataSet.tblProductDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = True) Then
                dataTable.Clear()
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], True)> _
        Public Overridable Overloads Function GetData() As MyProdDBDataSet.tblProductDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As MyProdDBDataSet.tblProductDataTable = New MyProdDBDataSet.tblProductDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
        Public Overridable Overloads Function Update(ByVal dataTable As MyProdDBDataSet.tblProductDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
        Public Overridable Overloads Function Update(ByVal dataSet As MyProdDBDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "tblProduct")
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
        Public Overridable Overloads Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
        Public Overridable Overloads Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, True)> _
        Public Overridable Overloads Function Delete(ByVal Original_idtblProduct As Integer, ByVal Original_txtProdCde As String, ByVal Original_txtProdDesc As String, ByVal Original_txtCostSortCat As String, ByVal Original_txtCostSortItem As String, ByVal Original_FK_idtblCoInfo As Global.System.Nullable(Of Integer), ByVal Original_txtProdSpec1 As String, ByVal Original_txtProdSpec2 As String, ByVal Original_txtProdSpec3 As String) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_idtblProduct, Integer)
            If (Original_txtProdCde Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_txtProdCde, String)
            End If
            If (Original_txtProdDesc Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_txtProdDesc, String)
            End If
            If (Original_txtCostSortCat Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_txtCostSortCat, String)
            End If
            If (Original_txtCostSortItem Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_txtCostSortItem, String)
            End If
            If (Original_FK_idtblCoInfo.HasValue = True) Then
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_FK_idtblCoInfo.Value, Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (Original_txtProdSpec1 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_txtProdSpec1, String)
            End If
            If (Original_txtProdSpec2 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(Original_txtProdSpec2, String)
            End If
            If (Original_txtProdSpec3 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(Original_txtProdSpec3, String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open) _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open()
            End If
            Try
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close()
                End If
            End Try
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, True)> _
        Public Overridable Overloads Function Insert(ByVal txtProdCde As String, ByVal txtProdDesc As String, ByVal txtCostSortCat As String, ByVal txtCostSortItem As String, ByVal FK_idtblCoInfo As Global.System.Nullable(Of Integer), ByVal txtProdSpec1 As String, ByVal txtProdSpec2 As String, ByVal txtProdSpec3 As String) As Integer
            If (txtProdCde Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(txtProdCde, String)
            End If
            If (txtProdDesc Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(txtProdDesc, String)
            End If
            If (txtCostSortCat Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(txtCostSortCat, String)
            End If
            If (txtCostSortItem Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(txtCostSortItem, String)
            End If
            If (FK_idtblCoInfo.HasValue = True) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(FK_idtblCoInfo.Value, Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (txtProdSpec1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(txtProdSpec1, String)
            End If
            If (txtProdSpec2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(txtProdSpec2, String)
            End If
            If (txtProdSpec3 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(txtProdSpec3, String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open) _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open()
            End If
            Try
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close()
                End If
            End Try
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, True)> _
        Public Overridable Overloads Function Update( _
                    ByVal txtProdCde As String, _
                    ByVal txtProdDesc As String, _
                    ByVal txtCostSortCat As String, _
                    ByVal txtCostSortItem As String, _
                    ByVal FK_idtblCoInfo As Global.System.Nullable(Of Integer), _
                    ByVal txtProdSpec1 As String, _
                    ByVal txtProdSpec2 As String, _
                    ByVal txtProdSpec3 As String, _
                    ByVal Original_idtblProduct As Integer, _
                    ByVal Original_txtProdCde As String, _
                    ByVal Original_txtProdDesc As String, _
                    ByVal Original_txtCostSortCat As String, _
                    ByVal Original_txtCostSortItem As String, _
                    ByVal Original_FK_idtblCoInfo As Global.System.Nullable(Of Integer), _
                    ByVal Original_txtProdSpec1 As String, _
                    ByVal Original_txtProdSpec2 As String, _
                    ByVal Original_txtProdSpec3 As String) As Integer
            If (txtProdCde Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(txtProdCde, String)
            End If
            If (txtProdDesc Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(txtProdDesc, String)
            End If
            If (txtCostSortCat Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(txtCostSortCat, String)
            End If
            If (txtCostSortItem Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(txtCostSortItem, String)
            End If
            If (FK_idtblCoInfo.HasValue = True) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(FK_idtblCoInfo.Value, Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (txtProdSpec1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(txtProdSpec1, String)
            End If
            If (txtProdSpec2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(txtProdSpec2, String)
            End If
            If (txtProdSpec3 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(txtProdSpec3, String)
            End If
            Me.Adapter.UpdateCommand.Parameters(8).Value = CType(Original_idtblProduct, Integer)
            If (Original_txtProdCde Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(Original_txtProdCde, String)
            End If
            If (Original_txtProdDesc Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(Original_txtProdDesc, String)
            End If
            If (Original_txtCostSortCat Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(Original_txtCostSortCat, String)
            End If
            If (Original_txtCostSortItem Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(Original_txtCostSortItem, String)
            End If
            If (Original_FK_idtblCoInfo.HasValue = True) Then
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(Original_FK_idtblCoInfo.Value, Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (Original_txtProdSpec1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(Original_txtProdSpec1, String)
            End If
            If (Original_txtProdSpec2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(Original_txtProdSpec2, String)
            End If
            If (Original_txtProdSpec3 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(24).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(Original_txtProdSpec3, String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open) _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open()
            End If
            Try
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close()
                End If
            End Try
        End Function
    End Class

    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"), _
     Global.System.ComponentModel.ToolboxItem(True), _
     Global.System.ComponentModel.DataObjectAttribute(True), _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" & _
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"), _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
    Partial Public Class tblCoInfoTableAdapter
        Inherits Global.System.ComponentModel.Component

        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter

        Private _connection As Global.System.Data.SqlClient.SqlConnection

        Private _transaction As Global.System.Data.SqlClient.SqlTransaction

        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand

        Private _clearBeforeFill As Boolean

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.ClearBeforeFill = True
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter()
                End If
                Return Me._adapter
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection()
                End If
                Return Me._connection
            End Get
            Set(value As Global.System.Data.SqlClient.SqlConnection)
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i), Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set(value As Global.System.Data.SqlClient.SqlTransaction)
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection()
                End If
                Return Me._commandCollection
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set(value As Boolean)
                Me._clearBeforeFill = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "tblCoInfo"
            tableMapping.ColumnMappings.Add("idtblCoInfo", "idtblCoInfo")
            tableMapping.ColumnMappings.Add("txtCoInfo", "txtCoInfo")
            tableMapping.ColumnMappings.Add("txtCoAd1", "txtCoAd1")
            tableMapping.ColumnMappings.Add("txtCoAd2", "txtCoAd2")
            tableMapping.ColumnMappings.Add("txtCoAd3", "txtCoAd3")
            tableMapping.ColumnMappings.Add("txtCoPosCde", "txtCoPosCde")
            tableMapping.ColumnMappings.Add("dteFinYearEnd", "dteFinYearEnd")
            tableMapping.ColumnMappings.Add("dblNormalLabHours", "dblNormalLabHours")
            tableMapping.ColumnMappings.Add("dblFridayLabHours", "dblFridayLabHours")
            tableMapping.ColumnMappings.Add("perSalesIncrease", "perSalesIncrease")
            tableMapping.ColumnMappings.Add("dblLeaveDays", "dblLeaveDays")
            tableMapping.ColumnMappings.Add("perPriceIncrease", "perPriceIncrease")
            tableMapping.ColumnMappings.Add("perLabIncrease", "perLabIncrease")
            tableMapping.ColumnMappings.Add("perOHIncrease", "perOHIncrease")
            tableMapping.ColumnMappings.Add("perMatPriceIncrease", "perMatPriceIncrease")
            tableMapping.ColumnMappings.Add("perRentIncrease", "perRentIncrease")
            tableMapping.ColumnMappings.Add("dblCashOB", "dblCashOB")
            tableMapping.ColumnMappings.Add("dblDebOB", "dblDebOB")
            tableMapping.ColumnMappings.Add("dblCredOB", "dblCredOB")
            tableMapping.ColumnMappings.Add("txtProdUnique", "txtProdUnique")
            tableMapping.ColumnMappings.Add("dblAvgDebDays", "dblAvgDebDays")
            tableMapping.ColumnMappings.Add("dblAvgPayDays", "dblAvgPayDays")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [tblCoInfo] WHERE (([idtblCoInfo] = @Original_idtblCoInfo) AND ((@IsN" & _
                "ull_txtCoInfo = 1 AND [txtCoInfo] IS NULL) OR ([txtCoInfo] = @Original_txtCoInfo" & _
                ")) AND ((@IsNull_txtCoAd1 = 1 AND [txtCoAd1] IS NULL) OR ([txtCoAd1] = @Original" & _
                "_txtCoAd1)) AND ((@IsNull_txtCoAd2 = 1 AND [txtCoAd2] IS NULL) OR ([txtCoAd2] = " & _
                "@Original_txtCoAd2)) AND ((@IsNull_txtCoAd3 = 1 AND [txtCoAd3] IS NULL) OR ([txt" & _
                "CoAd3] = @Original_txtCoAd3)) AND ((@IsNull_txtCoPosCde = 1 AND [txtCoPosCde] IS" & _
                " NULL) OR ([txtCoPosCde] = @Original_txtCoPosCde)) AND ((@IsNull_dteFinYearEnd =" & _
                " 1 AND [dteFinYearEnd] IS NULL) OR ([dteFinYearEnd] = @Original_dteFinYearEnd)) " & _
                "AND ((@IsNull_dblNormalLabHours = 1 AND [dblNormalLabHours] IS NULL) OR ([dblNor" & _
                "malLabHours] = @Original_dblNormalLabHours)) AND ((@IsNull_dblFridayLabHours = 1" & _
                " AND [dblFridayLabHours] IS NULL) OR ([dblFridayLabHours] = @Original_dblFridayL" & _
                "abHours)) AND ((@IsNull_perSalesIncrease = 1 AND [perSalesIncrease] IS NULL) OR " & _
                "([perSalesIncrease] = @Original_perSalesIncrease)) AND ((@IsNull_dblLeaveDays = " & _
                "1 AND [dblLeaveDays] IS NULL) OR ([dblLeaveDays] = @Original_dblLeaveDays)) AND " & _
                "((@IsNull_perPriceIncrease = 1 AND [perPriceIncrease] IS NULL) OR ([perPriceIncr" & _
                "ease] = @Original_perPriceIncrease)) AND ((@IsNull_perLabIncrease = 1 AND [perLa" & _
                "bIncrease] IS NULL) OR ([perLabIncrease] = @Original_perLabIncrease)) AND ((@IsN" & _
                "ull_perOHIncrease = 1 AND [perOHIncrease] IS NULL) OR ([perOHIncrease] = @Origin" & _
                "al_perOHIncrease)) AND ((@IsNull_perMatPriceIncrease = 1 AND [perMatPriceIncreas" & _
                "e] IS NULL) OR ([perMatPriceIncrease] = @Original_perMatPriceIncrease)) AND ((@I" & _
                "sNull_perRentIncrease = 1 AND [perRentIncrease] IS NULL) OR ([perRentIncrease] =" & _
                " @Original_perRentIncrease)) AND ((@IsNull_dblCashOB = 1 AND [dblCashOB] IS NULL" & _
                ") OR ([dblCashOB] = @Original_dblCashOB)) AND ((@IsNull_dblDebOB = 1 AND [dblDeb" & _
                "OB] IS NULL) OR ([dblDebOB] = @Original_dblDebOB)) AND ((@IsNull_dblCredOB = 1 A" & _
                "ND [dblCredOB] IS NULL) OR ([dblCredOB] = @Original_dblCredOB)) AND ((@IsNull_tx" & _
                "tProdUnique = 1 AND [txtProdUnique] IS NULL) OR ([txtProdUnique] = @Original_txt" & _
                "ProdUnique)) AND ((@IsNull_dblAvgDebDays = 1 AND [dblAvgDebDays] IS NULL) OR ([d" & _
                "blAvgDebDays] = @Original_dblAvgDebDays)) AND ((@IsNull_dblAvgPayDays = 1 AND [d" & _
                "blAvgPayDays] IS NULL) OR ([dblAvgPayDays] = @Original_dblAvgPayDays)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_idtblCoInfo", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "idtblCoInfo", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_txtCoInfo", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "txtCoInfo", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_txtCoInfo", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "txtCoInfo", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_txtCoAd1", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "txtCoAd1", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_txtCoAd1", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "txtCoAd1", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_txtCoAd2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "txtCoAd2", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_txtCoAd2", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "txtCoAd2", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_txtCoAd3", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "txtCoAd3", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_txtCoAd3", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "txtCoAd3", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_txtCoPosCde", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "txtCoPosCde", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_txtCoPosCde", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "txtCoPosCde", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_dteFinYearEnd", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "dteFinYearEnd", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_dteFinYearEnd", Global.System.Data.SqlDbType.DateTime2, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "dteFinYearEnd", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_dblNormalLabHours", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "dblNormalLabHours", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_dblNormalLabHours", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "dblNormalLabHours", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_dblFridayLabHours", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "dblFridayLabHours", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_dblFridayLabHours", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "dblFridayLabHours", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_perSalesIncrease", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "perSalesIncrease", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_perSalesIncrease", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "perSalesIncrease", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_dblLeaveDays", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "dblLeaveDays", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_dblLeaveDays", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "dblLeaveDays", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_perPriceIncrease", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "perPriceIncrease", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_perPriceIncrease", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "perPriceIncrease", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_perLabIncrease", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "perLabIncrease", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_perLabIncrease", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "perLabIncrease", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_perOHIncrease", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "perOHIncrease", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_perOHIncrease", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "perOHIncrease", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_perMatPriceIncrease", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "perMatPriceIncrease", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_perMatPriceIncrease", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "perMatPriceIncrease", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_perRentIncrease", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "perRentIncrease", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_perRentIncrease", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "perRentIncrease", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_dblCashOB", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "dblCashOB", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_dblCashOB", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "dblCashOB", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_dblDebOB", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "dblDebOB", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_dblDebOB", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "dblDebOB", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_dblCredOB", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "dblCredOB", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_dblCredOB", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "dblCredOB", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_txtProdUnique", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "txtProdUnique", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_txtProdUnique", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "txtProdUnique", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_dblAvgDebDays", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "dblAvgDebDays", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_dblAvgDebDays", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "dblAvgDebDays", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_dblAvgPayDays", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "dblAvgPayDays", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_dblAvgPayDays", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "dblAvgPayDays", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [tblCoInfo] ([txtCoInfo], [txtCoAd1], [txtCoAd2], [txtCoAd3], [txtCoP" & _
                "osCde], [dteFinYearEnd], [dblNormalLabHours], [dblFridayLabHours], [perSalesIncr" & _
                "ease], [dblLeaveDays], [perPriceIncrease], [perLabIncrease], [perOHIncrease], [p" & _
                "erMatPriceIncrease], [perRentIncrease], [dblCashOB], [dblDebOB], [dblCredOB], [t" & _
                "xtProdUnique], [dblAvgDebDays], [dblAvgPayDays]) VALUES (@txtCoInfo, @txtCoAd1, " & _
                "@txtCoAd2, @txtCoAd3, @txtCoPosCde, @dteFinYearEnd, @dblNormalLabHours, @dblFrid" & _
                "ayLabHours, @perSalesIncrease, @dblLeaveDays, @perPriceIncrease, @perLabIncrease" & _
                ", @perOHIncrease, @perMatPriceIncrease, @perRentIncrease, @dblCashOB, @dblDebOB," & _
                " @dblCredOB, @txtProdUnique, @dblAvgDebDays, @dblAvgPayDays)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@txtCoInfo", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "txtCoInfo", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@txtCoAd1", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "txtCoAd1", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@txtCoAd2", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "txtCoAd2", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@txtCoAd3", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "txtCoAd3", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@txtCoPosCde", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "txtCoPosCde", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@dteFinYearEnd", Global.System.Data.SqlDbType.DateTime2, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "dteFinYearEnd", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@dblNormalLabHours", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "dblNormalLabHours", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@dblFridayLabHours", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "dblFridayLabHours", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@perSalesIncrease", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "perSalesIncrease", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@dblLeaveDays", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "dblLeaveDays", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@perPriceIncrease", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "perPriceIncrease", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@perLabIncrease", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "perLabIncrease", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@perOHIncrease", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "perOHIncrease", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@perMatPriceIncrease", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "perMatPriceIncrease", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@perRentIncrease", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "perRentIncrease", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@dblCashOB", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "dblCashOB", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@dblDebOB", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "dblDebOB", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@dblCredOB", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "dblCredOB", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@txtProdUnique", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "txtProdUnique", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@dblAvgDebDays", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "dblAvgDebDays", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@dblAvgPayDays", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "dblAvgPayDays", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [tblCoInfo] SET [txtCoInfo] = @txtCoInfo, [txtCoAd1] = @txtCoAd1, [txtCoAd" & _
                "2] = @txtCoAd2, [txtCoAd3] = @txtCoAd3, [txtCoPosCde] = @txtCoPosCde, [dteFinYea" & _
                "rEnd] = @dteFinYearEnd, [dblNormalLabHours] = @dblNormalLabHours, [dblFridayLabH" & _
                "ours] = @dblFridayLabHours, [perSalesIncrease] = @perSalesIncrease, [dblLeaveDay" & _
                "s] = @dblLeaveDays, [perPriceIncrease] = @perPriceIncrease, [perLabIncrease] = @" & _
                "perLabIncrease, [perOHIncrease] = @perOHIncrease, [perMatPriceIncrease] = @perMa" & _
                "tPriceIncrease, [perRentIncrease] = @perRentIncrease, [dblCashOB] = @dblCashOB, " & _
                "[dblDebOB] = @dblDebOB, [dblCredOB] = @dblCredOB, [txtProdUnique] = @txtProdUniq" & _
                "ue, [dblAvgDebDays] = @dblAvgDebDays, [dblAvgPayDays] = @dblAvgPayDays WHERE (([" & _
                "idtblCoInfo] = @Original_idtblCoInfo) AND ((@IsNull_txtCoInfo = 1 AND [txtCoInfo" & _
                "] IS NULL) OR ([txtCoInfo] = @Original_txtCoInfo)) AND ((@IsNull_txtCoAd1 = 1 AN" & _
                "D [txtCoAd1] IS NULL) OR ([txtCoAd1] = @Original_txtCoAd1)) AND ((@IsNull_txtCoA" & _
                "d2 = 1 AND [txtCoAd2] IS NULL) OR ([txtCoAd2] = @Original_txtCoAd2)) AND ((@IsNu" & _
                "ll_txtCoAd3 = 1 AND [txtCoAd3] IS NULL) OR ([txtCoAd3] = @Original_txtCoAd3)) AN" & _
                "D ((@IsNull_txtCoPosCde = 1 AND [txtCoPosCde] IS NULL) OR ([txtCoPosCde] = @Orig" & _
                "inal_txtCoPosCde)) AND ((@IsNull_dteFinYearEnd = 1 AND [dteFinYearEnd] IS NULL) " & _
                "OR ([dteFinYearEnd] = @Original_dteFinYearEnd)) AND ((@IsNull_dblNormalLabHours " & _
                "= 1 AND [dblNormalLabHours] IS NULL) OR ([dblNormalLabHours] = @Original_dblNorm" & _
                "alLabHours)) AND ((@IsNull_dblFridayLabHours = 1 AND [dblFridayLabHours] IS NULL" & _
                ") OR ([dblFridayLabHours] = @Original_dblFridayLabHours)) AND ((@IsNull_perSales" & _
                "Increase = 1 AND [perSalesIncrease] IS NULL) OR ([perSalesIncrease] = @Original_" & _
                "perSalesIncrease)) AND ((@IsNull_dblLeaveDays = 1 AND [dblLeaveDays] IS NULL) OR" & _
                " ([dblLeaveDays] = @Original_dblLeaveDays)) AND ((@IsNull_perPriceIncrease = 1 A" & _
                "ND [perPriceIncrease] IS NULL) OR ([perPriceIncrease] = @Original_perPriceIncrea" & _
                "se)) AND ((@IsNull_perLabIncrease = 1 AND [perLabIncrease] IS NULL) OR ([perLabI" & _
                "ncrease] = @Original_perLabIncrease)) AND ((@IsNull_perOHIncrease = 1 AND [perOH" & _
                "Increase] IS NULL) OR ([perOHIncrease] = @Original_perOHIncrease)) AND ((@IsNull" & _
                "_perMatPriceIncrease = 1 AND [perMatPriceIncrease] IS NULL) OR ([perMatPriceIncr" & _
                "ease] = @Original_perMatPriceIncrease)) AND ((@IsNull_perRentIncrease = 1 AND [p" & _
                "erRentIncrease] IS NULL) OR ([perRentIncrease] = @Original_perRentIncrease)) AND" & _
                " ((@IsNull_dblCashOB = 1 AND [dblCashOB] IS NULL) OR ([dblCashOB] = @Original_db" & _
                "lCashOB)) AND ((@IsNull_dblDebOB = 1 AND [dblDebOB] IS NULL) OR ([dblDebOB] = @O" & _
                "riginal_dblDebOB)) AND ((@IsNull_dblCredOB = 1 AND [dblCredOB] IS NULL) OR ([dbl" & _
                "CredOB] = @Original_dblCredOB)) AND ((@IsNull_txtProdUnique = 1 AND [txtProdUniq" & _
                "ue] IS NULL) OR ([txtProdUnique] = @Original_txtProdUnique)) AND ((@IsNull_dblAv" & _
                "gDebDays = 1 AND [dblAvgDebDays] IS NULL) OR ([dblAvgDebDays] = @Original_dblAvg" & _
                "DebDays)) AND ((@IsNull_dblAvgPayDays = 1 AND [dblAvgPayDays] IS NULL) OR ([dblA" & _
                "vgPayDays] = @Original_dblAvgPayDays)))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@txtCoInfo", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "txtCoInfo", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@txtCoAd1", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "txtCoAd1", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@txtCoAd2", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "txtCoAd2", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@txtCoAd3", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "txtCoAd3", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@txtCoPosCde", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "txtCoPosCde", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@dteFinYearEnd", Global.System.Data.SqlDbType.DateTime2, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "dteFinYearEnd", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@dblNormalLabHours", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "dblNormalLabHours", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@dblFridayLabHours", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "dblFridayLabHours", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@perSalesIncrease", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "perSalesIncrease", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@dblLeaveDays", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "dblLeaveDays", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@perPriceIncrease", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "perPriceIncrease", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@perLabIncrease", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "perLabIncrease", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@perOHIncrease", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "perOHIncrease", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@perMatPriceIncrease", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "perMatPriceIncrease", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@perRentIncrease", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "perRentIncrease", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@dblCashOB", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "dblCashOB", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@dblDebOB", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "dblDebOB", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@dblCredOB", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "dblCredOB", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@txtProdUnique", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "txtProdUnique", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@dblAvgDebDays", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "dblAvgDebDays", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@dblAvgPayDays", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "dblAvgPayDays", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_idtblCoInfo", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "idtblCoInfo", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_txtCoInfo", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "txtCoInfo", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_txtCoInfo", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "txtCoInfo", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_txtCoAd1", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "txtCoAd1", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_txtCoAd1", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "txtCoAd1", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_txtCoAd2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "txtCoAd2", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_txtCoAd2", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "txtCoAd2", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_txtCoAd3", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "txtCoAd3", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_txtCoAd3", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "txtCoAd3", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_txtCoPosCde", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "txtCoPosCde", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_txtCoPosCde", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "txtCoPosCde", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_dteFinYearEnd", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "dteFinYearEnd", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_dteFinYearEnd", Global.System.Data.SqlDbType.DateTime2, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "dteFinYearEnd", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_dblNormalLabHours", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "dblNormalLabHours", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_dblNormalLabHours", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "dblNormalLabHours", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_dblFridayLabHours", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "dblFridayLabHours", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_dblFridayLabHours", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "dblFridayLabHours", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_perSalesIncrease", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "perSalesIncrease", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_perSalesIncrease", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "perSalesIncrease", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_dblLeaveDays", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "dblLeaveDays", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_dblLeaveDays", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "dblLeaveDays", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_perPriceIncrease", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "perPriceIncrease", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_perPriceIncrease", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "perPriceIncrease", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_perLabIncrease", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "perLabIncrease", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_perLabIncrease", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "perLabIncrease", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_perOHIncrease", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "perOHIncrease", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_perOHIncrease", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "perOHIncrease", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_perMatPriceIncrease", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "perMatPriceIncrease", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_perMatPriceIncrease", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "perMatPriceIncrease", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_perRentIncrease", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "perRentIncrease", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_perRentIncrease", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "perRentIncrease", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_dblCashOB", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "dblCashOB", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_dblCashOB", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "dblCashOB", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_dblDebOB", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "dblDebOB", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_dblDebOB", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "dblDebOB", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_dblCredOB", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "dblCredOB", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_dblCredOB", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "dblCredOB", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_txtProdUnique", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "txtProdUnique", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_txtProdUnique", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "txtProdUnique", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_dblAvgDebDays", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "dblAvgDebDays", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_dblAvgDebDays", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "dblAvgDebDays", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_dblAvgPayDays", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "dblAvgPayDays", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_dblAvgPayDays", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "dblAvgPayDays", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.CCP.My.MySettings.Default.ConnectionString1
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT idtblCoInfo, txtCoInfo, txtCoAd1, txtCoAd2, txtCoAd3, txtCoPosCde, dteFinY" & _
                "earEnd, dblNormalLabHours, dblFridayLabHours, perSalesIncrease, dblLeaveDays, pe" & _
                "rPriceIncrease, perLabIncrease, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "            perOHIncrease, perMatPriceIncrease" & _
                ", perRentIncrease, dblCashOB, dblDebOB, dblCredOB, txtProdUnique, dblAvgDebDays," & _
                " dblAvgPayDays" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "FROM   tblCoInfo"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, True)> _
        Public Overridable Overloads Function Fill(ByVal dataTable As MyProdDBDataSet.tblCoInfoDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = True) Then
                dataTable.Clear()
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], True)> _
        Public Overridable Overloads Function GetData() As MyProdDBDataSet.tblCoInfoDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As MyProdDBDataSet.tblCoInfoDataTable = New MyProdDBDataSet.tblCoInfoDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
        Public Overridable Overloads Function Update(ByVal dataTable As MyProdDBDataSet.tblCoInfoDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
        Public Overridable Overloads Function Update(ByVal dataSet As MyProdDBDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "tblCoInfo")
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
        Public Overridable Overloads Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
        Public Overridable Overloads Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, True)> _
        Public Overridable Overloads Function Delete( _
                    ByVal Original_idtblCoInfo As Integer, _
                    ByVal Original_txtCoInfo As String, _
                    ByVal Original_txtCoAd1 As String, _
                    ByVal Original_txtCoAd2 As String, _
                    ByVal Original_txtCoAd3 As String, _
                    ByVal Original_txtCoPosCde As String, _
                    ByVal Original_dteFinYearEnd As Global.System.Nullable(Of Date), _
                    ByVal Original_dblNormalLabHours As Global.System.Nullable(Of Integer), _
                    ByVal Original_dblFridayLabHours As Global.System.Nullable(Of Integer), _
                    ByVal Original_perSalesIncrease As Global.System.Nullable(Of Double), _
                    ByVal Original_dblLeaveDays As Global.System.Nullable(Of Integer), _
                    ByVal Original_perPriceIncrease As Global.System.Nullable(Of Double), _
                    ByVal Original_perLabIncrease As Global.System.Nullable(Of Double), _
                    ByVal Original_perOHIncrease As Global.System.Nullable(Of Double), _
                    ByVal Original_perMatPriceIncrease As Global.System.Nullable(Of Double), _
                    ByVal Original_perRentIncrease As Global.System.Nullable(Of Double), _
                    ByVal Original_dblCashOB As Global.System.Nullable(Of Double), _
                    ByVal Original_dblDebOB As Global.System.Nullable(Of Double), _
                    ByVal Original_dblCredOB As Global.System.Nullable(Of Double), _
                    ByVal Original_txtProdUnique As String, _
                    ByVal Original_dblAvgDebDays As Global.System.Nullable(Of Integer), _
                    ByVal Original_dblAvgPayDays As Global.System.Nullable(Of Integer)) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_idtblCoInfo, Integer)
            If (Original_txtCoInfo Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_txtCoInfo, String)
            End If
            If (Original_txtCoAd1 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_txtCoAd1, String)
            End If
            If (Original_txtCoAd2 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_txtCoAd2, String)
            End If
            If (Original_txtCoAd3 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_txtCoAd3, String)
            End If
            If (Original_txtCoPosCde Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_txtCoPosCde, String)
            End If
            If (Original_dteFinYearEnd.HasValue = True) Then
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_dteFinYearEnd.Value, Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (Original_dblNormalLabHours.HasValue = True) Then
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(Original_dblNormalLabHours.Value, Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (Original_dblFridayLabHours.HasValue = True) Then
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(Original_dblFridayLabHours.Value, Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (Original_perSalesIncrease.HasValue = True) Then
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(Original_perSalesIncrease.Value, Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (Original_dblLeaveDays.HasValue = True) Then
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(Original_dblLeaveDays.Value, Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (Original_perPriceIncrease.HasValue = True) Then
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(Original_perPriceIncrease.Value, Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (Original_perLabIncrease.HasValue = True) Then
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(24).Value = CType(Original_perLabIncrease.Value, Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (Original_perOHIncrease.HasValue = True) Then
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(26).Value = CType(Original_perOHIncrease.Value, Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (Original_perMatPriceIncrease.HasValue = True) Then
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(28).Value = CType(Original_perMatPriceIncrease.Value, Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(28).Value = Global.System.DBNull.Value
            End If
            If (Original_perRentIncrease.HasValue = True) Then
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(30).Value = CType(Original_perRentIncrease.Value, Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(30).Value = Global.System.DBNull.Value
            End If
            If (Original_dblCashOB.HasValue = True) Then
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(32).Value = CType(Original_dblCashOB.Value, Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(32).Value = Global.System.DBNull.Value
            End If
            If (Original_dblDebOB.HasValue = True) Then
                Me.Adapter.DeleteCommand.Parameters(33).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(34).Value = CType(Original_dblDebOB.Value, Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(33).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(34).Value = Global.System.DBNull.Value
            End If
            If (Original_dblCredOB.HasValue = True) Then
                Me.Adapter.DeleteCommand.Parameters(35).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(36).Value = CType(Original_dblCredOB.Value, Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(35).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(36).Value = Global.System.DBNull.Value
            End If
            If (Original_txtProdUnique Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(37).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(38).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(37).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(38).Value = CType(Original_txtProdUnique, String)
            End If
            If (Original_dblAvgDebDays.HasValue = True) Then
                Me.Adapter.DeleteCommand.Parameters(39).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(40).Value = CType(Original_dblAvgDebDays.Value, Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(39).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(40).Value = Global.System.DBNull.Value
            End If
            If (Original_dblAvgPayDays.HasValue = True) Then
                Me.Adapter.DeleteCommand.Parameters(41).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(42).Value = CType(Original_dblAvgPayDays.Value, Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(41).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(42).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open) _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open()
            End If
            Try
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close()
                End If
            End Try
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, True)> _
        Public Overridable Overloads Function Insert( _
                    ByVal txtCoInfo As String, _
                    ByVal txtCoAd1 As String, _
                    ByVal txtCoAd2 As String, _
                    ByVal txtCoAd3 As String, _
                    ByVal txtCoPosCde As String, _
                    ByVal dteFinYearEnd As Global.System.Nullable(Of Date), _
                    ByVal dblNormalLabHours As Global.System.Nullable(Of Integer), _
                    ByVal dblFridayLabHours As Global.System.Nullable(Of Integer), _
                    ByVal perSalesIncrease As Global.System.Nullable(Of Double), _
                    ByVal dblLeaveDays As Global.System.Nullable(Of Integer), _
                    ByVal perPriceIncrease As Global.System.Nullable(Of Double), _
                    ByVal perLabIncrease As Global.System.Nullable(Of Double), _
                    ByVal perOHIncrease As Global.System.Nullable(Of Double), _
                    ByVal perMatPriceIncrease As Global.System.Nullable(Of Double), _
                    ByVal perRentIncrease As Global.System.Nullable(Of Double), _
                    ByVal dblCashOB As Global.System.Nullable(Of Double), _
                    ByVal dblDebOB As Global.System.Nullable(Of Double), _
                    ByVal dblCredOB As Global.System.Nullable(Of Double), _
                    ByVal txtProdUnique As String, _
                    ByVal dblAvgDebDays As Global.System.Nullable(Of Integer), _
                    ByVal dblAvgPayDays As Global.System.Nullable(Of Integer)) As Integer
            If (txtCoInfo Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(txtCoInfo, String)
            End If
            If (txtCoAd1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(txtCoAd1, String)
            End If
            If (txtCoAd2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(txtCoAd2, String)
            End If
            If (txtCoAd3 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(txtCoAd3, String)
            End If
            If (txtCoPosCde Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(txtCoPosCde, String)
            End If
            If (dteFinYearEnd.HasValue = True) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(dteFinYearEnd.Value, Date)
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (dblNormalLabHours.HasValue = True) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(dblNormalLabHours.Value, Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (dblFridayLabHours.HasValue = True) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(dblFridayLabHours.Value, Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (perSalesIncrease.HasValue = True) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(perSalesIncrease.Value, Double)
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (dblLeaveDays.HasValue = True) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(dblLeaveDays.Value, Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (perPriceIncrease.HasValue = True) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(perPriceIncrease.Value, Double)
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (perLabIncrease.HasValue = True) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(perLabIncrease.Value, Double)
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (perOHIncrease.HasValue = True) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(perOHIncrease.Value, Double)
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (perMatPriceIncrease.HasValue = True) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(perMatPriceIncrease.Value, Double)
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (perRentIncrease.HasValue = True) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(perRentIncrease.Value, Double)
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (dblCashOB.HasValue = True) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(dblCashOB.Value, Double)
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (dblDebOB.HasValue = True) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(dblDebOB.Value, Double)
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (dblCredOB.HasValue = True) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(dblCredOB.Value, Double)
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (txtProdUnique Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(txtProdUnique, String)
            End If
            If (dblAvgDebDays.HasValue = True) Then
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(dblAvgDebDays.Value, Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (dblAvgPayDays.HasValue = True) Then
                Me.Adapter.InsertCommand.Parameters(20).Value = CType(dblAvgPayDays.Value, Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open) _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open()
            End If
            Try
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close()
                End If
            End Try
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, True)> _
        Public Overridable Overloads Function Update( _
                    ByVal txtCoInfo As String, _
                    ByVal txtCoAd1 As String, _
                    ByVal txtCoAd2 As String, _
                    ByVal txtCoAd3 As String, _
                    ByVal txtCoPosCde As String, _
                    ByVal dteFinYearEnd As Global.System.Nullable(Of Date), _
                    ByVal dblNormalLabHours As Global.System.Nullable(Of Integer), _
                    ByVal dblFridayLabHours As Global.System.Nullable(Of Integer), _
                    ByVal perSalesIncrease As Global.System.Nullable(Of Double), _
                    ByVal dblLeaveDays As Global.System.Nullable(Of Integer), _
                    ByVal perPriceIncrease As Global.System.Nullable(Of Double), _
                    ByVal perLabIncrease As Global.System.Nullable(Of Double), _
                    ByVal perOHIncrease As Global.System.Nullable(Of Double), _
                    ByVal perMatPriceIncrease As Global.System.Nullable(Of Double), _
                    ByVal perRentIncrease As Global.System.Nullable(Of Double), _
                    ByVal dblCashOB As Global.System.Nullable(Of Double), _
                    ByVal dblDebOB As Global.System.Nullable(Of Double), _
                    ByVal dblCredOB As Global.System.Nullable(Of Double), _
                    ByVal txtProdUnique As String, _
                    ByVal dblAvgDebDays As Global.System.Nullable(Of Integer), _
                    ByVal dblAvgPayDays As Global.System.Nullable(Of Integer), _
                    ByVal Original_idtblCoInfo As Integer, _
                    ByVal Original_txtCoInfo As String, _
                    ByVal Original_txtCoAd1 As String, _
                    ByVal Original_txtCoAd2 As String, _
                    ByVal Original_txtCoAd3 As String, _
                    ByVal Original_txtCoPosCde As String, _
                    ByVal Original_dteFinYearEnd As Global.System.Nullable(Of Date), _
                    ByVal Original_dblNormalLabHours As Global.System.Nullable(Of Integer), _
                    ByVal Original_dblFridayLabHours As Global.System.Nullable(Of Integer), _
                    ByVal Original_perSalesIncrease As Global.System.Nullable(Of Double), _
                    ByVal Original_dblLeaveDays As Global.System.Nullable(Of Integer), _
                    ByVal Original_perPriceIncrease As Global.System.Nullable(Of Double), _
                    ByVal Original_perLabIncrease As Global.System.Nullable(Of Double), _
                    ByVal Original_perOHIncrease As Global.System.Nullable(Of Double), _
                    ByVal Original_perMatPriceIncrease As Global.System.Nullable(Of Double), _
                    ByVal Original_perRentIncrease As Global.System.Nullable(Of Double), _
                    ByVal Original_dblCashOB As Global.System.Nullable(Of Double), _
                    ByVal Original_dblDebOB As Global.System.Nullable(Of Double), _
                    ByVal Original_dblCredOB As Global.System.Nullable(Of Double), _
                    ByVal Original_txtProdUnique As String, _
                    ByVal Original_dblAvgDebDays As Global.System.Nullable(Of Integer), _
                    ByVal Original_dblAvgPayDays As Global.System.Nullable(Of Integer)) As Integer
            If (txtCoInfo Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(txtCoInfo, String)
            End If
            If (txtCoAd1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(txtCoAd1, String)
            End If
            If (txtCoAd2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(txtCoAd2, String)
            End If
            If (txtCoAd3 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(txtCoAd3, String)
            End If
            If (txtCoPosCde Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(txtCoPosCde, String)
            End If
            If (dteFinYearEnd.HasValue = True) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(dteFinYearEnd.Value, Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (dblNormalLabHours.HasValue = True) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(dblNormalLabHours.Value, Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (dblFridayLabHours.HasValue = True) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(dblFridayLabHours.Value, Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (perSalesIncrease.HasValue = True) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(perSalesIncrease.Value, Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (dblLeaveDays.HasValue = True) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(dblLeaveDays.Value, Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (perPriceIncrease.HasValue = True) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(perPriceIncrease.Value, Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (perLabIncrease.HasValue = True) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(perLabIncrease.Value, Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (perOHIncrease.HasValue = True) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(perOHIncrease.Value, Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (perMatPriceIncrease.HasValue = True) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(perMatPriceIncrease.Value, Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (perRentIncrease.HasValue = True) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(perRentIncrease.Value, Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (dblCashOB.HasValue = True) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(dblCashOB.Value, Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (dblDebOB.HasValue = True) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(dblDebOB.Value, Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (dblCredOB.HasValue = True) Then
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(dblCredOB.Value, Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (txtProdUnique Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(txtProdUnique, String)
            End If
            If (dblAvgDebDays.HasValue = True) Then
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(dblAvgDebDays.Value, Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (dblAvgPayDays.HasValue = True) Then
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(dblAvgPayDays.Value, Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(21).Value = CType(Original_idtblCoInfo, Integer)
            If (Original_txtCoInfo Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(23).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(Original_txtCoInfo, String)
            End If
            If (Original_txtCoAd1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(25).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(Original_txtCoAd1, String)
            End If
            If (Original_txtCoAd2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(27).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(Original_txtCoAd2, String)
            End If
            If (Original_txtCoAd3 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(29).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(Original_txtCoAd3, String)
            End If
            If (Original_txtCoPosCde Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(31).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(Original_txtCoPosCde, String)
            End If
            If (Original_dteFinYearEnd.HasValue = True) Then
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(Original_dteFinYearEnd.Value, Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(33).Value = Global.System.DBNull.Value
            End If
            If (Original_dblNormalLabHours.HasValue = True) Then
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(Original_dblNormalLabHours.Value, Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(35).Value = Global.System.DBNull.Value
            End If
            If (Original_dblFridayLabHours.HasValue = True) Then
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(Original_dblFridayLabHours.Value, Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(37).Value = Global.System.DBNull.Value
            End If
            If (Original_perSalesIncrease.HasValue = True) Then
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(Original_perSalesIncrease.Value, Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(39).Value = Global.System.DBNull.Value
            End If
            If (Original_dblLeaveDays.HasValue = True) Then
                Me.Adapter.UpdateCommand.Parameters(40).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(41).Value = CType(Original_dblLeaveDays.Value, Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(40).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(41).Value = Global.System.DBNull.Value
            End If
            If (Original_perPriceIncrease.HasValue = True) Then
                Me.Adapter.UpdateCommand.Parameters(42).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(43).Value = CType(Original_perPriceIncrease.Value, Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(42).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(43).Value = Global.System.DBNull.Value
            End If
            If (Original_perLabIncrease.HasValue = True) Then
                Me.Adapter.UpdateCommand.Parameters(44).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(45).Value = CType(Original_perLabIncrease.Value, Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(44).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(45).Value = Global.System.DBNull.Value
            End If
            If (Original_perOHIncrease.HasValue = True) Then
                Me.Adapter.UpdateCommand.Parameters(46).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(47).Value = CType(Original_perOHIncrease.Value, Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(46).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(47).Value = Global.System.DBNull.Value
            End If
            If (Original_perMatPriceIncrease.HasValue = True) Then
                Me.Adapter.UpdateCommand.Parameters(48).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(49).Value = CType(Original_perMatPriceIncrease.Value, Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(48).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(49).Value = Global.System.DBNull.Value
            End If
            If (Original_perRentIncrease.HasValue = True) Then
                Me.Adapter.UpdateCommand.Parameters(50).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(51).Value = CType(Original_perRentIncrease.Value, Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(50).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(51).Value = Global.System.DBNull.Value
            End If
            If (Original_dblCashOB.HasValue = True) Then
                Me.Adapter.UpdateCommand.Parameters(52).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(53).Value = CType(Original_dblCashOB.Value, Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(52).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(53).Value = Global.System.DBNull.Value
            End If
            If (Original_dblDebOB.HasValue = True) Then
                Me.Adapter.UpdateCommand.Parameters(54).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(55).Value = CType(Original_dblDebOB.Value, Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(54).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(55).Value = Global.System.DBNull.Value
            End If
            If (Original_dblCredOB.HasValue = True) Then
                Me.Adapter.UpdateCommand.Parameters(56).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(57).Value = CType(Original_dblCredOB.Value, Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(56).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(57).Value = Global.System.DBNull.Value
            End If
            If (Original_txtProdUnique Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(58).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(59).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(58).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(59).Value = CType(Original_txtProdUnique, String)
            End If
            If (Original_dblAvgDebDays.HasValue = True) Then
                Me.Adapter.UpdateCommand.Parameters(60).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(61).Value = CType(Original_dblAvgDebDays.Value, Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(60).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(61).Value = Global.System.DBNull.Value
            End If
            If (Original_dblAvgPayDays.HasValue = True) Then
                Me.Adapter.UpdateCommand.Parameters(62).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(63).Value = CType(Original_dblAvgPayDays.Value, Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(62).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(63).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open) _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open()
            End If
            Try
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close()
                End If
            End Try
        End Function
    End Class

    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"), _
     Global.System.ComponentModel.ToolboxItem(True), _
     Global.System.ComponentModel.DataObjectAttribute(True), _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" & _
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"), _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
    Partial Public Class lstQuoteHeaderDetailsTableAdapter
        Inherits Global.System.ComponentModel.Component

        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter

        Private _connection As Global.System.Data.SqlClient.SqlConnection

        Private _transaction As Global.System.Data.SqlClient.SqlTransaction

        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand

        Private _clearBeforeFill As Boolean

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.ClearBeforeFill = True
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter()
                End If
                Return Me._adapter
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection()
                End If
                Return Me._connection
            End Get
            Set(value As Global.System.Data.SqlClient.SqlConnection)
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i), Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set(value As Global.System.Data.SqlClient.SqlTransaction)
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection()
                End If
                Return Me._commandCollection
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set(value As Boolean)
                Me._clearBeforeFill = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "lstQuoteHeaderDetails"
            tableMapping.ColumnMappings.Add("id_tblQuoteHeader", "id_tblQuoteHeader")
            tableMapping.ColumnMappings.Add("fk_idtblCustomer", "fk_idtblCustomer")
            tableMapping.ColumnMappings.Add("dblQuoteNum", "dblQuoteNum")
            tableMapping.ColumnMappings.Add("txtCusDesc", "txtCusDesc")
            tableMapping.ColumnMappings.Add("txtAddPos", "txtAddPos")
            tableMapping.ColumnMappings.Add("txtContactName", "txtContactName")
            tableMapping.ColumnMappings.Add("txtEmail", "txtEmail")
            tableMapping.ColumnMappings.Add("txtPhone1", "txtPhone1")
            tableMapping.ColumnMappings.Add("txtPhone2", "txtPhone2")
            tableMapping.ColumnMappings.Add("txtFax", "txtFax")
            tableMapping.ColumnMappings.Add("txtQuoteDate", "txtQuoteDate")
            tableMapping.ColumnMappings.Add("txtQuoteOperator", "txtQuoteOperator")
            tableMapping.ColumnMappings.Add("txtQuoteStatus", "txtQuoteStatus")
            tableMapping.ColumnMappings.Add("txtQuoteDocName", "txtQuoteDocName")
            tableMapping.ColumnMappings.Add("txtNotes", "txtNotes")
            tableMapping.ColumnMappings.Add("id_tblQuoteDetails", "id_tblQuoteDetails")
            tableMapping.ColumnMappings.Add("fk_tblQuoteHeader", "fk_tblQuoteHeader")
            tableMapping.ColumnMappings.Add("fk_tblProduct", "fk_tblProduct")
            tableMapping.ColumnMappings.Add("txtProdCde", "txtProdCde")
            tableMapping.ColumnMappings.Add("txtProdDesc", "txtProdDesc")
            tableMapping.ColumnMappings.Add("txtProdSpec1", "txtProdSpec1")
            tableMapping.ColumnMappings.Add("txtProdSpec2", "txtProdSpec2")
            tableMapping.ColumnMappings.Add("txtProdSpec3", "txtProdSpec3")
            tableMapping.ColumnMappings.Add("decQty", "decQty")
            tableMapping.ColumnMappings.Add("decSellingPrice", "decSellingPrice")
            tableMapping.ColumnMappings.Add("decSellingValue", "decSellingValue")
            tableMapping.ColumnMappings.Add("decOriginalPrice", "decOriginalPrice")
            tableMapping.ColumnMappings.Add("decVatPercentage", "decVatPercentage")
            tableMapping.ColumnMappings.Add("decVatAmount", "decVatAmount")
            tableMapping.ColumnMappings.Add("decQuoteLineAmount", "decQuoteLineAmount")
            tableMapping.ColumnMappings.Add("txtCompanyNo", "txtCompanyNo")
            tableMapping.ColumnMappings.Add("txtCoInfo", "txtCoInfo")
            tableMapping.ColumnMappings.Add("txtCoAd1", "txtCoAd1")
            tableMapping.ColumnMappings.Add("txtCoAd2", "txtCoAd2")
            tableMapping.ColumnMappings.Add("txtCoAd3", "txtCoAd3")
            tableMapping.ColumnMappings.Add("txtCoPosCde", "txtCoPosCde")
            tableMapping.ColumnMappings.Add("txtVatNo", "txtVatNo")
            tableMapping.ColumnMappings.Add("txtRegNo", "txtRegNo")
            tableMapping.ColumnMappings.Add("txtDirectors", "txtDirectors")
            tableMapping.ColumnMappings.Add("txtPrintName", "txtPrintName")
            tableMapping.ColumnMappings.Add("txtCoEmail", "txtCoEmail")
            tableMapping.ColumnMappings.Add("txtTelNo", "txtTelNo")
            tableMapping.ColumnMappings.Add("txtFaxNo", "txtFaxNo")
            tableMapping.ColumnMappings.Add("txtUOM", "txtUOM")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.CCP.My.MySettings.Default.ConnectionString1
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT      id_tblQuoteHeader, fk_idtblCustomer, txtCompanyNo, dblQuoteNum, txtCu" & _
                "sDesc, txtAddPos, txtContactName, txtPhone1, txtPhone2, txtFax, txtQuoteDate, tx" & _
                "tQuoteOperator, txtQuoteStatus, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                        txtQuoteDocName, txtNo" & _
                "tes, id_tblQuoteDetails, fk_tblQuoteHeader, fk_tblProduct, txtProdCde, txtProdDe" & _
                "sc, txtProdSpec1, txtProdSpec2, txtProdSpec3, decQty, decSellingPrice, decSellin" & _
                "gValue, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                        decOriginalPrice, decVatPercentage, decVatAmou" & _
                "nt, decQuoteLineAmount, txtCoInfo, txtCoAd1, txtCoAd2, txtCoAd3, txtCoPosCde, tx" & _
                "tVatNo, txtRegNo, txtDirectors, txtPrintName, txtTelNo, txtFaxNo, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "            " & _
                "            txtCoEmail, txtUOM, txtEmail" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "FROM          lstQuoteHeaderDetails" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "W" & _
                "HERE      (dblQuoteNum = @dblQuoteNum)"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@dblQuoteNum", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "dblQuoteNum", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, True)> _
        Public Overridable Overloads Function Fill(ByVal dataTable As MyProdDBDataSet.lstQuoteHeaderDetailsDataTable, ByVal dblQuoteNum As Global.System.Nullable(Of Integer)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (dblQuoteNum.HasValue = True) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(dblQuoteNum.Value, Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = True) Then
                dataTable.Clear()
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], True)> _
        Public Overridable Overloads Function GetData(ByVal dblQuoteNum As Global.System.Nullable(Of Integer)) As MyProdDBDataSet.lstQuoteHeaderDetailsDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (dblQuoteNum.HasValue = True) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(dblQuoteNum.Value, Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As MyProdDBDataSet.lstQuoteHeaderDetailsDataTable = New MyProdDBDataSet.lstQuoteHeaderDetailsDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class

    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"), _
     Global.System.ComponentModel.ToolboxItem(True), _
     Global.System.ComponentModel.DataObjectAttribute(True), _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" & _
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"), _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
    Partial Public Class lstReceiptsTableAdapter
        Inherits Global.System.ComponentModel.Component

        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter

        Private _connection As Global.System.Data.SqlClient.SqlConnection

        Private _transaction As Global.System.Data.SqlClient.SqlTransaction

        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand

        Private _clearBeforeFill As Boolean

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.ClearBeforeFill = True
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter()
                End If
                Return Me._adapter
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection()
                End If
                Return Me._connection
            End Get
            Set(value As Global.System.Data.SqlClient.SqlConnection)
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i), Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set(value As Global.System.Data.SqlClient.SqlTransaction)
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection()
                End If
                Return Me._commandCollection
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set(value As Boolean)
                Me._clearBeforeFill = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "lstReceipts"
            tableMapping.ColumnMappings.Add("id_tblReceipts", "id_tblReceipts")
            tableMapping.ColumnMappings.Add("FK_tblQuotHeader", "FK_tblQuotHeader")
            tableMapping.ColumnMappings.Add("fk_tblInvoiceHeader", "fk_tblInvoiceHeader")
            tableMapping.ColumnMappings.Add("FK_tblCustomer", "FK_tblCustomer")
            tableMapping.ColumnMappings.Add("dteReceiptDate", "dteReceiptDate")
            tableMapping.ColumnMappings.Add("txtReceiptType", "txtReceiptType")
            tableMapping.ColumnMappings.Add("txtStatus", "txtStatus")
            tableMapping.ColumnMappings.Add("dteLogDate", "dteLogDate")
            tableMapping.ColumnMappings.Add("txtLogUser", "txtLogUser")
            tableMapping.ColumnMappings.Add("Type", "Type")
            tableMapping.ColumnMappings.Add("txtCusDesc", "txtCusDesc")
            tableMapping.ColumnMappings.Add("txtAddPos", "txtAddPos")
            tableMapping.ColumnMappings.Add("txtContactName", "txtContactName")
            tableMapping.ColumnMappings.Add("txtEmail", "txtEmail")
            tableMapping.ColumnMappings.Add("txtPhone1", "txtPhone1")
            tableMapping.ColumnMappings.Add("txtPhone2", "txtPhone2")
            tableMapping.ColumnMappings.Add("txtFax", "txtFax")
            tableMapping.ColumnMappings.Add("TranDate", "TranDate")
            tableMapping.ColumnMappings.Add("txtVatNo", "txtVatNo")
            tableMapping.ColumnMappings.Add("tblCustomer.txtVatNo", "tblCustomer_txtVatNo")
            tableMapping.ColumnMappings.Add("txtCoAd1", "txtCoAd1")
            tableMapping.ColumnMappings.Add("txtCoAd2", "txtCoAd2")
            tableMapping.ColumnMappings.Add("txtCoAd3", "txtCoAd3")
            tableMapping.ColumnMappings.Add("txtCoPosCde", "txtCoPosCde")
            tableMapping.ColumnMappings.Add("txtRegNo", "txtRegNo")
            tableMapping.ColumnMappings.Add("txtDirectors", "txtDirectors")
            tableMapping.ColumnMappings.Add("txtPrintName", "txtPrintName")
            tableMapping.ColumnMappings.Add("txtTelNo", "txtTelNo")
            tableMapping.ColumnMappings.Add("txtFaxNo", "txtFaxNo")
            tableMapping.ColumnMappings.Add("txtCoEmail", "txtCoEmail")
            tableMapping.ColumnMappings.Add("TranNumber", "TranNumber")
            tableMapping.ColumnMappings.Add("txtCoVatNo", "txtCoVatNo")
            tableMapping.ColumnMappings.Add("dblAmount", "dblAmount")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.CCP.My.MySettings.Default.ConnectionString1
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT id_tblReceipts, FK_tblQuotHeader, fk_tblInvoiceHeader, FK_tblCustomer, dte" & _
                "ReceiptDate, txtReceiptType, txtStatus, dteLogDate, txtLogUser, Type, txtCusDesc" & _
                ", txtAddPos, txtContactName, txtEmail, txtPhone1, txtPhone2, txtFax, TranDate, t" & _
                "xtVatNo, txtCoAd1, txtCoAd2, txtCoAd3, txtCoPosCde, txtCoVatNo, txtRegNo, txtDir" & _
                "ectors, txtPrintName, txtTelNo, txtFaxNo, txtCoEmail, TranNumber, dblAmount FROM" & _
                " lstReceipts WHERE (id_tblReceipts = @id_tblReceipts)"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@id_tblReceipts", Global.System.Data.SqlDbType.[Variant], 1024, Global.System.Data.ParameterDirection.Input, 0, 0, "id_tblReceipts", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT FK_tblCustomer, FK_tblQuotHeader, TranDate, TranNumber, Type, dblAmount, d" & _
                "teLogDate, dteReceiptDate, fk_tblInvoiceHeader, id_tblReceipts, txtAddPos, txtCo" & _
                "Ad1, txtCoAd2, txtCoAd3, txtCoEmail, txtCoPosCde, txtCoVatNo, txtContactName, tx" & _
                "tCusDesc, txtDirectors, txtEmail, txtFax, txtFaxNo, txtLogUser, txtPhone1, txtPh" & _
                "one2, txtPrintName, txtReceiptType, txtRegNo, txtStatus, txtTelNo, txtVatNo FROM" & _
                " lstReceipts WHERE (TranNumber = @TranNumber)"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TranNumber", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "TranNumber", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, True)> _
        Public Overridable Overloads Function Fill(ByVal dataTable As MyProdDBDataSet.lstReceiptsDataTable, ByVal id_tblReceipts As Object) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (id_tblReceipts Is Nothing) Then
                Throw New Global.System.ArgumentNullException("id_tblReceipts")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(id_tblReceipts, Object)
            End If
            If (Me.ClearBeforeFill = True) Then
                dataTable.Clear()
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], True)> _
        Public Overridable Overloads Function GetData(ByVal id_tblReceipts As Object) As MyProdDBDataSet.lstReceiptsDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (id_tblReceipts Is Nothing) Then
                Throw New Global.System.ArgumentNullException("id_tblReceipts")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(id_tblReceipts, Object)
            End If
            Dim dataTable As MyProdDBDataSet.lstReceiptsDataTable = New MyProdDBDataSet.lstReceiptsDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, False)> _
        Public Overridable Overloads Function FillByQuote(ByVal dataTable As MyProdDBDataSet.lstReceiptsDataTable, ByVal TranNumber As Global.System.Nullable(Of Integer)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (TranNumber.HasValue = True) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(TranNumber.Value, Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = True) Then
                dataTable.Clear()
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], False)> _
        Public Overridable Overloads Function GetDataBy(ByVal TranNumber As Global.System.Nullable(Of Integer)) As MyProdDBDataSet.lstReceiptsDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (TranNumber.HasValue = True) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(TranNumber.Value, Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As MyProdDBDataSet.lstReceiptsDataTable = New MyProdDBDataSet.lstReceiptsDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class

    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"), _
     Global.System.ComponentModel.ToolboxItem(True), _
     Global.System.ComponentModel.DataObjectAttribute(True), _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" & _
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"), _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
    Partial Public Class lstInvoiceHeaderDetailsTableAdapter
        Inherits Global.System.ComponentModel.Component

        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter

        Private _connection As Global.System.Data.SqlClient.SqlConnection

        Private _transaction As Global.System.Data.SqlClient.SqlTransaction

        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand

        Private _clearBeforeFill As Boolean

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.ClearBeforeFill = True
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter()
                End If
                Return Me._adapter
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection()
                End If
                Return Me._connection
            End Get
            Set(value As Global.System.Data.SqlClient.SqlConnection)
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i), Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set(value As Global.System.Data.SqlClient.SqlTransaction)
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection()
                End If
                Return Me._commandCollection
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set(value As Boolean)
                Me._clearBeforeFill = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "lstInvoiceHeaderDetails"
            tableMapping.ColumnMappings.Add("id_tblInvoiceHeader", "id_tblInvoiceHeader")
            tableMapping.ColumnMappings.Add("fk_idtblCustomer", "fk_idtblCustomer")
            tableMapping.ColumnMappings.Add("txtCompanyNo", "txtCompanyNo")
            tableMapping.ColumnMappings.Add("dblInvoiceNum", "dblInvoiceNum")
            tableMapping.ColumnMappings.Add("txtCusDesc", "txtCusDesc")
            tableMapping.ColumnMappings.Add("txtAddPos", "txtAddPos")
            tableMapping.ColumnMappings.Add("txtContactName", "txtContactName")
            tableMapping.ColumnMappings.Add("txtEmail", "txtEmail")
            tableMapping.ColumnMappings.Add("txtPhone1", "txtPhone1")
            tableMapping.ColumnMappings.Add("txtPhone2", "txtPhone2")
            tableMapping.ColumnMappings.Add("txtFax", "txtFax")
            tableMapping.ColumnMappings.Add("txtInvoiceDate", "txtInvoiceDate")
            tableMapping.ColumnMappings.Add("txtInvoiceOperator", "txtInvoiceOperator")
            tableMapping.ColumnMappings.Add("txtInvoiceStatus", "txtInvoiceStatus")
            tableMapping.ColumnMappings.Add("txtInvoiceDocName", "txtInvoiceDocName")
            tableMapping.ColumnMappings.Add("txtNotes", "txtNotes")
            tableMapping.ColumnMappings.Add("id_tblInvoiceDetail", "id_tblInvoiceDetail")
            tableMapping.ColumnMappings.Add("fk_tblnvoiceHeader", "fk_tblnvoiceHeader")
            tableMapping.ColumnMappings.Add("fk_tblProduct", "fk_tblProduct")
            tableMapping.ColumnMappings.Add("txtProdCde", "txtProdCde")
            tableMapping.ColumnMappings.Add("txtProdDesc", "txtProdDesc")
            tableMapping.ColumnMappings.Add("txtProdSpec1", "txtProdSpec1")
            tableMapping.ColumnMappings.Add("txtProdSpec2", "txtProdSpec2")
            tableMapping.ColumnMappings.Add("txtProdSpec3", "txtProdSpec3")
            tableMapping.ColumnMappings.Add("decQty", "decQty")
            tableMapping.ColumnMappings.Add("decSellingPrice", "decSellingPrice")
            tableMapping.ColumnMappings.Add("decSellingValue", "decSellingValue")
            tableMapping.ColumnMappings.Add("decOriginalPrice", "decOriginalPrice")
            tableMapping.ColumnMappings.Add("decVatPercentage", "decVatPercentage")
            tableMapping.ColumnMappings.Add("decVatAmount", "decVatAmount")
            tableMapping.ColumnMappings.Add("decInvoiceLineAmount", "decInvoiceLineAmount")
            tableMapping.ColumnMappings.Add("txtUOM", "txtUOM")
            tableMapping.ColumnMappings.Add("txtCoInfo", "txtCoInfo")
            tableMapping.ColumnMappings.Add("txtCoAd1", "txtCoAd1")
            tableMapping.ColumnMappings.Add("txtCoAd2", "txtCoAd2")
            tableMapping.ColumnMappings.Add("txtCoAd3", "txtCoAd3")
            tableMapping.ColumnMappings.Add("txtCoPosCde", "txtCoPosCde")
            tableMapping.ColumnMappings.Add("txtVatNo", "txtVatNo")
            tableMapping.ColumnMappings.Add("txtDirectors", "txtDirectors")
            tableMapping.ColumnMappings.Add("txtPrintName", "txtPrintName")
            tableMapping.ColumnMappings.Add("txtTelNo", "txtTelNo")
            tableMapping.ColumnMappings.Add("txtCoEmail", "txtCoEmail")
            tableMapping.ColumnMappings.Add("dblVatRate", "dblVatRate")
            tableMapping.ColumnMappings.Add("txtFaxNo", "txtFaxNo")
            tableMapping.ColumnMappings.Add("txtRegNo", "txtRegNo")
            tableMapping.ColumnMappings.Add("FK_tblQuoteHeader", "FK_tblQuoteHeader")
            tableMapping.ColumnMappings.Add("dblReceiptAmount", "dblReceiptAmount")
            tableMapping.ColumnMappings.Add("txtCusRef", "txtCusRef")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.CCP.My.MySettings.Default.ConnectionString1
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT id_tblInvoiceHeader, fk_idtblCustomer, txtCompanyNo, dblInvoiceNum, txtCus" & _
                "Desc, txtAddPos, txtContactName, txtEmail, txtPhone1, txtPhone2, txtFax, txtInvo" & _
                "iceDate, txtInvoiceOperator, txtInvoiceStatus, txtInvoiceDocName, txtNotes, FK_t" & _
                "blQuoteHeader, txtCusRef, id_tblInvoiceDetail, fk_tblnvoiceHeader, fk_tblProduct" & _
                ", txtProdCde, txtProdDesc, txtProdSpec1, txtProdSpec2, txtProdSpec3, decQty, dec" & _
                "SellingPrice, decSellingValue, decOriginalPrice, decVatPercentage, decVatAmount," & _
                " decInvoiceLineAmount, txtUOM, txtCoInfo, txtCoAd1, txtCoAd2, txtCoAd3, txtCoPos" & _
                "Cde, txtVatNo, txtDirectors, txtPrintName, txtTelNo, txtCoEmail, dblVatRate, txt" & _
                "FaxNo, txtRegNo, dblReceiptAmount FROM lstInvoiceHeaderDetails WHERE (dblInvoice" & _
                "Num = @dblInvoiceNum)"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@dblInvoiceNum", Global.System.Data.SqlDbType.[Variant], 1024, Global.System.Data.ParameterDirection.Input, 0, 0, "dblInvoiceNum", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, True)> _
        Public Overridable Overloads Function Fill(ByVal dataTable As MyProdDBDataSet.lstInvoiceHeaderDetailsDataTable, ByVal dblInvoiceNum As Object) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (dblInvoiceNum Is Nothing) Then
                Throw New Global.System.ArgumentNullException("dblInvoiceNum")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(dblInvoiceNum, Object)
            End If
            If (Me.ClearBeforeFill = True) Then
                dataTable.Clear()
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], True)> _
        Public Overridable Overloads Function GetData(ByVal dblInvoiceNum As Object) As MyProdDBDataSet.lstInvoiceHeaderDetailsDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (dblInvoiceNum Is Nothing) Then
                Throw New Global.System.ArgumentNullException("dblInvoiceNum")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(dblInvoiceNum, Object)
            End If
            Dim dataTable As MyProdDBDataSet.lstInvoiceHeaderDetailsDataTable = New MyProdDBDataSet.lstInvoiceHeaderDetailsDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class

    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"), _
     Global.System.ComponentModel.ToolboxItem(True), _
     Global.System.ComponentModel.DataObjectAttribute(True), _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" & _
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"), _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
    Partial Public Class lstPOHeaderDetailsTableAdapter
        Inherits Global.System.ComponentModel.Component

        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter

        Private _connection As Global.System.Data.SqlClient.SqlConnection

        Private _transaction As Global.System.Data.SqlClient.SqlTransaction

        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand

        Private _clearBeforeFill As Boolean

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.ClearBeforeFill = True
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter()
                End If
                Return Me._adapter
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection()
                End If
                Return Me._connection
            End Get
            Set(value As Global.System.Data.SqlClient.SqlConnection)
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i), Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set(value As Global.System.Data.SqlClient.SqlTransaction)
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection()
                End If
                Return Me._commandCollection
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set(value As Boolean)
                Me._clearBeforeFill = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "lstPOHeaderDetails"
            tableMapping.ColumnMappings.Add("id_tblPOHeader", "id_tblPOHeader")
            tableMapping.ColumnMappings.Add("fk_idtblCustomer", "fk_idtblCustomer")
            tableMapping.ColumnMappings.Add("txtCompanyNo", "txtCompanyNo")
            tableMapping.ColumnMappings.Add("dblPONum", "dblPONum")
            tableMapping.ColumnMappings.Add("txtCusDesc", "txtCusDesc")
            tableMapping.ColumnMappings.Add("txtAddPos", "txtAddPos")
            tableMapping.ColumnMappings.Add("txtContactName", "txtContactName")
            tableMapping.ColumnMappings.Add("txtEmail", "txtEmail")
            tableMapping.ColumnMappings.Add("txtPhone1", "txtPhone1")
            tableMapping.ColumnMappings.Add("txtPhone2", "txtPhone2")
            tableMapping.ColumnMappings.Add("txtFax", "txtFax")
            tableMapping.ColumnMappings.Add("txtPODate", "txtPODate")
            tableMapping.ColumnMappings.Add("txtPOOperator", "txtPOOperator")
            tableMapping.ColumnMappings.Add("txtPOStatus", "txtPOStatus")
            tableMapping.ColumnMappings.Add("txtPODocName", "txtPODocName")
            tableMapping.ColumnMappings.Add("txtNotes", "txtNotes")
            tableMapping.ColumnMappings.Add("FK_tblQuoteHeader", "FK_tblQuoteHeader")
            tableMapping.ColumnMappings.Add("txtCusRef", "txtCusRef")
            tableMapping.ColumnMappings.Add("id_tblPODetail", "id_tblPODetail")
            tableMapping.ColumnMappings.Add("fk_tblPOHeader", "fk_tblPOHeader")
            tableMapping.ColumnMappings.Add("fk_tblProduct", "fk_tblProduct")
            tableMapping.ColumnMappings.Add("txtProdCde", "txtProdCde")
            tableMapping.ColumnMappings.Add("txtProdDesc", "txtProdDesc")
            tableMapping.ColumnMappings.Add("txtProdSpec1", "txtProdSpec1")
            tableMapping.ColumnMappings.Add("txtProdSpec2", "txtProdSpec2")
            tableMapping.ColumnMappings.Add("txtProdSpec3", "txtProdSpec3")
            tableMapping.ColumnMappings.Add("decQty", "decQty")
            tableMapping.ColumnMappings.Add("decSellingPrice", "decSellingPrice")
            tableMapping.ColumnMappings.Add("decSellingValue", "decSellingValue")
            tableMapping.ColumnMappings.Add("decOriginalPrice", "decOriginalPrice")
            tableMapping.ColumnMappings.Add("decVatPercentage", "decVatPercentage")
            tableMapping.ColumnMappings.Add("decVatAmount", "decVatAmount")
            tableMapping.ColumnMappings.Add("decInvoiceLineAmount", "decInvoiceLineAmount")
            tableMapping.ColumnMappings.Add("txtUOM", "txtUOM")
            tableMapping.ColumnMappings.Add("dblQuoteNum", "dblQuoteNum")
            tableMapping.ColumnMappings.Add("DateFrom", "DateFrom")
            tableMapping.ColumnMappings.Add("DateTo", "DateTo")
            tableMapping.ColumnMappings.Add("DateETD", "DateETD")
            tableMapping.ColumnMappings.Add("txtPOMessage", "txtPOMessage")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.CCP.My.MySettings.Default.ConnectionString1
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        id_tblPOHeader, fk_idtblCustomer, txtCompanyNo, dblPONum, txtCusDes" & _
                "c, txtAddPos, txtContactName, txtEmail, txtPhone1, txtPhone2, txtFax, txtPODate," & _
                " txtPOOperator, txtPOStatus, txtPODocName, txtNotes, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         " & _
                "FK_tblQuoteHeader, txtCusRef, id_tblPODetail, fk_tblPOHeader, fk_tblProduct, txt" & _
                "ProdCde, txtProdDesc, txtProdSpec1, txtProdSpec2, txtProdSpec3, decQty, decSelli" & _
                "ngPrice, decSellingValue, decOriginalPrice, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         decVatPer" & _
                "centage, decVatAmount, decInvoiceLineAmount, txtUOM, dblQuoteNum, DateFrom, Date" & _
                "To, DateETD, txtPOMessage" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "FROM            lstPOHeaderDetails" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "WHERE        (id_" & _
                "tblPOHeader = @id_tblPOHeader)"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@id_tblPOHeader", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "id_tblPOHeader", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, True)> _
        Public Overridable Overloads Function Fill(ByVal dataTable As MyProdDBDataSet.lstPOHeaderDetailsDataTable, ByVal id_tblPOHeader As Integer) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(id_tblPOHeader, Integer)
            If (Me.ClearBeforeFill = True) Then
                dataTable.Clear()
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], True)> _
        Public Overridable Overloads Function GetData(ByVal id_tblPOHeader As Integer) As MyProdDBDataSet.lstPOHeaderDetailsDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(id_tblPOHeader, Integer)
            Dim dataTable As MyProdDBDataSet.lstPOHeaderDetailsDataTable = New MyProdDBDataSet.lstPOHeaderDetailsDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class

    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"), _
     Global.System.ComponentModel.ToolboxItem(True), _
     Global.System.ComponentModel.DataObjectAttribute(True), _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" & _
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"), _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
    Partial Public Class lstJCDetailsTableAdapter
        Inherits Global.System.ComponentModel.Component

        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter

        Private _connection As Global.System.Data.SqlClient.SqlConnection

        Private _transaction As Global.System.Data.SqlClient.SqlTransaction

        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand

        Private _clearBeforeFill As Boolean

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.ClearBeforeFill = True
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter()
                End If
                Return Me._adapter
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection()
                End If
                Return Me._connection
            End Get
            Set(value As Global.System.Data.SqlClient.SqlConnection)
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i), Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set(value As Global.System.Data.SqlClient.SqlTransaction)
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection()
                End If
                Return Me._commandCollection
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set(value As Boolean)
                Me._clearBeforeFill = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "lstJCDetails"
            tableMapping.ColumnMappings.Add("id_tblJC", "id_tblJC")
            tableMapping.ColumnMappings.Add("dblJCno", "dblJCno")
            tableMapping.ColumnMappings.Add("txtCusRef", "txtCusRef")
            tableMapping.ColumnMappings.Add("FK_tblPOHeader", "FK_tblPOHeader")
            tableMapping.ColumnMappings.Add("FK_tblProduct", "FK_tblProduct")
            tableMapping.ColumnMappings.Add("dblQty", "dblQty")
            tableMapping.ColumnMappings.Add("DateETD", "DateETD")
            tableMapping.ColumnMappings.Add("txtPic", "txtPic")
            tableMapping.ColumnMappings.Add("DateFrom", "DateFrom")
            tableMapping.ColumnMappings.Add("DateTo", "DateTo")
            tableMapping.ColumnMappings.Add("txtCusDesc", "txtCusDesc")
            tableMapping.ColumnMappings.Add("FK_tblCustomer", "FK_tblCustomer")
            tableMapping.ColumnMappings.Add("Product", "Product")
            tableMapping.ColumnMappings.Add("dblPONum", "dblPONum")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.CCP.My.MySettings.Default.ConnectionString1
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        id_tblJC, dblJCno, txtCusRef, FK_tblPOHeader, FK_tblProduct, dblQty" & _
                ", DateETD, txtPic, DateFrom, DateTo, txtCusDesc, FK_tblCustomer, Product, dblPON" & _
                "um" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "FROM            lstJCDetails" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "WHERE        (id_tblJC = @id_tblJC)"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@id_tblJC", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "id_tblJC", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, True)> _
        Public Overridable Overloads Function Fill(ByVal dataTable As MyProdDBDataSet.lstJCDetailsDataTable, ByVal id_tblJC As Integer) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(id_tblJC, Integer)
            If (Me.ClearBeforeFill = True) Then
                dataTable.Clear()
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], True)> _
        Public Overridable Overloads Function GetData(ByVal id_tblJC As Integer) As MyProdDBDataSet.lstJCDetailsDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(id_tblJC, Integer)
            Dim dataTable As MyProdDBDataSet.lstJCDetailsDataTable = New MyProdDBDataSet.lstJCDetailsDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class

    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"), _
     Global.System.ComponentModel.ToolboxItem(True), _
     Global.System.ComponentModel.DataObjectAttribute(True), _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" & _
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"), _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
    Partial Public Class tblJCMaterialTableAdapter
        Inherits Global.System.ComponentModel.Component

        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter

        Private _connection As Global.System.Data.SqlClient.SqlConnection

        Private _transaction As Global.System.Data.SqlClient.SqlTransaction

        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand

        Private _clearBeforeFill As Boolean

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.ClearBeforeFill = True
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter()
                End If
                Return Me._adapter
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection()
                End If
                Return Me._connection
            End Get
            Set(value As Global.System.Data.SqlClient.SqlConnection)
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i), Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set(value As Global.System.Data.SqlClient.SqlTransaction)
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection()
                End If
                Return Me._commandCollection
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set(value As Boolean)
                Me._clearBeforeFill = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "tblJCMaterial"
            tableMapping.ColumnMappings.Add("id_tblJCMaterial", "id_tblJCMaterial")
            tableMapping.ColumnMappings.Add("FK_tblJC", "FK_tblJC")
            tableMapping.ColumnMappings.Add("FK_tblMatLInk", "FK_tblMatLInk")
            tableMapping.ColumnMappings.Add("TxtMaterial", "TxtMaterial")
            tableMapping.ColumnMappings.Add("DblProdQty", "DblProdQty")
            tableMapping.ColumnMappings.Add("txtUOM", "txtUOM")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [tblJCMaterial] WHERE (([id_tblJCMaterial] = @Original_id_tblJCMateri" & _
                "al) AND ((@IsNull_FK_tblJC = 1 AND [FK_tblJC] IS NULL) OR ([FK_tblJC] = @Origina" & _
                "l_FK_tblJC)) AND ((@IsNull_FK_tblMatLInk = 1 AND [FK_tblMatLInk] IS NULL) OR ([F" & _
                "K_tblMatLInk] = @Original_FK_tblMatLInk)) AND ((@IsNull_TxtMaterial = 1 AND [Txt" & _
                "Material] IS NULL) OR ([TxtMaterial] = @Original_TxtMaterial)) AND ((@IsNull_Dbl" & _
                "ProdQty = 1 AND [DblProdQty] IS NULL) OR ([DblProdQty] = @Original_DblProdQty)) " & _
                "AND ((@IsNull_txtUOM = 1 AND [txtUOM] IS NULL) OR ([txtUOM] = @Original_txtUOM))" & _
                ")"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_id_tblJCMaterial", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "id_tblJCMaterial", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FK_tblJC", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FK_tblJC", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FK_tblJC", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FK_tblJC", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FK_tblMatLInk", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FK_tblMatLInk", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FK_tblMatLInk", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FK_tblMatLInk", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TxtMaterial", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TxtMaterial", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TxtMaterial", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TxtMaterial", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DblProdQty", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DblProdQty", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DblProdQty", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DblProdQty", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_txtUOM", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "txtUOM", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_txtUOM", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "txtUOM", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [tblJCMaterial] ([FK_tblJC], [FK_tblMatLInk], [TxtMaterial], [DblProd" & _
                "Qty], [txtUOM]) VALUES (@FK_tblJC, @FK_tblMatLInk, @TxtMaterial, @DblProdQty, @t" & _
                "xtUOM)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FK_tblJC", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FK_tblJC", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FK_tblMatLInk", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FK_tblMatLInk", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TxtMaterial", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TxtMaterial", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DblProdQty", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DblProdQty", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@txtUOM", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "txtUOM", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [tblJCMaterial] SET [FK_tblJC] = @FK_tblJC, [FK_tblMatLInk] = @FK_tblMatLI" & _
                "nk, [TxtMaterial] = @TxtMaterial, [DblProdQty] = @DblProdQty, [txtUOM] = @txtUOM" & _
                " WHERE (([id_tblJCMaterial] = @Original_id_tblJCMaterial) AND ((@IsNull_FK_tblJC" & _
                " = 1 AND [FK_tblJC] IS NULL) OR ([FK_tblJC] = @Original_FK_tblJC)) AND ((@IsNull" & _
                "_FK_tblMatLInk = 1 AND [FK_tblMatLInk] IS NULL) OR ([FK_tblMatLInk] = @Original_" & _
                "FK_tblMatLInk)) AND ((@IsNull_TxtMaterial = 1 AND [TxtMaterial] IS NULL) OR ([Tx" & _
                "tMaterial] = @Original_TxtMaterial)) AND ((@IsNull_DblProdQty = 1 AND [DblProdQt" & _
                "y] IS NULL) OR ([DblProdQty] = @Original_DblProdQty)) AND ((@IsNull_txtUOM = 1 A" & _
                "ND [txtUOM] IS NULL) OR ([txtUOM] = @Original_txtUOM)))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FK_tblJC", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FK_tblJC", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FK_tblMatLInk", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FK_tblMatLInk", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TxtMaterial", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TxtMaterial", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DblProdQty", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DblProdQty", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@txtUOM", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "txtUOM", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_id_tblJCMaterial", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "id_tblJCMaterial", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FK_tblJC", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FK_tblJC", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FK_tblJC", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FK_tblJC", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FK_tblMatLInk", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FK_tblMatLInk", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FK_tblMatLInk", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FK_tblMatLInk", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TxtMaterial", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TxtMaterial", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TxtMaterial", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TxtMaterial", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DblProdQty", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DblProdQty", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DblProdQty", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DblProdQty", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_txtUOM", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "txtUOM", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_txtUOM", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "txtUOM", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.CCP.My.MySettings.Default.ConnectionString1
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        id_tblJCMaterial, FK_tblJC, FK_tblMatLInk, TxtMaterial, DblProdQty," & _
                " txtUOM" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "FROM            tblJCMaterial" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "WHERE        (FK_tblJC = @fk_tblJC)"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@fk_tblJC", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "FK_tblJC", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, True)> _
        Public Overridable Overloads Function Fill(ByVal dataTable As MyProdDBDataSet.tblJCMaterialDataTable, ByVal fk_tblJC As Global.System.Nullable(Of Integer)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (fk_tblJC.HasValue = True) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(fk_tblJC.Value, Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = True) Then
                dataTable.Clear()
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], True)> _
        Public Overridable Overloads Function GetData(ByVal fk_tblJC As Global.System.Nullable(Of Integer)) As MyProdDBDataSet.tblJCMaterialDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (fk_tblJC.HasValue = True) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(fk_tblJC.Value, Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As MyProdDBDataSet.tblJCMaterialDataTable = New MyProdDBDataSet.tblJCMaterialDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
        Public Overridable Overloads Function Update(ByVal dataTable As MyProdDBDataSet.tblJCMaterialDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
        Public Overridable Overloads Function Update(ByVal dataSet As MyProdDBDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "tblJCMaterial")
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
        Public Overridable Overloads Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
        Public Overridable Overloads Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, True)> _
        Public Overridable Overloads Function Delete(ByVal Original_id_tblJCMaterial As Integer, ByVal Original_FK_tblJC As Global.System.Nullable(Of Integer), ByVal Original_FK_tblMatLInk As Global.System.Nullable(Of Integer), ByVal Original_TxtMaterial As String, ByVal Original_DblProdQty As Global.System.Nullable(Of Double), ByVal Original_txtUOM As String) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_id_tblJCMaterial, Integer)
            If (Original_FK_tblJC.HasValue = True) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_FK_tblJC.Value, Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (Original_FK_tblMatLInk.HasValue = True) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_FK_tblMatLInk.Value, Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (Original_TxtMaterial Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_TxtMaterial, String)
            End If
            If (Original_DblProdQty.HasValue = True) Then
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_DblProdQty.Value, Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (Original_txtUOM Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_txtUOM, String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open) _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open()
            End If
            Try
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close()
                End If
            End Try
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, True)> _
        Public Overridable Overloads Function Insert(ByVal FK_tblJC As Global.System.Nullable(Of Integer), ByVal FK_tblMatLInk As Global.System.Nullable(Of Integer), ByVal TxtMaterial As String, ByVal DblProdQty As Global.System.Nullable(Of Double), ByVal txtUOM As String) As Integer
            If (FK_tblJC.HasValue = True) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(FK_tblJC.Value, Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (FK_tblMatLInk.HasValue = True) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(FK_tblMatLInk.Value, Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (TxtMaterial Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(TxtMaterial, String)
            End If
            If (DblProdQty.HasValue = True) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(DblProdQty.Value, Double)
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (txtUOM Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(txtUOM, String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open) _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open()
            End If
            Try
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close()
                End If
            End Try
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, True)> _
        Public Overridable Overloads Function Update(ByVal FK_tblJC As Global.System.Nullable(Of Integer), ByVal FK_tblMatLInk As Global.System.Nullable(Of Integer), ByVal TxtMaterial As String, ByVal DblProdQty As Global.System.Nullable(Of Double), ByVal txtUOM As String, ByVal Original_id_tblJCMaterial As Integer, ByVal Original_FK_tblJC As Global.System.Nullable(Of Integer), ByVal Original_FK_tblMatLInk As Global.System.Nullable(Of Integer), ByVal Original_TxtMaterial As String, ByVal Original_DblProdQty As Global.System.Nullable(Of Double), ByVal Original_txtUOM As String) As Integer
            If (FK_tblJC.HasValue = True) Then
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(FK_tblJC.Value, Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (FK_tblMatLInk.HasValue = True) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(FK_tblMatLInk.Value, Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (TxtMaterial Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(TxtMaterial, String)
            End If
            If (DblProdQty.HasValue = True) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(DblProdQty.Value, Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (txtUOM Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(txtUOM, String)
            End If
            Me.Adapter.UpdateCommand.Parameters(5).Value = CType(Original_id_tblJCMaterial, Integer)
            If (Original_FK_tblJC.HasValue = True) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(Original_FK_tblJC.Value, Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (Original_FK_tblMatLInk.HasValue = True) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(Original_FK_tblMatLInk.Value, Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (Original_TxtMaterial Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(Original_TxtMaterial, String)
            End If
            If (Original_DblProdQty.HasValue = True) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(Original_DblProdQty.Value, Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (Original_txtUOM Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(Original_txtUOM, String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open) _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open()
            End If
            Try
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close()
                End If
            End Try
        End Function
    End Class

    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"), _
     Global.System.ComponentModel.ToolboxItem(True), _
     Global.System.ComponentModel.DataObjectAttribute(True), _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" & _
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"), _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
    Partial Public Class tblJCLabourTableAdapter
        Inherits Global.System.ComponentModel.Component

        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter

        Private _connection As Global.System.Data.SqlClient.SqlConnection

        Private _transaction As Global.System.Data.SqlClient.SqlTransaction

        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand

        Private _clearBeforeFill As Boolean

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.ClearBeforeFill = True
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter()
                End If
                Return Me._adapter
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection()
                End If
                Return Me._connection
            End Get
            Set(value As Global.System.Data.SqlClient.SqlConnection)
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i), Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set(value As Global.System.Data.SqlClient.SqlTransaction)
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection()
                End If
                Return Me._commandCollection
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set(value As Boolean)
                Me._clearBeforeFill = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "tblJCLabour"
            tableMapping.ColumnMappings.Add("id_tblJCLabour", "id_tblJCLabour")
            tableMapping.ColumnMappings.Add("FK_tblJC", "FK_tblJC")
            tableMapping.ColumnMappings.Add("txtDesc", "txtDesc")
            tableMapping.ColumnMappings.Add("dblMin", "dblMin")
            tableMapping.ColumnMappings.Add("dblHour", "dblHour")
            tableMapping.ColumnMappings.Add("txtOp1", "txtOp1")
            tableMapping.ColumnMappings.Add("txtOp2", "txtOp2")
            tableMapping.ColumnMappings.Add("txtNotes", "txtNotes")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [tblJCLabour] WHERE (([id_tblJCLabour] = @Original_id_tblJCLabour) AN" & _
                "D ((@IsNull_FK_tblJC = 1 AND [FK_tblJC] IS NULL) OR ([FK_tblJC] = @Original_FK_t" & _
                "blJC)) AND ((@IsNull_txtDesc = 1 AND [txtDesc] IS NULL) OR ([txtDesc] = @Origina" & _
                "l_txtDesc)) AND ((@IsNull_dblMin = 1 AND [dblMin] IS NULL) OR ([dblMin] = @Origi" & _
                "nal_dblMin)) AND ((@IsNull_dblHour = 1 AND [dblHour] IS NULL) OR ([dblHour] = @O" & _
                "riginal_dblHour)) AND ((@IsNull_txtOp1 = 1 AND [txtOp1] IS NULL) OR ([txtOp1] = " & _
                "@Original_txtOp1)) AND ((@IsNull_txtOp2 = 1 AND [txtOp2] IS NULL) OR ([txtOp2] =" & _
                " @Original_txtOp2)) AND ((@IsNull_txtNotes = 1 AND [txtNotes] IS NULL) OR ([txtN" & _
                "otes] = @Original_txtNotes)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_id_tblJCLabour", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "id_tblJCLabour", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FK_tblJC", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FK_tblJC", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FK_tblJC", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FK_tblJC", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_txtDesc", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "txtDesc", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_txtDesc", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "txtDesc", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_dblMin", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "dblMin", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_dblMin", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "dblMin", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_dblHour", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "dblHour", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_dblHour", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "dblHour", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_txtOp1", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "txtOp1", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_txtOp1", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "txtOp1", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_txtOp2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "txtOp2", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_txtOp2", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "txtOp2", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_txtNotes", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "txtNotes", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_txtNotes", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "txtNotes", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [tblJCLabour] ([FK_tblJC], [txtDesc], [dblMin], [dblHour], [txtOp1], " & _
                "[txtOp2], [txtNotes]) VALUES (@FK_tblJC, @txtDesc, @dblMin, @dblHour, @txtOp1, @" & _
                "txtOp2, @txtNotes)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FK_tblJC", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FK_tblJC", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@txtDesc", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "txtDesc", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@dblMin", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "dblMin", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@dblHour", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "dblHour", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@txtOp1", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "txtOp1", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@txtOp2", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "txtOp2", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@txtNotes", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "txtNotes", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [tblJCLabour] SET [FK_tblJC] = @FK_tblJC, [txtDesc] = @txtDesc, [dblMin] =" & _
                " @dblMin, [dblHour] = @dblHour, [txtOp1] = @txtOp1, [txtOp2] = @txtOp2, [txtNote" & _
                "s] = @txtNotes WHERE (([id_tblJCLabour] = @Original_id_tblJCLabour) AND ((@IsNul" & _
                "l_FK_tblJC = 1 AND [FK_tblJC] IS NULL) OR ([FK_tblJC] = @Original_FK_tblJC)) AND" & _
                " ((@IsNull_txtDesc = 1 AND [txtDesc] IS NULL) OR ([txtDesc] = @Original_txtDesc)" & _
                ") AND ((@IsNull_dblMin = 1 AND [dblMin] IS NULL) OR ([dblMin] = @Original_dblMin" & _
                ")) AND ((@IsNull_dblHour = 1 AND [dblHour] IS NULL) OR ([dblHour] = @Original_db" & _
                "lHour)) AND ((@IsNull_txtOp1 = 1 AND [txtOp1] IS NULL) OR ([txtOp1] = @Original_" & _
                "txtOp1)) AND ((@IsNull_txtOp2 = 1 AND [txtOp2] IS NULL) OR ([txtOp2] = @Original" & _
                "_txtOp2)) AND ((@IsNull_txtNotes = 1 AND [txtNotes] IS NULL) OR ([txtNotes] = @O" & _
                "riginal_txtNotes)))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FK_tblJC", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FK_tblJC", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@txtDesc", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "txtDesc", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@dblMin", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "dblMin", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@dblHour", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "dblHour", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@txtOp1", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "txtOp1", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@txtOp2", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "txtOp2", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@txtNotes", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "txtNotes", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_id_tblJCLabour", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "id_tblJCLabour", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FK_tblJC", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FK_tblJC", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FK_tblJC", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FK_tblJC", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_txtDesc", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "txtDesc", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_txtDesc", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "txtDesc", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_dblMin", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "dblMin", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_dblMin", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "dblMin", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_dblHour", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "dblHour", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_dblHour", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "dblHour", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_txtOp1", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "txtOp1", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_txtOp1", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "txtOp1", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_txtOp2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "txtOp2", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_txtOp2", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "txtOp2", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_txtNotes", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "txtNotes", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_txtNotes", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "txtNotes", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.CCP.My.MySettings.Default.ConnectionString1
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        id_tblJCLabour, FK_tblJC, txtDesc, dblMin, dblHour, txtOp1, txtOp2," & _
                " txtNotes" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "FROM            tblJCLabour" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "WHERE        (FK_tblJC = @fk_tblJC)"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@fk_tblJC", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "FK_tblJC", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, True)> _
        Public Overridable Overloads Function Fill(ByVal dataTable As MyProdDBDataSet.tblJCLabourDataTable, ByVal fk_tblJC As Global.System.Nullable(Of Integer)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (fk_tblJC.HasValue = True) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(fk_tblJC.Value, Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = True) Then
                dataTable.Clear()
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], True)> _
        Public Overridable Overloads Function GetData(ByVal fk_tblJC As Global.System.Nullable(Of Integer)) As MyProdDBDataSet.tblJCLabourDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (fk_tblJC.HasValue = True) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(fk_tblJC.Value, Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As MyProdDBDataSet.tblJCLabourDataTable = New MyProdDBDataSet.tblJCLabourDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
        Public Overridable Overloads Function Update(ByVal dataTable As MyProdDBDataSet.tblJCLabourDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
        Public Overridable Overloads Function Update(ByVal dataSet As MyProdDBDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "tblJCLabour")
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
        Public Overridable Overloads Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
        Public Overridable Overloads Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, True)> _
        Public Overridable Overloads Function Delete(ByVal Original_id_tblJCLabour As Integer, ByVal Original_FK_tblJC As Global.System.Nullable(Of Integer), ByVal Original_txtDesc As String, ByVal Original_dblMin As Global.System.Nullable(Of Double), ByVal Original_dblHour As Global.System.Nullable(Of Double), ByVal Original_txtOp1 As String, ByVal Original_txtOp2 As String, ByVal Original_txtNotes As String) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_id_tblJCLabour, Integer)
            If (Original_FK_tblJC.HasValue = True) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_FK_tblJC.Value, Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (Original_txtDesc Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_txtDesc, String)
            End If
            If (Original_dblMin.HasValue = True) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_dblMin.Value, Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (Original_dblHour.HasValue = True) Then
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_dblHour.Value, Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (Original_txtOp1 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_txtOp1, String)
            End If
            If (Original_txtOp2 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_txtOp2, String)
            End If
            If (Original_txtNotes Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(Original_txtNotes, String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open) _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open()
            End If
            Try
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close()
                End If
            End Try
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, True)> _
        Public Overridable Overloads Function Insert(ByVal FK_tblJC As Global.System.Nullable(Of Integer), ByVal txtDesc As String, ByVal dblMin As Global.System.Nullable(Of Double), ByVal dblHour As Global.System.Nullable(Of Double), ByVal txtOp1 As String, ByVal txtOp2 As String, ByVal txtNotes As String) As Integer
            If (FK_tblJC.HasValue = True) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(FK_tblJC.Value, Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (txtDesc Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(txtDesc, String)
            End If
            If (dblMin.HasValue = True) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(dblMin.Value, Double)
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (dblHour.HasValue = True) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(dblHour.Value, Double)
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (txtOp1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(txtOp1, String)
            End If
            If (txtOp2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(txtOp2, String)
            End If
            If (txtNotes Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(txtNotes, String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open) _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open()
            End If
            Try
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close()
                End If
            End Try
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, True)> _
        Public Overridable Overloads Function Update(ByVal FK_tblJC As Global.System.Nullable(Of Integer), ByVal txtDesc As String, ByVal dblMin As Global.System.Nullable(Of Double), ByVal dblHour As Global.System.Nullable(Of Double), ByVal txtOp1 As String, ByVal txtOp2 As String, ByVal txtNotes As String, ByVal Original_id_tblJCLabour As Integer, ByVal Original_FK_tblJC As Global.System.Nullable(Of Integer), ByVal Original_txtDesc As String, ByVal Original_dblMin As Global.System.Nullable(Of Double), ByVal Original_dblHour As Global.System.Nullable(Of Double), ByVal Original_txtOp1 As String, ByVal Original_txtOp2 As String, ByVal Original_txtNotes As String) As Integer
            If (FK_tblJC.HasValue = True) Then
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(FK_tblJC.Value, Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (txtDesc Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(txtDesc, String)
            End If
            If (dblMin.HasValue = True) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(dblMin.Value, Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (dblHour.HasValue = True) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(dblHour.Value, Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (txtOp1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(txtOp1, String)
            End If
            If (txtOp2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(txtOp2, String)
            End If
            If (txtNotes Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(txtNotes, String)
            End If
            Me.Adapter.UpdateCommand.Parameters(7).Value = CType(Original_id_tblJCLabour, Integer)
            If (Original_FK_tblJC.HasValue = True) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(Original_FK_tblJC.Value, Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (Original_txtDesc Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(Original_txtDesc, String)
            End If
            If (Original_dblMin.HasValue = True) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(Original_dblMin.Value, Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (Original_dblHour.HasValue = True) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(Original_dblHour.Value, Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (Original_txtOp1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(Original_txtOp1, String)
            End If
            If (Original_txtOp2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(Original_txtOp2, String)
            End If
            If (Original_txtNotes Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(21).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(Original_txtNotes, String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open) _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open()
            End If
            Try
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close()
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD"& _ 
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")>  _
    Partial Public Class TableAdapterManager
        Inherits Global.System.ComponentModel.Component
        
        Private _updateOrder As UpdateOrderOption
        
        Private _tblProductTableAdapter As tblProductTableAdapter
        
        Private _tblCoInfoTableAdapter As tblCoInfoTableAdapter
        
        Private _tblJCMaterialTableAdapter As tblJCMaterialTableAdapter
        
        Private _tblJCLabourTableAdapter As tblJCLabourTableAdapter
        
        Private _backupDataSetBeforeUpdate As Boolean
        
        Private _connection As Global.System.Data.IDbConnection
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UpdateOrder() As UpdateOrderOption
            Get
                Return Me._updateOrder
            End Get
            Set
                Me._updateOrder = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property tblProductTableAdapter() As tblProductTableAdapter
            Get
                Return Me._tblProductTableAdapter
            End Get
            Set
                Me._tblProductTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property tblCoInfoTableAdapter() As tblCoInfoTableAdapter
            Get
                Return Me._tblCoInfoTableAdapter
            End Get
            Set
                Me._tblCoInfoTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property tblJCMaterialTableAdapter() As tblJCMaterialTableAdapter
            Get
                Return Me._tblJCMaterialTableAdapter
            End Get
            Set
                Me._tblJCMaterialTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property tblJCLabourTableAdapter() As tblJCLabourTableAdapter
            Get
                Return Me._tblJCLabourTableAdapter
            End Get
            Set
                Me._tblJCLabourTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BackupDataSetBeforeUpdate() As Boolean
            Get
                Return Me._backupDataSetBeforeUpdate
            End Get
            Set
                Me._backupDataSetBeforeUpdate = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public Property Connection() As Global.System.Data.IDbConnection
            Get
                If (Not (Me._connection) Is Nothing) Then
                    Return Me._connection
                End If
                If ((Not (Me._tblProductTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._tblProductTableAdapter.Connection) Is Nothing)) Then
                    Return Me._tblProductTableAdapter.Connection
                End If
                If ((Not (Me._tblCoInfoTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._tblCoInfoTableAdapter.Connection) Is Nothing)) Then
                    Return Me._tblCoInfoTableAdapter.Connection
                End If
                If ((Not (Me._tblJCMaterialTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._tblJCMaterialTableAdapter.Connection) Is Nothing)) Then
                    Return Me._tblJCMaterialTableAdapter.Connection
                End If
                If ((Not (Me._tblJCLabourTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._tblJCLabourTableAdapter.Connection) Is Nothing)) Then
                    Return Me._tblJCLabourTableAdapter.Connection
                End If
                Return Nothing
            End Get
            Set
                Me._connection = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property TableAdapterInstanceCount() As Integer
            Get
                Dim count As Integer = 0
                If (Not (Me._tblProductTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._tblCoInfoTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._tblJCMaterialTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._tblJCLabourTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                Return count
            End Get
        End Property
        
        '''<summary>
        '''Update rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateUpdatedRows(ByVal dataSet As MyProdDBDataSet, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow), ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._tblJCLabourTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.tblJCLabour.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._tblJCLabourTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._tblJCMaterialTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.tblJCMaterial.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._tblJCMaterialTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._tblCoInfoTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.tblCoInfo.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._tblCoInfoTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._tblProductTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.tblProduct.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._tblProductTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Insert rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateInsertedRows(ByVal dataSet As MyProdDBDataSet, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._tblJCLabourTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.tblJCLabour.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._tblJCLabourTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._tblJCMaterialTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.tblJCMaterial.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._tblJCMaterialTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._tblCoInfoTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.tblCoInfo.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._tblCoInfoTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._tblProductTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.tblProduct.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._tblProductTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Delete rows in bottom-up order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateDeletedRows(ByVal dataSet As MyProdDBDataSet, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._tblProductTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.tblProduct.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._tblProductTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._tblCoInfoTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.tblCoInfo.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._tblCoInfoTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._tblJCMaterialTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.tblJCMaterial.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._tblJCMaterialTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._tblJCLabourTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.tblJCLabour.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._tblJCLabourTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function GetRealUpdatedRows(ByVal updatedRows() As Global.System.Data.DataRow, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Global.System.Data.DataRow()
            If ((updatedRows Is Nothing)  _
                        OrElse (updatedRows.Length < 1)) Then
                Return updatedRows
            End If
            If ((allAddedRows Is Nothing)  _
                        OrElse (allAddedRows.Count < 1)) Then
                Return updatedRows
            End If
            Dim realUpdatedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim i As Integer = 0
            Do While (i < updatedRows.Length)
                Dim row As Global.System.Data.DataRow = updatedRows(i)
                If (allAddedRows.Contains(row) = false) Then
                    realUpdatedRows.Add(row)
                End If
                i = (i + 1)
            Loop
            Return realUpdatedRows.ToArray
        End Function
        
        '''<summary>
        '''Update all changes to the dataset.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overridable Function UpdateAll(ByVal dataSet As MyProdDBDataSet) As Integer
            If (dataSet Is Nothing) Then
                Throw New Global.System.ArgumentNullException("dataSet")
            End If
            If (dataSet.HasChanges = false) Then
                Return 0
            End If
            If ((Not (Me._tblProductTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._tblProductTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._tblCoInfoTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._tblCoInfoTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._tblJCMaterialTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._tblJCMaterialTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._tblJCLabourTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._tblJCLabourTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            Dim workConnection As Global.System.Data.IDbConnection = Me.Connection
            If (workConnection Is Nothing) Then
                Throw New Global.System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana"& _ 
                        "ger TableAdapter property to a valid TableAdapter instance.")
            End If
            Dim workConnOpened As Boolean = false
            If ((workConnection.State And Global.System.Data.ConnectionState.Broken)  _
                        = Global.System.Data.ConnectionState.Broken) Then
                workConnection.Close
            End If
            If (workConnection.State = Global.System.Data.ConnectionState.Closed) Then
                workConnection.Open
                workConnOpened = true
            End If
            Dim workTransaction As Global.System.Data.IDbTransaction = workConnection.BeginTransaction
            If (workTransaction Is Nothing) Then
                Throw New Global.System.ApplicationException("The transaction cannot begin. The current data connection does not support transa"& _ 
                        "ctions or the current state is not allowing the transaction to begin.")
            End If
            Dim allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim adaptersWithAcceptChangesDuringUpdate As Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter) = New Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter)()
            Dim revertConnections As Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection) = New Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection)()
            Dim result As Integer = 0
            Dim backupDataSet As Global.System.Data.DataSet = Nothing
            If Me.BackupDataSetBeforeUpdate Then
                backupDataSet = New Global.System.Data.DataSet()
                backupDataSet.Merge(dataSet)
            End If
            Try 
                '---- Prepare for update -----------
                '
                If (Not (Me._tblProductTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._tblProductTableAdapter, Me._tblProductTableAdapter.Connection)
                    Me._tblProductTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._tblProductTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._tblProductTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._tblProductTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._tblProductTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._tblCoInfoTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._tblCoInfoTableAdapter, Me._tblCoInfoTableAdapter.Connection)
                    Me._tblCoInfoTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._tblCoInfoTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._tblCoInfoTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._tblCoInfoTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._tblCoInfoTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._tblJCMaterialTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._tblJCMaterialTableAdapter, Me._tblJCMaterialTableAdapter.Connection)
                    Me._tblJCMaterialTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._tblJCMaterialTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._tblJCMaterialTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._tblJCMaterialTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._tblJCMaterialTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._tblJCLabourTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._tblJCLabourTableAdapter, Me._tblJCLabourTableAdapter.Connection)
                    Me._tblJCLabourTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._tblJCLabourTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._tblJCLabourTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._tblJCLabourTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._tblJCLabourTableAdapter.Adapter)
                    End If
                End If
                '
                '---- Perform updates -----------
                '
                If (Me.UpdateOrder = UpdateOrderOption.UpdateInsertDelete) Then
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                Else
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                End If
                result = (result + Me.UpdateDeletedRows(dataSet, allChangedRows))
                '
                '---- Commit updates -----------
                '
                workTransaction.Commit
                If (0 < allAddedRows.Count) Then
                    Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                    allAddedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
                If (0 < allChangedRows.Count) Then
                    Dim rows((allChangedRows.Count) - 1) As Global.System.Data.DataRow
                    allChangedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
            Catch ex As Global.System.Exception
                workTransaction.Rollback
                '---- Restore the dataset -----------
                If Me.BackupDataSetBeforeUpdate Then
                    Global.System.Diagnostics.Debug.Assert((Not (backupDataSet) Is Nothing))
                    dataSet.Clear
                    dataSet.Merge(backupDataSet)
                Else
                    If (0 < allAddedRows.Count) Then
                        Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                        allAddedRows.CopyTo(rows)
                        Dim i As Integer = 0
                        Do While (i < rows.Length)
                            Dim row As Global.System.Data.DataRow = rows(i)
                            row.AcceptChanges
                            row.SetAdded
                            i = (i + 1)
                        Loop
                    End If
                End If
                Throw ex
            Finally
                If workConnOpened Then
                    workConnection.Close
                End If
                If (Not (Me._tblProductTableAdapter) Is Nothing) Then
                    Me._tblProductTableAdapter.Connection = CType(revertConnections(Me._tblProductTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._tblProductTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._tblCoInfoTableAdapter) Is Nothing) Then
                    Me._tblCoInfoTableAdapter.Connection = CType(revertConnections(Me._tblCoInfoTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._tblCoInfoTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._tblJCMaterialTableAdapter) Is Nothing) Then
                    Me._tblJCMaterialTableAdapter.Connection = CType(revertConnections(Me._tblJCMaterialTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._tblJCMaterialTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._tblJCLabourTableAdapter) Is Nothing) Then
                    Me._tblJCLabourTableAdapter.Connection = CType(revertConnections(Me._tblJCLabourTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._tblJCLabourTableAdapter.Transaction = Nothing
                End If
                If (0 < adaptersWithAcceptChangesDuringUpdate.Count) Then
                    Dim adapters((adaptersWithAcceptChangesDuringUpdate.Count) - 1) As Global.System.Data.Common.DataAdapter
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters)
                    Dim i As Integer = 0
                    Do While (i < adapters.Length)
                        Dim adapter As Global.System.Data.Common.DataAdapter = adapters(i)
                        adapter.AcceptChangesDuringUpdate = true
                        i = (i + 1)
                    Loop
                End If
            End Try
            Return result
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overridable Sub SortSelfReferenceRows(ByVal rows() As Global.System.Data.DataRow, ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
            Global.System.Array.Sort(Of Global.System.Data.DataRow)(rows, New SelfReferenceComparer(relation, childFirst))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overridable Function MatchTableAdapterConnection(ByVal inputConnection As Global.System.Data.IDbConnection) As Boolean
            If (Not (Me._connection) Is Nothing) Then
                Return true
            End If
            If ((Me.Connection Is Nothing)  _
                        OrElse (inputConnection Is Nothing)) Then
                Return true
            End If
            If String.Equals(Me.Connection.ConnectionString, inputConnection.ConnectionString, Global.System.StringComparison.Ordinal) Then
                Return true
            End If
            Return false
        End Function
        
        '''<summary>
        '''Update Order Option
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Enum UpdateOrderOption
            
            InsertUpdateDelete = 0
            
            UpdateInsertDelete = 1
        End Enum
        
        '''<summary>
        '''Used to sort self-referenced table's rows
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Class SelfReferenceComparer
            Inherits Object
            Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow)
            
            Private _relation As Global.System.Data.DataRelation
            
            Private _childFirst As Integer
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Friend Sub New(ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
                MyBase.New
                Me._relation = relation
                If childFirst Then
                    Me._childFirst = -1
                Else
                    Me._childFirst = 1
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Private Function GetRoot(ByVal row As Global.System.Data.DataRow, ByRef distance As Integer) As Global.System.Data.DataRow
                Global.System.Diagnostics.Debug.Assert((Not (row) Is Nothing))
                Dim root As Global.System.Data.DataRow = row
                distance = 0

                Dim traversedRows As Global.System.Collections.Generic.IDictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow) = New Global.System.Collections.Generic.Dictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow)()
                traversedRows(row) = row

                Dim parent As Global.System.Data.DataRow = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Do While ((Not (parent) Is Nothing)  _
                            AndAlso (traversedRows.ContainsKey(parent) = false))
                    distance = (distance + 1)
                    root = parent
                    traversedRows(parent) = parent
                    parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Loop

                If (distance = 0) Then
                    traversedRows.Clear
                    traversedRows(row) = row
                    parent = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Do While ((Not (parent) Is Nothing)  _
                                AndAlso (traversedRows.ContainsKey(parent) = false))
                        distance = (distance + 1)
                        root = parent
                        traversedRows(parent) = parent
                        parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Loop
                End If

                Return root
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function Compare(ByVal row1 As Global.System.Data.DataRow, ByVal row2 As Global.System.Data.DataRow) As Integer Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow).Compare
                If Object.ReferenceEquals(row1, row2) Then
                    Return 0
                End If
                If (row1 Is Nothing) Then
                    Return -1
                End If
                If (row2 Is Nothing) Then
                    Return 1
                End If

                Dim distance1 As Integer = 0
                Dim root1 As Global.System.Data.DataRow = Me.GetRoot(row1, distance1)

                Dim distance2 As Integer = 0
                Dim root2 As Global.System.Data.DataRow = Me.GetRoot(row2, distance2)

                If Object.ReferenceEquals(root1, root2) Then
                    Return (Me._childFirst * distance1.CompareTo(distance2))
                Else
                    Global.System.Diagnostics.Debug.Assert(((Not (root1.Table) Is Nothing)  _
                                    AndAlso (Not (root2.Table) Is Nothing)))
                    If (root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2)) Then
                        Return -1
                    Else
                        Return 1
                    End If
                End If
            End Function
        End Class
    End Class
End Namespace
